baseboard/dragonegg/usb_pd_policy.c:105:48: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  return reg & TCPC_REG_POWER_STATUS_VBUS_PRES ? 1 : 0;
                                               ^
baseboard/fwk/battery.c:267:6: error: Uninitialized variable: rv [uninitvar]
 if (rv != EC_SUCCESS)
     ^
baseboard/fwk/battery.c:242:6: style: Variable 'rv' is not assigned a value. [unassignedVariable]
 int rv;
     ^
baseboard/fwk/battery.c:148:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
baseboard/fwk/fan.c:83:11: style: The scope of the variable 'max' can be reduced. [variableScope]
 int pct, max, min;
          ^
baseboard/fwk/fan.c:83:16: style: The scope of the variable 'min' can be reduced. [variableScope]
 int pct, max, min;
               ^
baseboard/fwk/flash_storage.c:142:6: style: The scope of the variable 'data' can be reduced. [variableScope]
 int data;
     ^
baseboard/fwk/flash_storage.c:143:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i, d;
     ^
baseboard/fwk/flash_storage.c:143:9: style: The scope of the variable 'd' can be reduced. [variableScope]
 int i, d;
        ^
baseboard/fwk/ps2mouse.c:467:6: style: The scope of the variable 'evt' can be reduced. [variableScope]
 int evt;
     ^
baseboard/fwk/ps2mouse.c:456:14: style: Variable 'need_reset' is assigned a value that is never used. [unreadVariable]
  need_reset = 0;
             ^
baseboard/fwk/ps2mouse.c:466:18: style: Variable 'power_state' is assigned a value that is never used. [unreadVariable]
 int power_state = 0;
                 ^
baseboard/fwk/system_serial.c:90:15: style: The scope of the variable 'tbl_idx' can be reduced. [variableScope]
 unsigned int tbl_idx;
              ^
baseboard/fwk/system_serial.c:240:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
baseboard/fwk/system_serial.c:263:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
baseboard/fwk/system_serial.c:265:8: style: The scope of the variable 'serial' can be reduced. [variableScope]
 char *serial;
       ^
baseboard/fwk/system_serial.c:126:29: portability: '(void*)(&serials_info)' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
    (void *)(&serials_info) + i);
                            ^
baseboard/fwk/system_serial.c:137:42: portability: '(void*)(&serials_info)' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
  spi_flash_read((void *)(&serials_info) + i, address + i,
                                         ^
baseboard/intelrvp/chg_usb_pd.c:40:6: style: The scope of the variable 'ilim_en' can be reduced. [variableScope]
 int ilim_en;
     ^
baseboard/ite_evb/baseboard.c:48:0: information: Skipping configuration 'CONFIG_FANS;CONFIG_PWM' since the value of 'CONFIG_FANS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
BUILD_ASSERT(ARRAY_SIZE(fans) == CONFIG_FANS);
^
baseboard/ite_evb/baseboard.c:128:0: information: Skipping configuration 'CONFIG_SPI_FLASH_PORT' since the value of 'CONFIG_SPI_FLASH_PORT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 [CONFIG_SPI_FLASH_PORT] = {
^
baseboard/ite_evb/baseboard.c:129:0: information: Skipping configuration 'CONFIG_SPI_FLASH_PORT' since the value of 'CONFIG_SPI_FLASH_PORT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  .port = CONFIG_SPI_FLASH_PORT,
^
baseboard/kukui/charger_mt6370.c:318:16: style: Redundant initialization for 'chg_limit_mv'. The initialized value is overwritten before it is read. [redundantInitialization]
  chg_limit_mv = 5500;
               ^
baseboard/kukui/charger_mt6370.c:268:19: note: chg_limit_mv is initialized
 int chg_limit_mv = pd_get_max_voltage();
                  ^
baseboard/kukui/charger_mt6370.c:318:16: note: chg_limit_mv is overwritten
  chg_limit_mv = 5500;
               ^
baseboard/kukui/emmc.c:313:6: style: The scope of the variable 'dma_pos' can be reduced. [variableScope]
 int dma_pos, i;
     ^
baseboard/kukui/emmc.c:313:15: style: The scope of the variable 'i' can be reduced. [variableScope]
 int dma_pos, i;
              ^
baseboard/kukui/usb_pd_policy.c:245:17: style:inconclusive: Boolean expression '!lvl' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
 } else if (irq & !lvl) {
                ^
baseboard/kukui/usb_pd_policy.c:245:17: style: Boolean result is used in bitwise operation. Clarify expression with parentheses. [clarifyCondition]
 } else if (irq & !lvl) {
                ^
baseboard/trogdor/usb_pd_policy.c:238:17: style:inconclusive: Boolean expression '!lvl' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
 } else if (irq & !lvl) {
                ^
baseboard/trogdor/usb_pd_policy.c:238:17: style: Boolean result is used in bitwise operation. Clarify expression with parentheses. [clarifyCondition]
 } else if (irq & !lvl) {
                ^
baseboard/zork/baseboard.c:268:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
board/ampton/battery.c:128:6: style: The scope of the variable 'port' can be reduced. [variableScope]
 int port;
     ^
board/atlas/battery.c:108:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
board/cheza/board.c:545:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
board/coffeecake/board.c:119:6: style: The scope of the variable 'dac_mv' can be reduced. [variableScope]
 int dac_mv;
     ^
board/coffeecake/board.c:120:11: style: The scope of the variable 'dac_val' can be reduced. [variableScope]
 uint32_t dac_val;
          ^
board/coral/battery.c:421:22: style: The scope of the variable 'device_name' can be reduced. [variableScope]
 char manu_name[32], device_name[32];
                     ^
board/coral/battery.c:422:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
board/coral/board.c:897:6: style: The scope of the variable 'sku_id_lower' can be reduced. [variableScope]
 int sku_id_lower;
     ^
board/coral/board.c:898:6: style: The scope of the variable 'sku_id_higher' can be reduced. [variableScope]
 int sku_id_higher;
     ^
board/dooly/board.c:773:17: style: The scope of the variable 'index' can be reduced. [variableScope]
 static uint8_t index;
                ^
board/dratini/battery.c:104:6: style: The scope of the variable 'port' can be reduced. [variableScope]
 int port;
     ^
board/elm/usb_pd_policy.c:80:30: style:inconclusive: Boolean expression '!cur_lvl' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
 if (!(irq & cur_lvl) && irq & !cur_lvl) {
                             ^
board/elm/usb_pd_policy.c:80:30: style: Boolean result is used in bitwise operation. Clarify expression with parentheses. [clarifyCondition]
 if (!(irq & cur_lvl) && irq & !cur_lvl) {
                             ^
board/eve/battery.c:137:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
board/eve/board.c:537:6: style: The scope of the variable 'port' can be reduced. [variableScope]
 int port;
     ^
board/eve/led.c:413:6: style: The scope of the variable 'color' can be reduced. [variableScope]
 int color;
     ^
board/eve/led.c:414:6: style: The scope of the variable 'phase' can be reduced. [variableScope]
 int phase;
     ^
board/eve/led.c:594:11: style: The scope of the variable 'start_time' can be reduced. [variableScope]
 uint32_t start_time;
          ^
board/eve/led.c:595:11: style: The scope of the variable 'task_duration' can be reduced. [variableScope]
 uint32_t task_duration;
          ^
board/eve/led.c:475:19: style: Local variable 'pattern' shadows outer variable [shadowVariable]
 enum led_pattern pattern = OFF;
                  ^
board/eve/led.c:112:31: note: Shadowed declaration
static const struct led_phase pattern[LED_NUM_PATTERNS] = {
                              ^
board/eve/led.c:475:19: note: Shadow variable
 enum led_pattern pattern = OFF;
                  ^
board/eve/usb_pd_policy.c:44:6: style: The scope of the variable 'flags' can be reduced. [variableScope]
 int flags;
     ^
board/flapjack/battery.c:417:32: style: Redundant condition: If 'zone == 4', the comparison 'zone >= 4' is always true. [redundantCondition]
 if (zone == TEMP_OUT_OF_RANGE || zone >= TEMP_ZONE_COUNT) {
                               ^
board/flapjack/board.c:137:42: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  channel = sku & SKU_ID_PANEL_SIZE_MASK ? 0xfe : 0xfa;
                                         ^
board/flapjack/board.c:138:38: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  dim = sku & SKU_ID_PANEL_SIZE_MASK ? 0xc4 : 0xc8;
                                     ^
board/flapjack/emmc.c:313:6: style: The scope of the variable 'dma_pos' can be reduced. [variableScope]
 int dma_pos, i;
     ^
board/flapjack/emmc.c:313:15: style: The scope of the variable 'i' can be reduced. [variableScope]
 int dma_pos, i;
              ^
board/flapjack/usb_pd_policy.c:130:17: style:inconclusive: Boolean expression '!cur_lvl' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
 } else if (irq & !cur_lvl) {
                ^
board/flapjack/usb_pd_policy.c:130:17: style: Boolean result is used in bitwise operation. Clarify expression with parentheses. [clarifyCondition]
 } else if (irq & !cur_lvl) {
                ^
board/fluffy/board.c:371:13: style: The scope of the variable 'prev_vbus_mv' can be reduced. [variableScope]
 static int prev_vbus_mv;
            ^
board/fluffy/board.c:372:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
board/fluffy/board.c:373:6: style: The scope of the variable 'act' can be reduced. [variableScope]
 int act;
     ^
board/fusb307bgevb/board.c:75:3: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
  snprintf(c, ARRAY_SIZE(c), "[%d] %dmV %dmA", i, mv, ma);
  ^
board/fusb307bgevb/board.c:75:3: warning: %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
  snprintf(c, ARRAY_SIZE(c), "[%d] %dmV %dmA", i, mv, ma);
  ^
board/fusb307bgevb/board.c:110:4: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   snprintf(c, ARRAY_SIZE(c), "[%d] %dmV %dmA", i, mv, ma);
   ^
board/fusb307bgevb/board.c:110:4: warning: %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   snprintf(c, ARRAY_SIZE(c), "[%d] %dmV %dmA", i, mv, ma);
   ^
board/fusb307bgevb/board.c:119:4: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   snprintf(c, ARRAY_SIZE(c), "[%d] %dmV %dmA", i, mv, ma);
   ^
board/fusb307bgevb/board.c:119:4: warning: %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   snprintf(c, ARRAY_SIZE(c), "[%d] %dmV %dmA", i, mv, ma);
   ^
board/hammer/board.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
board/hammer/board.c:287:11: style: The scope of the variable 'start' can be reduced. [variableScope]
 uint32_t start;
          ^
board/host/board.c:65:0: information: Skipping configuration 'CONFIG_I2C;I2C_PORT_BATTERY' since the value of 'I2C_PORT_BATTERY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 {"battery", I2C_PORT_BATTERY, 100,  0, 0},
^
board/host/board.c:71:0: information: Skipping configuration 'CONFIG_I2C;I2C_PORT_EEPROM' since the value of 'I2C_PORT_EEPROM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 {"eeprom", I2C_PORT_EEPROM, 100, 0, 0},
^
board/host/board.c:113:0: information: Skipping configuration 'CONFIG_I2C;I2C_PORT_EEPROM' since the value of 'I2C_PORT_EEPROM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (port != I2C_PORT_EEPROM || addr_flags != I2C_ADDR_EEPROM_FLAGS)
^
board/host/board.c:69:0: information: Skipping configuration 'CONFIG_I2C;I2C_PORT_HOST_TCPC' since the value of 'I2C_PORT_HOST_TCPC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 {"tcpc", I2C_PORT_HOST_TCPC, 100,  0, 0},
^
board/host/board.c:67:0: information: Skipping configuration 'CONFIG_I2C;I2C_PORT_LIGHTBAR' since the value of 'I2C_PORT_LIGHTBAR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 {"lightbar", I2C_PORT_LIGHTBAR, 100,  0, 0},
^
board/hx20/board.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
board/hx20/board.c:1092:18: style: The scope of the variable 'duration' can be reduced. [variableScope]
 static uint64_t duration;
                 ^
board/hx20/board.c:1219:10: style: The scope of the variable 'ram_addr' can be reduced. [variableScope]
 uint8_t ram_addr;
         ^
board/hx20/cpu_power.c:105:11: style: The scope of the variable 'pl1' can be reduced. [variableScope]
 uint32_t pl1, pl2, pl4, psys;
          ^
board/hx20/cpu_power.c:105:16: style: The scope of the variable 'pl2' can be reduced. [variableScope]
 uint32_t pl1, pl2, pl4, psys;
               ^
board/hx20/cpu_power.c:105:21: style: The scope of the variable 'pl4' can be reduced. [variableScope]
 uint32_t pl1, pl2, pl4, psys;
                    ^
board/hx20/cpu_power.c:105:26: style: The scope of the variable 'psys' can be reduced. [variableScope]
 uint32_t pl1, pl2, pl4, psys;
                         ^
board/hx20/cypress5525.c:1004:21: style: Expression is always false because 'else if' condition matches previous condition at line 1002. [multiCondition]
  else if (data2[0] == CYPD_RESPONSE_EXT_MSG_SOP_RX)
                    ^
board/hx20/cypress5525.c:1006:21: style: Expression is always false because 'else if' condition matches previous condition at line 1002. [multiCondition]
  else if (data2[0] == CYPD_RESPONSE_EXT_MSG_SOP_RX)
                    ^
board/hx20/cypress5525.c:1929:14: style: Condition 'chunked' is always false [knownConditionTrueFalse]
  data[1] |= chunked ? BIT(15) : 0x00;
             ^
board/hx20/cypress5525.c:1904:16: note: Assignment 'chunked=0', assigned value is 0
 int chunked = 0;
               ^
board/hx20/cypress5525.c:1929:14: note: Condition 'chunked' is always false
  data[1] |= chunked ? BIT(15) : 0x00;
             ^
board/hx20/cypress5525.c:453:6: style: The scope of the variable 'port' can be reduced. [variableScope]
 int port;
     ^
board/hx20/cypress5525.c:454:6: style: The scope of the variable 'controller' can be reduced. [variableScope]
 int controller;
     ^
board/hx20/cypress5525.c:559:6: style: The scope of the variable 'port' can be reduced. [variableScope]
 int port;
     ^
board/hx20/cypress5525.c:560:6: style: The scope of the variable 'controller' can be reduced. [variableScope]
 int controller;
     ^
board/hx20/cypress5525.c:964:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i, rv, response_len;
     ^
board/hx20/cypress5525.c:1287:12: style: The scope of the variable 'evt' can be reduced. [variableScope]
 int i, j, evt;
           ^
board/hx20/cypress5525.c:1487:6: style: The scope of the variable 'mask' can be reduced. [variableScope]
 int mask;
     ^
board/hx20/cypress5525.c:1667:9: style: The scope of the variable 'p' can be reduced. [variableScope]
 int i, p, data;
        ^
board/hx20/cypress5525.c:1668:10: style: The scope of the variable 'data16' can be reduced. [variableScope]
 uint8_t data16[16];
         ^
board/hx20/cypress5525.c:1785:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i, enable;
     ^
board/hx20/cypress5525.c:1901:33: style: The scope of the variable 'cmd' can be reduced. [variableScope]
 uint32_t sys_port, port, ctrl, cmd, data_len;
                                ^
board/hx20/cypress5525.c:1901:38: style: The scope of the variable 'data_len' can be reduced. [variableScope]
 uint32_t sys_port, port, ctrl, cmd, data_len;
                                     ^
board/hx20/cypress5525.c:1902:11: style: The scope of the variable 'data' can be reduced. [variableScope]
 uint16_t data[5];
          ^
board/hx20/cypress5525.c:1904:6: style: The scope of the variable 'chunked' can be reduced. [variableScope]
 int chunked = 0;
     ^
board/hx20/cypress5525.c:861:64: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 pd_port_states[port_idx].pd_state = pd_status_reg[1] & BIT(2) ? 1 : 0; /*do we have a valid PD contract*/
                                                               ^
board/hx20/cypress5525.c:862:66: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 pd_port_states[port_idx].power_role = pd_status_reg[1] & BIT(0) ? PD_ROLE_SOURCE : PD_ROLE_SINK;
                                                                 ^
board/hx20/cypress5525.c:863:65: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 pd_port_states[port_idx].data_role = pd_status_reg[0] & BIT(6) ? PD_ROLE_DFP : PD_ROLE_UFP;
                                                                ^
board/hx20/cypress5525.c:864:62: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 pd_port_states[port_idx].vconn =  pd_status_reg[1] & BIT(5) ? PD_ROLE_VCONN_SRC : PD_ROLE_VCONN_OFF;
                                                             ^
board/hx20/cypress5525.c:870:58: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 pd_port_states[port_idx].cc = typec_status_reg & BIT(1) ? POLARITY_CC2 : POLARITY_CC1;
                                                         ^
board/hx20/cypress5525.c:1503:56: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  gpio_set_level(GPIO_TYPEC0_VBUS_ON_EC, mask & BIT(0) ? 1: 0);
                                                       ^
board/hx20/cypress5525.c:1504:56: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  gpio_set_level(GPIO_TYPEC1_VBUS_ON_EC, mask & BIT(1) ? 1: 0);
                                                       ^
board/hx20/cypress5525.c:1505:56: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  gpio_set_level(GPIO_TYPEC2_VBUS_ON_EC, mask & BIT(2) ? 1: 0);
                                                       ^
board/hx20/cypress5525.c:1506:56: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  gpio_set_level(GPIO_TYPEC3_VBUS_ON_EC, mask & BIT(3) ? 1: 0);
                                                       ^
board/hx20/cypress5525.c:1911:9: error: Uninitialized variable: sys_port [uninitvar]
 port = sys_port % 2;
        ^
board/hx20/cypress5525.c:1911:9: error: Uninitialized variable: sys_port [uninitvar]
 port = sys_port % 2;
        ^
board/hx20/cypress5525.c:1906:11: note: Assuming condition is false
 if (argc >= 2) {
          ^
board/hx20/cypress5525.c:1911:9: note: Uninitialized variable: sys_port
 port = sys_port % 2;
        ^
board/hx20/cypress5525.c:1912:9: error: Uninitialized variable: sys_port [uninitvar]
 ctrl = sys_port / 2;
        ^
board/hx20/cypress5525.c:1906:11: note: Assuming condition is false
 if (argc >= 2) {
          ^
board/hx20/cypress5525.c:1912:9: note: Uninitialized variable: sys_port
 ctrl = sys_port / 2;
        ^
board/hx20/cypress5525.c:532:6: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
  rv = cypd_get_int(controller, &data);
     ^
board/hx20/cypress5525.c:884:5: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
 rv = cypd_read_reg_block(controller, CYP5525_CURRENT_PDO_REG(port), pdo_reg, 4);
    ^
board/hx20/host_command_customization.c:274:49: style:inconclusive: Boolean expression '!gpio_get_level(GPIO_CHASSIS_OPEN)' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
 r->status = !gpio_get_level(GPIO_CHASSIS_OPEN) & 0x01;
                                                ^
board/hx20/host_command_customization.c:274:49: style: Boolean result is used in bitwise operation. Clarify expression with parentheses. [clarifyCondition]
 r->status = !gpio_get_level(GPIO_CHASSIS_OPEN) & 0x01;
                                                ^
board/hx20/i2c_hid_mediakeys.c:365:11: style: The scope of the variable 'event' can be reduced. [variableScope]
 uint32_t event;
          ^
board/hx20/keyboard_customization.c:231:13: style: Condition '!pressed' is always true [knownConditionTrueFalse]
 } else if (!pressed && (fn_key_table_media & fn_bit)) {
            ^
board/hx20/keyboard_customization.c:228:6: note: Assuming that condition 'pressed' is not redundant
 if (pressed) {
     ^
board/hx20/keyboard_customization.c:231:13: note: Condition '!pressed' is always true
 } else if (!pressed && (fn_key_table_media & fn_bit)) {
            ^
board/hx20/keyboard_customization.c:413:10: style: The scope of the variable 'bl_brightness' can be reduced. [variableScope]
 uint8_t bl_brightness = 0;
         ^
board/hx20/led.c:325:10: style: The scope of the variable 'breath_led_level' can be reduced. [variableScope]
 uint8_t breath_led_level = FP_LED_HIGH;
         ^
board/hx20/led.c:214:27: style: Variable 'port_charging_active' is assigned a value that is never used. [unreadVariable]
 int port_charging_active = 0;
                          ^
board/hx20/peci_customization.c:38:9: style: Variable 'out[3]' is assigned a value that is never used. [unreadVariable]
 out[3] = ((parameter >> 8) & 0xff);
        ^
board/hx20/power_button_x86.c:504:11: style: The scope of the variable 't' can be reduced. [variableScope]
 uint64_t t;
          ^
board/hx20/power_button_x86.c:505:11: style: The scope of the variable 'tsleep' can be reduced. [variableScope]
 uint64_t tsleep;
          ^
board/hx20/power_sequence.c:223:39: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 me_gpio_change(me_change & ME_UNLOCK ? GPIO_OUT_HIGH : GPIO_OUT_LOW);
                                      ^
board/hx20/ucsi.c:321:8: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
   cci = &pd_chip_ucsi_info[0].cci;
       ^
board/hx20/ucsi.c:342:9: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
    cci = &pd_chip_ucsi_info[0].cci;
        ^
board/hx20/ucsi.c:145:6: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
  rv = cypd_write_reg_block(i, CYP5525_CONTROL_REG, command, 8);
     ^
board/hx20/ucsi.c:144:6: note: rv is assigned
  rv = cypd_write_reg_block(i, CYP5525_MESSAGE_OUT_REG, message_out, 16);
     ^
board/hx20/ucsi.c:145:6: note: rv is overwritten
  rv = cypd_write_reg_block(i, CYP5525_CONTROL_REG, command, 8);
     ^
board/hx20/ucsi.c:264:8: style: The scope of the variable 'message_in' can be reduced. [variableScope]
 void *message_in;
       ^
board/hx20/ucsi.c:265:8: style: The scope of the variable 'cci' can be reduced. [variableScope]
 void *cci;
       ^
board/hx20/ucsi.c:268:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
board/hx20/ucsi.c:46:21: style: The scope of the variable 'response_codes' can be reduced. [variableScope]
 static const char *response_codes[0x14] = {
                    ^
board/hx30/board.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
board/hx30/board.c:1184:18: style: The scope of the variable 'duration' can be reduced. [variableScope]
 static uint64_t duration;
                 ^
board/hx30/board.c:1292:10: style: The scope of the variable 'ram_addr' can be reduced. [variableScope]
 uint8_t ram_addr;
         ^
board/hx30/cpu_power.c:118:11: style: The scope of the variable 'pl1' can be reduced. [variableScope]
 uint32_t pl1, pl2, pl4, psys;
          ^
board/hx30/cpu_power.c:118:16: style: The scope of the variable 'pl2' can be reduced. [variableScope]
 uint32_t pl1, pl2, pl4, psys;
               ^
board/hx30/cpu_power.c:118:21: style: The scope of the variable 'pl4' can be reduced. [variableScope]
 uint32_t pl1, pl2, pl4, psys;
                    ^
board/hx30/cpu_power.c:118:26: style: The scope of the variable 'psys' can be reduced. [variableScope]
 uint32_t pl1, pl2, pl4, psys;
                         ^
board/hx30/cypress5525.c:2245:14: style: Condition 'chunked' is always false [knownConditionTrueFalse]
  data[1] |= chunked ? BIT(15) : 0x00;
             ^
board/hx30/cypress5525.c:2218:16: note: Assignment 'chunked=0', assigned value is 0
 int chunked = 0;
               ^
board/hx30/cypress5525.c:2245:14: note: Condition 'chunked' is always false
  data[1] |= chunked ? BIT(15) : 0x00;
             ^
board/hx30/cypress5525.c:268:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
board/hx30/cypress5525.c:295:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
board/hx30/cypress5525.c:399:6: style: The scope of the variable 'port' can be reduced. [variableScope]
 int port;
     ^
board/hx30/cypress5525.c:400:6: style: The scope of the variable 'controller' can be reduced. [variableScope]
 int controller;
     ^
board/hx30/cypress5525.c:527:6: style: The scope of the variable 'port' can be reduced. [variableScope]
 int port;
     ^
board/hx30/cypress5525.c:528:6: style: The scope of the variable 'controller' can be reduced. [variableScope]
 int controller;
     ^
board/hx30/cypress5525.c:967:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i, rv, response_len;
     ^
board/hx30/cypress5525.c:1266:12: style: The scope of the variable 'evt' can be reduced. [variableScope]
 int i, j, evt, events;
           ^
board/hx30/cypress5525.c:1599:10: style: The scope of the variable 'rdo_reg' can be reduced. [variableScope]
 uint8_t rdo_reg[4];
         ^
board/hx30/cypress5525.c:1601:6: style: The scope of the variable 'rdo_max_current' can be reduced. [variableScope]
 int rdo_max_current = 0;
     ^
board/hx30/cypress5525.c:1952:9: style: The scope of the variable 'p' can be reduced. [variableScope]
 int i, p, data;
        ^
board/hx30/cypress5525.c:1953:10: style: The scope of the variable 'data16' can be reduced. [variableScope]
 uint8_t data16[16];
         ^
board/hx30/cypress5525.c:2070:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i, enable;
     ^
board/hx30/cypress5525.c:2215:33: style: The scope of the variable 'cmd' can be reduced. [variableScope]
 uint32_t sys_port, port, ctrl, cmd, data_len;
                                ^
board/hx30/cypress5525.c:2215:38: style: The scope of the variable 'data_len' can be reduced. [variableScope]
 uint32_t sys_port, port, ctrl, cmd, data_len;
                                     ^
board/hx30/cypress5525.c:2216:11: style: The scope of the variable 'data' can be reduced. [variableScope]
 uint16_t data[5];
          ^
board/hx30/cypress5525.c:2218:6: style: The scope of the variable 'chunked' can be reduced. [variableScope]
 int chunked = 0;
     ^
board/hx30/cypress5525.c:841:64: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 pd_port_states[port_idx].pd_state = pd_status_reg[1] & BIT(2) ? 1 : 0; /*do we have a valid PD contract*/
                                                               ^
board/hx30/cypress5525.c:842:66: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 pd_port_states[port_idx].power_role = pd_status_reg[1] & BIT(0) ? PD_ROLE_SOURCE : PD_ROLE_SINK;
                                                                 ^
board/hx30/cypress5525.c:843:65: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 pd_port_states[port_idx].data_role = pd_status_reg[0] & BIT(6) ? PD_ROLE_DFP : PD_ROLE_UFP;
                                                                ^
board/hx30/cypress5525.c:844:62: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 pd_port_states[port_idx].vconn =  pd_status_reg[1] & BIT(5) ? PD_ROLE_VCONN_SRC : PD_ROLE_VCONN_OFF;
                                                             ^
board/hx30/cypress5525.c:850:58: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 pd_port_states[port_idx].cc = typec_status_reg & BIT(1) ? POLARITY_CC2 : POLARITY_CC1;
                                                         ^
board/hx30/cypress5525.c:1608:64: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 pd_port_states[port_idx].pd_state = pd_status_reg[1] & BIT(2) ? 1 : 0; /*do we have a valid PD contract*/
                                                               ^
board/hx30/cypress5525.c:1609:66: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 pd_port_states[port_idx].power_role = pd_status_reg[1] & BIT(0) ? PD_ROLE_SOURCE : PD_ROLE_SINK;
                                                                 ^
board/hx30/cypress5525.c:2225:9: error: Uninitialized variable: sys_port [uninitvar]
 port = sys_port % 2;
        ^
board/hx30/cypress5525.c:2225:9: error: Uninitialized variable: sys_port [uninitvar]
 port = sys_port % 2;
        ^
board/hx30/cypress5525.c:2220:11: note: Assuming condition is false
 if (argc >= 2) {
          ^
board/hx30/cypress5525.c:2225:9: note: Uninitialized variable: sys_port
 port = sys_port % 2;
        ^
board/hx30/cypress5525.c:2226:9: error: Uninitialized variable: sys_port [uninitvar]
 ctrl = sys_port / 2;
        ^
board/hx30/cypress5525.c:2220:11: note: Assuming condition is false
 if (argc >= 2) {
          ^
board/hx30/cypress5525.c:2226:9: note: Uninitialized variable: sys_port
 ctrl = sys_port / 2;
        ^
board/hx30/cypress5525.c:500:6: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
  rv = cypd_get_int(controller, &data);
     ^
board/hx30/cypress5525.c:864:5: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
 rv = cypd_read_reg_block(controller, CYP5525_CURRENT_PDO_REG(port), pdo_reg, 4);
    ^
board/hx30/cypress5525.c:1601:22: style: Variable 'rdo_max_current' is assigned a value that is never used. [unreadVariable]
 int rdo_max_current = 0;
                     ^
board/hx30/host_command_customization.c:309:49: style:inconclusive: Boolean expression '!gpio_get_level(GPIO_CHASSIS_OPEN)' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
 r->status = !gpio_get_level(GPIO_CHASSIS_OPEN) & 0x01;
                                                ^
board/hx30/host_command_customization.c:309:49: style: Boolean result is used in bitwise operation. Clarify expression with parentheses. [clarifyCondition]
 r->status = !gpio_get_level(GPIO_CHASSIS_OPEN) & 0x01;
                                                ^
board/hx30/i2c_hid_mediakeys.c:628:11: style: The scope of the variable 'event' can be reduced. [variableScope]
 uint32_t event;
          ^
board/hx30/keyboard_customization.c:231:13: style: Condition '!pressed' is always true [knownConditionTrueFalse]
 } else if (!pressed && (fn_key_table_media & fn_bit)) {
            ^
board/hx30/keyboard_customization.c:228:6: note: Assuming that condition 'pressed' is not redundant
 if (pressed) {
     ^
board/hx30/keyboard_customization.c:231:13: note: Condition '!pressed' is always true
 } else if (!pressed && (fn_key_table_media & fn_bit)) {
            ^
board/hx30/keyboard_customization.c:413:10: style: The scope of the variable 'bl_brightness' can be reduced. [variableScope]
 uint8_t bl_brightness = 0;
         ^
board/hx30/led.c:337:10: style: The scope of the variable 'breath_led_level' can be reduced. [variableScope]
 uint8_t breath_led_level = FP_LED_HIGH;
         ^
board/hx30/peci_customization.c:294:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
board/hx30/peci_customization.c:45:9: style: Variable 'out[3]' is assigned a value that is never used. [unreadVariable]
 out[3] = ((parameter >> 8) & 0xff);
        ^
board/hx30/peci_over_espi.c:22:10: style: The scope of the variable 'aw_FCS_calc' can be reduced. [variableScope]
 uint8_t aw_FCS_calc;
         ^
board/hx30/power_button_x86.c:502:11: style: The scope of the variable 't' can be reduced. [variableScope]
 uint64_t t;
          ^
board/hx30/power_button_x86.c:503:11: style: The scope of the variable 'tsleep' can be reduced. [variableScope]
 uint64_t tsleep;
          ^
board/hx30/power_sequence.c:227:39: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 me_gpio_change(me_change & ME_UNLOCK ? GPIO_OUT_HIGH : GPIO_OUT_LOW);
                                      ^
board/hx30/ucsi.c:311:8: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
   cci = &pd_chip_ucsi_info[0].cci;
       ^
board/hx30/ucsi.c:332:9: portability: Assigning an integer to a pointer is not portable. [AssignmentIntegerToAddress]
    cci = &pd_chip_ucsi_info[0].cci;
        ^
board/hx30/ucsi.c:135:6: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
  rv = cypd_write_reg_block(i, CYP5525_CONTROL_REG, command, 8);
     ^
board/hx30/ucsi.c:134:6: note: rv is assigned
  rv = cypd_write_reg_block(i, CYP5525_MESSAGE_OUT_REG, message_out, 16);
     ^
board/hx30/ucsi.c:135:6: note: rv is overwritten
  rv = cypd_write_reg_block(i, CYP5525_CONTROL_REG, command, 8);
     ^
board/hx30/ucsi.c:254:8: style: The scope of the variable 'message_in' can be reduced. [variableScope]
 void *message_in;
       ^
board/hx30/ucsi.c:255:8: style: The scope of the variable 'cci' can be reduced. [variableScope]
 void *cci;
       ^
board/hx30/ucsi.c:258:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
board/hx30/ucsi.c:46:21: style: The scope of the variable 'response_codes' can be reduced. [variableScope]
 static const char *response_codes[0x14] = {
                    ^
board/jinlon/battery.c:75:6: style: The scope of the variable 'port' can be reduced. [variableScope]
 int port;
     ^
board/kukui/board.c:324:0: information: Skipping configuration 'BOARD_KODAMA;BOARD_KUKUI' since the value of 'BOARD_KUKUI' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(BOARD_KUKUI) && board_get_version() == 1)
^
board/kukui/board.c:324:0: information: Skipping configuration 'BOARD_KUKUI' since the value of 'BOARD_KUKUI' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(BOARD_KUKUI) && board_get_version() == 1)
^
board/kukui_scp/fd.c:67:9: style: The scope of the variable 'size' can be reduced. [variableScope]
 size_t size;
        ^
board/kukui_scp/isp_p1_srv.c:67:9: style: The scope of the variable 'size' can be reduced. [variableScope]
 size_t size;
        ^
board/kukui_scp/isp_p2_srv.c:64:9: style: The scope of the variable 'size' can be reduced. [variableScope]
 size_t size;
        ^
board/kukui_scp/mdp_ipi_message.c:64:9: style: The scope of the variable 'size' can be reduced. [variableScope]
 size_t size;
        ^
board/kukui_scp/vdec.c:68:9: style: The scope of the variable 'size' can be reduced. [variableScope]
 size_t size;
        ^
board/kukui_scp/venc.c:66:9: style: The scope of the variable 'size' can be reduced. [variableScope]
 size_t size;
        ^
board/lazor/board.c:434:6: style: The scope of the variable 'status' can be reduced. [variableScope]
 int status, val;
     ^
board/liara/battery.c:173:6: style: The scope of the variable 'port' can be reduced. [variableScope]
 int port;
     ^
board/magolor/board.c:587:10: style: The scope of the variable 'adc_key_state_change' can be reduced. [variableScope]
 uint8_t adc_key_state_change;
         ^
board/mchpevb1/board.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
board/mchpevb1/board.c:279:0: information: Skipping configuration 'CONFIG_BOARD_MCHP_I2C0_SLAVE_ADDRS' since the value of 'CONFIG_BOARD_MCHP_I2C0_SLAVE_ADDRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 (MCHP_I2C_CTRL0 + (CONFIG_BOARD_MCHP_I2C0_SLAVE_ADDRS << 16)),
^
board/mchpevb1/board.c:284:0: information: Skipping configuration 'CONFIG_BOARD_MCHP_I2C1_SLAVE_ADDRS' since the value of 'CONFIG_BOARD_MCHP_I2C1_SLAVE_ADDRS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 (MCHP_I2C_CTRL1 + (CONFIG_BOARD_MCHP_I2C1_SLAVE_ADDRS << 16)),
^
board/nami/led.c:335:35: style: Local variable 'patterns' shadows outer variable [shadowVariable]
 static const struct led_pattern *patterns[2];
                                  ^
board/nami/led.c:198:28: note: Shadowed declaration
static led_patterns const *patterns[2];
                           ^
board/nami/led.c:335:35: note: Shadow variable
 static const struct led_pattern *patterns[2];
                                  ^
board/nocturne/battery.c:105:6: style: The scope of the variable 'max_pd_voltage_mv' can be reduced. [variableScope]
 int max_pd_voltage_mv;
     ^
board/nocturne/board.c:698:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
board/oak/usb_pd_policy.c:92:17: style:inconclusive: Boolean expression '!cur_lvl' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
 } else if (irq & !cur_lvl) {
                ^
board/oak/usb_pd_policy.c:92:17: style: Boolean result is used in bitwise operation. Clarify expression with parentheses. [clarifyCondition]
 } else if (irq & !cur_lvl) {
                ^
board/pdeval-stm32f072/usb_pd_policy.c:255:0: information: Skipping configuration 'CONFIG_USB_PD_ALT_MODE_DFP;CONFIG_USB_PD_TCPM_ANX7447' since the value of 'CONFIG_USB_PD_TCPM_ANX7447' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_TCPM_ANX7447))
^
board/pdeval-stm32f072/usb_pd_policy.c:255:0: information: Skipping configuration 'CONFIG_USB_PD_ALT_MODE_DFP;CONFIG_USB_PD_TCPM_ANX7447;CONFIG_USB_PD_TCPM_MUX' since the value of 'CONFIG_USB_PD_TCPM_ANX7447' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_TCPM_ANX7447))
^
board/pompom/led.c:135:6: style: The scope of the variable 'period' can be reduced. [variableScope]
 int period = 0;
     ^
board/pompom/led.c:135:13: style: Variable 'period' is assigned a value that is never used. [unreadVariable]
 int period = 0;
            ^
board/puff/board.c:75:6: style: The scope of the variable 'level' can be reduced. [variableScope]
 int level;
     ^
board/puff/board.c:767:17: style: The scope of the variable 'index' can be reduced. [variableScope]
 static uint8_t index;
                ^
board/reef/battery.c:530:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
board/reef_it8320/battery.c:530:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
board/reef_mchp/battery.c:535:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
board/samus/battery.c:238:10: style: The scope of the variable 'data' can be reduced. [variableScope]
 uint8_t data[6];
         ^
board/samus/battery.c:239:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
board/samus/battery.c:63:6: style: The scope of the variable 'temp_c' can be reduced. [variableScope]
 int temp_c;
     ^
board/samus/battery.c:64:29: style: The scope of the variable 'info' can be reduced. [variableScope]
 const struct charger_info *info;
                            ^
board/samus/battery.c:64:29: style: Local variable 'info' shadows outer variable [shadowVariable]
 const struct charger_info *info;
                            ^
board/samus/battery.c:16:34: note: Shadowed declaration
static const struct battery_info info = {
                                 ^
board/samus/battery.c:64:29: note: Shadow variable
 const struct charger_info *info;
                            ^
board/samus/extpower.c:219:2: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
 extpower_prev = extpower;
 ^
board/samus/extpower.c:146:9: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int i, rv;
        ^
board/samus/extpower.c:297:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv, prochot_status, batt_discharging_on_ac, boostin_voltage = 0;
     ^
board/samus/extpower.c:297:26: style: The scope of the variable 'batt_discharging_on_ac' can be reduced. [variableScope]
 int rv, prochot_status, batt_discharging_on_ac, boostin_voltage = 0;
                         ^
board/samus/extpower.c:297:50: style: The scope of the variable 'boostin_voltage' can be reduced. [variableScope]
 int rv, prochot_status, batt_discharging_on_ac, boostin_voltage = 0;
                                                 ^
board/samus/extpower.c:298:13: style: The scope of the variable 'counts_since_wedged' can be reduced. [variableScope]
 static int counts_since_wedged;
            ^
board/samus/extpower.c:299:13: style: The scope of the variable 'charge_stalled_count' can be reduced. [variableScope]
 static int charge_stalled_count = CHARGE_STALLED_COUNT;
            ^
board/samus/extpower.c:219:16: style: Variable 'extpower_prev' is assigned a value that is never used. [unreadVariable]
 extpower_prev = extpower;
               ^
board/samus/panel.c:140:5: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
 rv = lp8555_write_with_retry(LP8555_REG_COMMAND, reg);
    ^
board/samus_pd/usb_pd_policy.c:138:17: style:inconclusive: Boolean expression '!cur_lvl' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
 } else if (irq & !cur_lvl) {
                ^
board/samus_pd/usb_pd_policy.c:138:17: style: Boolean result is used in bitwise operation. Clarify expression with parentheses. [clarifyCondition]
 } else if (irq & !cur_lvl) {
                ^
board/servo_v4/usb_pd_policy.c:1028:6: style: The scope of the variable 'chargeable' can be reduced. [variableScope]
 int chargeable;
     ^
board/servo_v4/usb_pd_policy.c:1029:6: style: The scope of the variable 'dualrole' can be reduced. [variableScope]
 int dualrole;
     ^
board/servo_v4/usb_pd_policy.c:184:35: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 return cc_config & CC_ENABLE_DRP ? PD_DRP_TOGGLE_ON :
                                  ^
board/servo_v4/usb_pd_policy.c:256:51: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   pd_comm_enable(DUT, cc_config & CC_SNK_WITH_PD ? 1 : 0);
                                                  ^
board/servo_v4/usb_pd_policy.c:393:29: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    cc_config & CC_POLARITY ? !cc_sel : cc_sel];
                            ^
board/servo_v4/usb_pd_policy.c:420:29: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    cc_config & CC_POLARITY ? !cc_sel : cc_sel];
                            ^
board/servo_v4/usb_pd_policy.c:445:38: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
      cc == (cc_config & CC_POLARITY ? 0 : 1))
                                     ^
board/servo_v4/usb_pd_policy.c:476:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_ACTIVE_CC_PU(RPUSB);
   ^
board/servo_v4/usb_pd_policy.c:479:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_ACTIVE_CC_PU(RP1A5);
   ^
board/servo_v4/usb_pd_policy.c:482:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_ACTIVE_CC_PU(RP3A0);
   ^
board/servo_v4/usb_pd_policy.c:509:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_ACTIVE_CC_PU(RP3A0);
   ^
board/servo_v4/usb_pd_policy.c:510:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_INACTIVE_CC_PU(RP1A5);
   ^
board/servo_v4/usb_pd_policy.c:513:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_ACTIVE_CC_PU(RP1A5);
   ^
board/servo_v4/usb_pd_policy.c:514:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_INACTIVE_CC_PU(RPUSB);
   ^
board/servo_v4/usb_pd_policy.c:517:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_ACTIVE_CC_PU(RP3A0);
   ^
board/servo_v4/usb_pd_policy.c:518:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_INACTIVE_CC_PU(RPUSB);
   ^
board/servo_v4/usb_pd_policy.c:568:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_ACTIVE_CC_PD(RD);
   ^
board/servo_v4/usb_pd_policy.c:869:40: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 return value & PS8740_MODE_DP_ENABLED ? 1 : 0;
                                       ^
board/servo_v4p1/fusb302b.c:32:23: style:inconclusive: Function 'init_fusb302b' argument 1 names different: declaration 'port' definition 'p'. [funcArgNamesDifferent]
int init_fusb302b(int p)
                      ^
board/servo_v4p1/fusb302b.h:215:23: note: Function 'init_fusb302b' argument 1 names different: declaration 'port' definition 'p'.
int init_fusb302b(int port);
                      ^
board/servo_v4p1/fusb302b.c:32:23: note: Function 'init_fusb302b' argument 1 names different: declaration 'port' definition 'p'.
int init_fusb302b(int p)
                      ^
board/servo_v4p1/tusb1064.c:19:10: style: Checking if unsigned expression 'val' is less than zero. [unsignedLessThanZero]
 if (val < 0)
         ^
board/servo_v4p1/usb_pd_policy.c:1093:6: style: The scope of the variable 'chargeable' can be reduced. [variableScope]
 int chargeable;
     ^
board/servo_v4p1/usb_pd_policy.c:1094:6: style: The scope of the variable 'dualrole' can be reduced. [variableScope]
 int dualrole;
     ^
board/servo_v4p1/usb_pd_policy.c:179:35: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 return cc_config & CC_ENABLE_DRP ? PD_DRP_TOGGLE_ON :
                                  ^
board/servo_v4p1/usb_pd_policy.c:252:51: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   pd_comm_enable(DUT, cc_config & CC_SNK_WITH_PD ? 1 : 0);
                                                  ^
board/servo_v4p1/usb_pd_policy.c:389:29: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    cc_config & CC_POLARITY ? !cc_sel : cc_sel];
                            ^
board/servo_v4p1/usb_pd_policy.c:416:29: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    cc_config & CC_POLARITY ? !cc_sel : cc_sel];
                            ^
board/servo_v4p1/usb_pd_policy.c:490:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_ACTIVE_CC_PU(RPUSB);
   ^
board/servo_v4p1/usb_pd_policy.c:493:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_ACTIVE_CC_PU(RP1A5);
   ^
board/servo_v4p1/usb_pd_policy.c:496:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_ACTIVE_CC_PU(RP3A0);
   ^
board/servo_v4p1/usb_pd_policy.c:511:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_INACTIVE_CC_PD(RA);
   ^
board/servo_v4p1/usb_pd_policy.c:513:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_INACTIVE_CC_OPEN(RA);
   ^
board/servo_v4p1/usb_pd_policy.c:529:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_ACTIVE_CC_PU(RP3A0);
   ^
board/servo_v4p1/usb_pd_policy.c:530:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_INACTIVE_CC_PU(RP1A5);
   ^
board/servo_v4p1/usb_pd_policy.c:533:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_ACTIVE_CC_PU(RP1A5);
   ^
board/servo_v4p1/usb_pd_policy.c:534:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_INACTIVE_CC_PU(RPUSB);
   ^
board/servo_v4p1/usb_pd_policy.c:537:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_ACTIVE_CC_PU(RP3A0);
   ^
board/servo_v4p1/usb_pd_policy.c:538:4: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   DUT_INACTIVE_CC_PU(RPUSB);
   ^
board/servo_v4p1/usb_pd_policy.c:596:5: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    DUT_ACTIVE_CC_PD(RD);
    ^
board/servo_v4p1/usb_pd_policy.c:602:6: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
     DUT_INACTIVE_CC_PD(RA);
     ^
board/servo_v4p1/usb_pd_policy.c:604:6: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
     DUT_INACTIVE_CC_OPEN(RA);
     ^
board/servo_v4p1/usb_pd_policy.c:606:5: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    DUT_ACTIVE_CC_PD(RA);
    ^
board/servo_v4p1/usb_pd_policy.c:612:6: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
     DUT_INACTIVE_CC_PD(RA);
     ^
board/servo_v4p1/usb_pd_policy.c:614:6: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
     DUT_INACTIVE_CC_OPEN(RA);
     ^
board/servo_v4p1/usb_pd_policy.c:620:5: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    DUT_ACTIVE_CC_PD(RD);
    ^
board/servo_v4p1/usb_pd_policy.c:621:5: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    DUT_INACTIVE_CC_PD(RA);
    ^
board/servo_v4p1/usb_tc_snk_sm.c:61:11: style: struct member 'type_c::timeout' is never used. [unusedStructMember]
 uint64_t timeout;
          ^
board/zinger/hardware.c:449:21: portability: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
 *hword = ((~value) << STM32_OPTB_COMPL_SHIFT) | value;
                    ^
board/zinger/usb_pd_policy.c:180:12: style: struct member 'Anonymous0::uvp' is never used. [unusedStructMember]
 int       uvp;    /* under-voltage limit in mV */
           ^
chip/host/flash.c:170:15: style: Variable 'prot_flags' is assigned a value that is never used. [unreadVariable]
   prot_flags = flash_get_protect();
              ^
chip/host/i2c.c:85:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
chip/host/system.c:227:2: warning: %lu in format string (no. 1) requires 'unsigned long' but the argument type is 'unsigned int'. [invalidPrintfArgType_uint]
 fprintf(f, "%lu", value);
 ^
chip/host/uart.c:126:6: style: The scope of the variable 'num_char' can be reduced. [variableScope]
 int num_char;
     ^
chip/host/uart.c:150:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
chip/ish/aontaskfw/ish_aontask.c:656:54: style: Condition 'is_ipapg_allowed()' is always false [knownConditionTrueFalse]
 if (IS_ENABLED(CONFIG_ISH_IPAPG) && is_ipapg_allowed()) {
                                                     ^
chip/ish/aontaskfw/ish_aontask.c:711:54: style: Condition 'is_ipapg_allowed()' is always false [knownConditionTrueFalse]
 if (IS_ENABLED(CONFIG_ISH_IPAPG) && is_ipapg_allowed()) {
                                                     ^
chip/ish/dma.c:95:11: style: The scope of the variable 'chunk' can be reduced. [variableScope]
 uint32_t chunk;
          ^
chip/ish/gpio.c:121:6: style: The scope of the variable 'flags' can be reduced. [variableScope]
 int flags;
     ^
chip/ish/heci.c:166:6: style: The scope of the variable 'ret' can be reduced. [variableScope]
 int ret;
     ^
chip/ish/heci.c:770:38: style: The scope of the variable 'cbs' can be reduced. [variableScope]
 const struct heci_client_callbacks *cbs;
                                     ^
chip/ish/heci.c:998:6: style: The scope of the variable 'msg_len' can be reduced. [variableScope]
 int msg_len;
     ^
chip/ish/heci.c:321:26: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
 int buf_offset = 0, ret = 0, remain, payload_size;
                         ^
chip/ish/hid_subsys.c:125:6: style: The scope of the variable 'ret' can be reduced. [variableScope]
 int ret, hid_device_index;
     ^
chip/ish/i2c.c:256:11: style: The scope of the variable 'out' can be reduced. [variableScope]
 uint16_t out;
          ^
chip/ish/i2c.c:278:11: style: The scope of the variable 'data_cmd' can be reduced. [variableScope]
 uint32_t data_cmd;
          ^
chip/ish/ipc_heci.c:392:18: style: The scope of the variable 'msg' can be reduced. [variableScope]
 struct ipc_msg *msg;
                 ^
chip/ish/ipc_heci.c:394:9: style: The scope of the variable 'head' can be reduced. [variableScope]
 size_t head;
        ^
chip/ish/ipc_heci.c:655:11: style: The scope of the variable 'events' can be reduced. [variableScope]
 uint32_t events, protocol, drbl_protocol, drbl_val;
          ^
chip/ish/ipc_heci.c:655:29: style: The scope of the variable 'drbl_protocol' can be reduced. [variableScope]
 uint32_t events, protocol, drbl_protocol, drbl_val;
                            ^
chip/ish/ipc_heci.c:655:44: style: The scope of the variable 'drbl_val' can be reduced. [variableScope]
 uint32_t events, protocol, drbl_protocol, drbl_val;
                                           ^
chip/ish/ipc_heci.c:696:6: style: The scope of the variable 'payload_size' can be reduced. [variableScope]
 int payload_size;
     ^
chip/ish/ipc_heci.c:275:13: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
 msg.drbl = IPC_BUILD_MNG_DB(MNG_RESET_NOTIFY, sizeof(*ipc_rst));
            ^
chip/ish/ipc_heci.c:285:13: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
 msg.drbl = IPC_BUILD_MNG_DB(MNG_RX_CMPL_INDICATION, 0);
            ^
chip/ish/ipc_heci.c:518:10: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
  drbl = IPC_BUILD_HECI_DB(buf_size);
         ^
chip/ish/ipc_heci.c:275:13: error: Signed integer overflow for expression '1<<31'. [integerOverflow]
 msg.drbl = IPC_BUILD_MNG_DB(MNG_RESET_NOTIFY, sizeof(*ipc_rst));
            ^
chip/ish/ipc_heci.c:285:13: error: Signed integer overflow for expression '1<<31'. [integerOverflow]
 msg.drbl = IPC_BUILD_MNG_DB(MNG_RX_CMPL_INDICATION, 0);
            ^
chip/ish/ipc_heci.c:518:10: error: Signed integer overflow for expression '1<<31'. [integerOverflow]
  drbl = IPC_BUILD_HECI_DB(buf_size);
         ^
chip/ish/ipc_heci.c:123:11: style: struct member 'ipc_oob_msg::address' is never used. [unusedStructMember]
 uint32_t address;
          ^
chip/ish/ipc_heci.c:124:11: style: struct member 'ipc_oob_msg::length' is never used. [unusedStructMember]
 uint32_t length;
          ^
chip/ish/ipc_heci.c:574:0: information: Skipping configuration 'CONFIG_ISH_HOST2ISH_COMBINED_ISR' since the value of 'CONFIG_ISH_HOST2ISH_COMBINED_ISR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (!IS_ENABLED(CONFIG_ISH_HOST2ISH_COMBINED_ISR))
^
chip/ish/power_mgt.c:670:6: style: The scope of the variable 'next_delay' can be reduced. [variableScope]
 int next_delay = 0;
     ^
chip/ish/power_mgt.c:670:17: style: Variable 'next_delay' is assigned a value that is never used. [unreadVariable]
 int next_delay = 0;
                ^
chip/ish/power_mgt.c:624:0: information: Skipping configuration 'CONFIG_ISH_PM_AONTASK' since the value of 'CONFIG_ISH_PM_AONTASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_ISH_PM_AONTASK))
^
chip/ish/power_mgt.c:657:0: information: Skipping configuration 'CONFIG_ISH_PM_AONTASK' since the value of 'CONFIG_ISH_PM_AONTASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_ISH_PM_AONTASK) &&
^
chip/ish/power_mgt.c:537:0: information: Skipping configuration 'CONFIG_ISH_PM_D0I1' since the value of 'CONFIG_ISH_PM_D0I1' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  else if (IS_ENABLED(CONFIG_ISH_PM_D0I1))
^
chip/ish/power_mgt.c:642:0: information: Skipping configuration 'CONFIG_ISH_PM_D3' since the value of 'CONFIG_ISH_PM_D3' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_ISH_PM_D3)) {
^
chip/ish/power_mgt.c:357:0: information: Skipping configuration 'CONFIG_ISH_PM_RESET_PREP' since the value of 'CONFIG_ISH_PM_RESET_PREP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_ISH_PM_RESET_PREP))
^
chip/ish/power_mgt.c:401:0: information: Skipping configuration 'CONFIG_ISH_PM_RESET_PREP' since the value of 'CONFIG_ISH_PM_RESET_PREP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_ISH_PM_RESET_PREP))
^
chip/ish/power_mgt.c:461:0: information: Skipping configuration 'CONFIG_ISH_PM_RESET_PREP' since the value of 'CONFIG_ISH_PM_RESET_PREP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_ISH_PM_RESET_PREP))
^
chip/ish/power_mgt.c:635:0: information: Skipping configuration 'CONFIG_ISH_PM_RESET_PREP' since the value of 'CONFIG_ISH_PM_RESET_PREP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_ISH_PM_RESET_PREP)) {
^
chip/ish/system.c:38:0: information: Skipping configuration 'CONFIG_ISH_CLEAR_FABRIC_ERRORS' since the value of 'CONFIG_ISH_CLEAR_FABRIC_ERRORS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_ISH_CLEAR_FABRIC_ERRORS))
^
chip/ish/uart.c:254:15: warning: Either the condition 'id>=3' is redundant or the array 'uart_ctx[3]' is accessed at index 3, which is out of bounds. [arrayIndexOutOfBoundsCond]
 if ((uart_ctx[id].base == 0) || (id >= UART_DEVICES))
              ^
chip/ish/uart.c:254:38: note: Assuming that condition 'id>=3' is not redundant
 if ((uart_ctx[id].base == 0) || (id >= UART_DEVICES))
                                     ^
chip/ish/uart.c:254:15: note: Array index out of bounds
 if ((uart_ctx[id].base == 0) || (id >= UART_DEVICES))
              ^
chip/ish/uart.c:227:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
chip/ish/uart.c:228:11: style: The scope of the variable 'fifo_len' can be reduced. [variableScope]
 uint32_t fifo_len;
          ^
chip/ish/uart.c:157:0: information: Skipping configuration 'CONFIG_ISH_DW_UART' since the value of 'CONFIG_ISH_DW_UART' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_ISH_DW_UART)) {
^
chip/ish/uart.c:170:0: information: Skipping configuration 'CONFIG_ISH_DW_UART' since the value of 'CONFIG_ISH_DW_UART' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_ISH_DW_UART))
^
chip/ish/uart.c:180:0: information: Skipping configuration 'CONFIG_ISH_DW_UART' since the value of 'CONFIG_ISH_DW_UART' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!IS_ENABLED(CONFIG_ISH_DW_UART))
^
chip/ish/uart.c:186:0: information: Skipping configuration 'CONFIG_ISH_DW_UART' since the value of 'CONFIG_ISH_DW_UART' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_ISH_DW_UART))
^
chip/ish/uart.c:195:0: information: Skipping configuration 'CONFIG_ISH_DW_UART' since the value of 'CONFIG_ISH_DW_UART' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!IS_ENABLED(CONFIG_ISH_DW_UART))
^
chip/ish/uart.c:230:0: information: Skipping configuration 'CONFIG_ISH_DW_UART' since the value of 'CONFIG_ISH_DW_UART' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!IS_ENABLED(CONFIG_ISH_DW_UART)) {
^
chip/ish/uart.c:247:0: information: Skipping configuration 'CONFIG_ISH_DW_UART' since the value of 'CONFIG_ISH_DW_UART' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!IS_ENABLED(CONFIG_ISH_DW_UART))
^
chip/ish/uart.c:281:0: information: Skipping configuration 'CONFIG_ISH_DW_UART' since the value of 'CONFIG_ISH_DW_UART' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!IS_ENABLED(CONFIG_ISH_DW_UART))
^
chip/it83xx/adc.c:132:11: style: The scope of the variable 'adc_raw_data' can be reduced. [variableScope]
 uint16_t adc_raw_data;
          ^
chip/it83xx/adc.c:219:22: style:inconclusive: Function 'vcmp_enable' argument 1 names different: declaration 'index' definition 'idx'. [funcArgNamesDifferent]
void vcmp_enable(int idx, int enable)
                     ^
chip/it83xx/adc_chip.h:137:22: note: Function 'vcmp_enable' argument 1 names different: declaration 'index' definition 'idx'.
void vcmp_enable(int index, int enable);
                     ^
chip/it83xx/adc.c:219:22: note: Function 'vcmp_enable' argument 1 names different: declaration 'index' definition 'idx'.
void vcmp_enable(int idx, int enable)
                     ^
chip/it83xx/clock.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/it83xx/clock.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
chip/it83xx/dac.c:50:10: style: The scope of the variable 'mv' can be reduced. [variableScope]
 int ch, mv, rv;
         ^
chip/it83xx/dac.c:50:14: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int ch, mv, rv;
             ^
chip/it83xx/espi.c:481:9: style: Redundant initialization for 'config'. The initialized value is overwritten before it is read. [redundantInitialization]
 config = IT83XX_GPIO_GCR_LPC_RST_DISABLE;
        ^
chip/it83xx/espi.c:473:13: note: config is initialized
 int config = espi_get_reset_enable_config();
            ^
chip/it83xx/espi.c:481:9: note: config is overwritten
 config = IT83XX_GPIO_GCR_LPC_RST_DISABLE;
        ^
chip/it83xx/fan.c:269:6: style: The scope of the variable 'status' can be reduced. [variableScope]
 int status = -1, adjust = 0;
     ^
chip/it83xx/fan.c:270:6: style: The scope of the variable 'rpm_actual' can be reduced. [variableScope]
 int rpm_actual, rpm_target, rpm_re, duty;
     ^
chip/it83xx/fan.c:270:18: style: The scope of the variable 'rpm_target' can be reduced. [variableScope]
 int rpm_actual, rpm_target, rpm_re, duty;
                 ^
chip/it83xx/fan.c:270:30: style: The scope of the variable 'rpm_re' can be reduced. [variableScope]
 int rpm_actual, rpm_target, rpm_re, duty;
                             ^
chip/it83xx/fan.c:270:38: style: The scope of the variable 'duty' can be reduced. [variableScope]
 int rpm_actual, rpm_target, rpm_re, duty;
                                     ^
chip/it83xx/fan.c:360:11: style: The scope of the variable 'rpm' can be reduced. [variableScope]
 uint16_t rpm;
          ^
chip/it83xx/fan.c:378:11: style: The scope of the variable 'rpm' can be reduced. [variableScope]
 uint16_t rpm;
          ^
chip/it83xx/fan.c:396:6: style: The scope of the variable 't_rpm' can be reduced. [variableScope]
 int t_rpm;
     ^
chip/it83xx/fan.c:435:10: style: The scope of the variable 'rpm_re' can be reduced. [variableScope]
 int ch, rpm_re, fan_p, s_duty;
         ^
chip/it83xx/fan.c:435:18: style: The scope of the variable 'fan_p' can be reduced. [variableScope]
 int ch, rpm_re, fan_p, s_duty;
                 ^
chip/it83xx/fan.c:435:25: style: The scope of the variable 's_duty' can be reduced. [variableScope]
 int ch, rpm_re, fan_p, s_duty;
                        ^
chip/it83xx/flash.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/it83xx/intc.h:17:0: information: Skipping configuration 'CHIP_CORE_NDS32' since the value of 'CHIP_CORE_NDS32' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CHIP_CORE_NDS32))
^
chip/it83xx/flash.c:630:0: information: Skipping configuration 'CHIP_CORE_NDS32' since the value of 'CHIP_CORE_NDS32' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CHIP_CORE_NDS32))
^
chip/it83xx/flash.c:637:0: information: Skipping configuration 'CHIP_CORE_NDS32' since the value of 'CHIP_CORE_NDS32' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CHIP_CORE_NDS32))
^
chip/it83xx/flash.c:678:0: information: Skipping configuration 'IT83XX_CHIP_FLASH_IS_KGD' since the value of 'IT83XX_CHIP_FLASH_IS_KGD' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(IT83XX_CHIP_FLASH_IS_KGD))
^
chip/it83xx/gpio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/it83xx/hwtimer.c:145:0: error: failed to expand 'EVENT_TIMER_COUNT_TO_US', it is invalid to use a preprocessor directive as macro parameter [preprocessorErrorDirective]
#ifdef IT83XX_EXT_OBSERVATION_REG_READ_TWO_TIMES
^
chip/it83xx/hwtimer.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
chip/it83xx/i2c.c:229:6: style: The scope of the variable 'p_ch' can be reduced. [variableScope]
 int p_ch;
     ^
chip/it83xx/i2c.c:281:6: style: The scope of the variable 'nack' can be reduced. [variableScope]
 int nack = 0;
     ^
chip/it83xx/i2c.c:593:6: style: The scope of the variable 'p_ch' can be reduced. [variableScope]
 int p_ch;
     ^
chip/it83xx/i2c.c:821:22: style: The scope of the variable 'clk_div' can be reduced. [variableScope]
 int port_reg_shift, clk_div, psr;
                     ^
chip/it83xx/i2c.c:821:31: style: The scope of the variable 'psr' can be reduced. [variableScope]
 int port_reg_shift, clk_div, psr;
                              ^
chip/it83xx/i2c.c:853:9: style: The scope of the variable 'freq' can be reduced. [variableScope]
 int i, freq, port;
        ^
chip/it83xx/i2c.c:853:15: style: The scope of the variable 'port' can be reduced. [variableScope]
 int i, freq, port;
              ^
chip/it83xx/i2c.c:121:20: style: struct member 'i2c_pin::pin_clk' is never used. [unusedStructMember]
 volatile uint8_t *pin_clk;
                   ^
chip/it83xx/i2c.c:122:20: style: struct member 'i2c_pin::pin_data' is never used. [unusedStructMember]
 volatile uint8_t *pin_data;
                   ^
chip/it83xx/i2c.c:123:20: style: struct member 'i2c_pin::pin_clk_ctrl' is never used. [unusedStructMember]
 volatile uint8_t *pin_clk_ctrl;
                   ^
chip/it83xx/i2c.c:124:20: style: struct member 'i2c_pin::pin_data_ctrl' is never used. [unusedStructMember]
 volatile uint8_t *pin_data_ctrl;
                   ^
chip/it83xx/i2c_slave.c:324:10: style: The scope of the variable 'p' can be reduced. [variableScope]
 int  i, p;
         ^
chip/it83xx/intc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/it83xx/lpc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/it83xx/lpc.c:424:6: style: The scope of the variable 'is_cmd' can be reduced. [variableScope]
 int is_cmd;
     ^
chip/it83xx/lpc.c:425:10: style: The scope of the variable 'value' can be reduced. [variableScope]
 uint8_t value, result;
         ^
chip/it83xx/lpc.c:458:10: style: The scope of the variable 'value' can be reduced. [variableScope]
 uint8_t value __attribute__((unused)) = 0;
         ^
chip/it83xx/lpc.c:525:6: style: The scope of the variable 'new_p80_idx' can be reduced. [variableScope]
 int new_p80_idx, i;
     ^
chip/it83xx/lpc.c:525:19: style: The scope of the variable 'i' can be reduced. [variableScope]
 int new_p80_idx, i;
                  ^
chip/it83xx/lpc.c:118:0: information: Skipping configuration 'CONFIG_KEYBOARD_IRQ_GPIO' since the value of 'CONFIG_KEYBOARD_IRQ_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(CONFIG_KEYBOARD_IRQ_GPIO, 1);
^
chip/it83xx/lpc.c:121:0: information: Skipping configuration 'CONFIG_KEYBOARD_IRQ_GPIO' since the value of 'CONFIG_KEYBOARD_IRQ_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(CONFIG_KEYBOARD_IRQ_GPIO, 0);
^
chip/it83xx/lpc.c:125:0: information: Skipping configuration 'CONFIG_KEYBOARD_IRQ_GPIO' since the value of 'CONFIG_KEYBOARD_IRQ_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(CONFIG_KEYBOARD_IRQ_GPIO, 1);
^
chip/it83xx/pwm.c:203:18: style: The scope of the variable 'pcfsr_sel' can be reduced. [variableScope]
 int pcfsr, ctr, pcfsr_sel, pcs_shift, pcs_mask;
                 ^
chip/it83xx/pwm.c:203:29: style: The scope of the variable 'pcs_shift' can be reduced. [variableScope]
 int pcfsr, ctr, pcfsr_sel, pcs_shift, pcs_mask;
                            ^
chip/it83xx/pwm.c:203:40: style: The scope of the variable 'pcs_mask' can be reduced. [variableScope]
 int pcfsr, ctr, pcfsr_sel, pcs_shift, pcs_mask;
                                       ^
chip/it83xx/pwm.c:255:11: portability: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
   (pcfsr >> 8) & 0xFF;
          ^
chip/it83xx/system.c:197:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
chip/it83xx/system.c:344:0: information: Skipping configuration 'IT83XX_CHIP_ID_3BYTES' since the value of 'IT83XX_CHIP_ID_3BYTES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 int num = (IS_ENABLED(IT83XX_CHIP_ID_3BYTES) ? 4 : 3);
^
chip/it83xx/system.c:178:0: information: Skipping configuration 'IT83XX_ETWD_HW_RESET_SUPPORT' since the value of 'IT83XX_ETWD_HW_RESET_SUPPORT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(IT83XX_ETWD_HW_RESET_SUPPORT))
^
chip/it83xx/watchdog.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/it83xx/watchdog.c:42:38: style: Variable 'pdata_ptr' is assigned a value that is never used. [unreadVariable]
 struct panic_data * const pdata_ptr = get_panic_data_write();
                                     ^
chip/lm4/adc.c:64:20: style: The scope of the variable 'scratch' can be reduced. [variableScope]
 volatile uint32_t scratch  __attribute__((unused));
                   ^
chip/lm4/clock.c:235:17: style: Variable 'next_delay' is assigned a value that is never used. [unreadVariable]
 int next_delay = 0;
                ^
chip/lm4/lpc.c:490:7: style: The scope of the variable 'csum' can be reduced. [variableScope]
  int csum, i;
      ^
chip/lm4/lpc.c:490:13: style: The scope of the variable 'i' can be reduced. [variableScope]
  int csum, i;
            ^
chip/lm4/lpc.c:548:11: style: Unused variable: st [unusedVariable]
 uint32_t st;
          ^
chip/lm4/lpc.c:92:0: information: Skipping configuration 'CONFIG_KEYBOARD_IRQ_GPIO' since the value of 'CONFIG_KEYBOARD_IRQ_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(CONFIG_KEYBOARD_IRQ_GPIO, 1);
^
chip/lm4/lpc.c:95:0: information: Skipping configuration 'CONFIG_KEYBOARD_IRQ_GPIO' since the value of 'CONFIG_KEYBOARD_IRQ_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(CONFIG_KEYBOARD_IRQ_GPIO, 0);
^
chip/lm4/lpc.c:102:0: information: Skipping configuration 'CONFIG_KEYBOARD_IRQ_GPIO' since the value of 'CONFIG_KEYBOARD_IRQ_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(CONFIG_KEYBOARD_IRQ_GPIO, 1);
^
chip/lm4/lpc.c:177:0: information: Skipping configuration 'CONFIG_SCI_GPIO' since the value of 'CONFIG_SCI_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(CONFIG_SCI_GPIO, 1);
^
chip/lm4/lpc.c:180:0: information: Skipping configuration 'CONFIG_SCI_GPIO' since the value of 'CONFIG_SCI_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(CONFIG_SCI_GPIO, 0);
^
chip/lm4/lpc.c:183:0: information: Skipping configuration 'CONFIG_SCI_GPIO' since the value of 'CONFIG_SCI_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(CONFIG_SCI_GPIO, 1);
^
chip/lm4/system.c:137:13: style: Condition '!flags' is always true [knownConditionTrueFalse]
 } else if (!flags && (raw_reset_cause & 0x01)) {
            ^
chip/lm4/system.c:121:19: note: Assignment 'flags=0', assigned value is 0
 uint32_t flags = 0;
                  ^
chip/lm4/system.c:137:13: note: Condition '!flags' is always true
 } else if (!flags && (raw_reset_cause & 0x01)) {
            ^
chip/lm4/uart.c:96:6: style: The scope of the variable 'scratch' can be reduced. [variableScope]
 int scratch __attribute__ ((unused));
     ^
chip/lm4/uart.c:124:0: information: Skipping configuration 'CONFIG_HOSTCMD_LPC;CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 LM4_UART_ICR(CONFIG_UART_HOST) = 0x70;
^
chip/lm4/uart.c:131:0: information: Skipping configuration 'CONFIG_HOSTCMD_LPC;CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!(LM4_UART_FR(CONFIG_UART_HOST) & 0x20) && lpc_comx_has_char()) {
^
chip/lm4/uart.c:133:0: information: Skipping configuration 'CONFIG_HOSTCMD_LPC;CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  LM4_UART_DR(CONFIG_UART_HOST) = lpc_comx_get_char();
^
chip/lm4/uart.c:134:0: information: Skipping configuration 'CONFIG_HOSTCMD_LPC;CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  LM4_UART_IM(CONFIG_UART_HOST) &= ~0x20;
^
chip/lm4/uart.c:143:0: information: Skipping configuration 'CONFIG_HOSTCMD_LPC;CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!(LM4_UART_FR(CONFIG_UART_HOST) & 0x10))
^
chip/lm4/uart.c:144:0: information: Skipping configuration 'CONFIG_HOSTCMD_LPC;CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  lpc_comx_put_char(LM4_UART_DR(CONFIG_UART_HOST));
^
chip/lm4/uart.c:148:0: information: Skipping configuration 'CONFIG_HOSTCMD_LPC;CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
DECLARE_IRQ(IRQ_UART_HOST, uart_host_interrupt, 2);
^
chip/lm4/uart.c:196:0: information: Skipping configuration 'CONFIG_HOSTCMD_LPC;CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 mask |= BIT(CONFIG_UART_HOST);
^
chip/lm4/uart.c:208:0: information: Skipping configuration 'CONFIG_HOSTCMD_LPC;CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 uart_config(CONFIG_UART_HOST);
^
chip/lm4/uart.c:292:0: information: Skipping configuration 'CONFIG_HOSTCMD_LPC;CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 uart_clear_rx_fifo(CONFIG_UART_HOST);
^
chip/lm4/uart.c:293:0: information: Skipping configuration 'CONFIG_HOSTCMD_LPC;CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 task_enable_irq(IRQ_UART_HOST);
^
chip/lm4/uart.c:298:0: information: Skipping configuration 'CONFIG_HOSTCMD_LPC;CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (LM4_UART_FR(CONFIG_UART_HOST) & 0x20) {
^
chip/lm4/uart.c:303:0: information: Skipping configuration 'CONFIG_HOSTCMD_LPC;CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  LM4_UART_IM(CONFIG_UART_HOST) |= 0x20;
^
chip/lm4/uart.c:312:0: information: Skipping configuration 'CONFIG_HOSTCMD_LPC;CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 LM4_UART_DR(CONFIG_UART_HOST) = c;
^
chip/lm4/uart.c:124:0: information: Skipping configuration 'CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 LM4_UART_ICR(CONFIG_UART_HOST) = 0x70;
^
chip/lm4/uart.c:148:0: information: Skipping configuration 'CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
DECLARE_IRQ(IRQ_UART_HOST, uart_host_interrupt, 2);
^
chip/lm4/uart.c:196:0: information: Skipping configuration 'CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 mask |= BIT(CONFIG_UART_HOST);
^
chip/lm4/uart.c:208:0: information: Skipping configuration 'CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 uart_config(CONFIG_UART_HOST);
^
chip/lm4/uart.c:292:0: information: Skipping configuration 'CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 uart_clear_rx_fifo(CONFIG_UART_HOST);
^
chip/lm4/uart.c:293:0: information: Skipping configuration 'CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 task_enable_irq(IRQ_UART_HOST);
^
chip/lm4/uart.c:298:0: information: Skipping configuration 'CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (LM4_UART_FR(CONFIG_UART_HOST) & 0x20) {
^
chip/lm4/uart.c:303:0: information: Skipping configuration 'CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  LM4_UART_IM(CONFIG_UART_HOST) |= 0x20;
^
chip/lm4/uart.c:312:0: information: Skipping configuration 'CONFIG_UART_HOST' since the value of 'CONFIG_UART_HOST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 LM4_UART_DR(CONFIG_UART_HOST) = c;
^
chip/lm4/watchdog.c:28:6: error: There is an unknown macro here somewhere. Configuration is required. If IRQ_HANDLER is a macro then please configure it. [unknownMacro]
void IRQ_HANDLER(LM4_IRQ_WATCHDOG)(void)
     ^
chip/max32660/flash_chip.c:42:10: error: Null pointer dereference: line_addr [nullPointer]
 line = *line_addr;
         ^
chip/max32660/flash_chip.c:41:14: note: Assignment 'line_addr=(uint32_t*)(0x00000000UL)', assigned value is 0
 line_addr = (uint32_t *)(MXC_FLASH_MEM_BASE);
             ^
chip/max32660/flash_chip.c:42:10: note: Null pointer dereference
 line = *line_addr;
         ^
chip/max32660/flash_chip.c:114:11: style: The scope of the variable 'bytes_written' can be reduced. [variableScope]
 uint32_t bytes_written;
          ^
chip/max32660/flash_chip.c:239:6: style: The scope of the variable 'error_status' can be reduced. [variableScope]
 int error_status;
     ^
chip/max32660/gpio_chip.c:149:2: warning: Possible null pointer dereference: gpio [nullPointer]
 gpio->int_en_set = gpio_list[signal].mask;
 ^
chip/max32660/gpio_chip.c:147:26: note: Assignment 'gpio=(gpio_list[signal].port)==0?((mxc_gpio_regs_t*)((uint32_t)0x40008000UL)):0', assigned value is 0
 mxc_gpio_regs_t *gpio = MXC_GPIO_GET_GPIO(gpio_list[signal].port);
                         ^
chip/max32660/gpio_chip.c:149:2: note: Null pointer dereference
 gpio->int_en_set = gpio_list[signal].mask;
 ^
chip/max32660/gpio_chip.c:157:2: warning: Possible null pointer dereference: gpio [nullPointer]
 gpio->int_en_clr = gpio_list[signal].mask;
 ^
chip/max32660/gpio_chip.c:155:26: note: Assignment 'gpio=(gpio_list[signal].port)==0?((mxc_gpio_regs_t*)((uint32_t)0x40008000UL)):0', assigned value is 0
 mxc_gpio_regs_t *gpio = MXC_GPIO_GET_GPIO(gpio_list[signal].port);
                         ^
chip/max32660/gpio_chip.c:157:2: note: Null pointer dereference
 gpio->int_en_clr = gpio_list[signal].mask;
 ^
chip/max32660/gpio_chip.c:165:2: warning: Possible null pointer dereference: gpio [nullPointer]
 gpio->int_clr = gpio_list[signal].mask;
 ^
chip/max32660/gpio_chip.c:163:26: note: Assignment 'gpio=(gpio_list[signal].port)==0?((mxc_gpio_regs_t*)((uint32_t)0x40008000UL)):0', assigned value is 0
 mxc_gpio_regs_t *gpio = MXC_GPIO_GET_GPIO(gpio_list[signal].port);
                         ^
chip/max32660/gpio_chip.c:165:2: note: Null pointer dereference
 gpio->int_clr = gpio_list[signal].mask;
 ^
chip/max32660/i2c_chip.c:756:23: style: Condition 'target_bus_freq<1000' is always false [knownConditionTrueFalse]
  if (target_bus_freq < 1000) {
                      ^
chip/max32660/i2c_chip.c:751:15: note: Assuming that condition 'i2cspeed==I2C_HS_MODE' is not redundant
 if (i2cspeed == I2C_HS_MODE) {
              ^
chip/max32660/i2c_chip.c:755:21: note: Assignment 'target_bus_freq=i2cspeed', assigned value is 3400000
  target_bus_freq = i2cspeed;
                    ^
chip/max32660/i2c_chip.c:756:23: note: Condition 'target_bus_freq<1000' is always false
  if (target_bus_freq < 1000) {
                      ^
chip/max32660/i2c_chip.c:861:15: warning: Redundant assignment of 'i2c->int_fl0' to itself. [selfAssignment]
 i2c->int_fl0 = i2c->int_fl0;
              ^
chip/max32660/i2c_chip.c:862:15: warning: Redundant assignment of 'i2c->int_fl1' to itself. [selfAssignment]
 i2c->int_fl1 = i2c->int_fl1;
              ^
chip/max32660/i2c_chip.c:896:15: warning: Redundant assignment of 'i2c->int_fl0' to itself. [selfAssignment]
 i2c->int_fl0 = i2c->int_fl0;
              ^
chip/max32660/i2c_chip.c:1019:15: warning: Redundant assignment of 'i2c->int_fl0' to itself. [selfAssignment]
 i2c->int_fl0 = i2c->int_fl0;
              ^
chip/max32660/i2c_chip.c:744:11: style: The scope of the variable 'time_pclk' can be reduced. [variableScope]
 uint32_t time_pclk;
          ^
chip/max32660/i2c_chip.c:745:11: style: The scope of the variable 'target_bus_freq' can be reduced. [variableScope]
 uint32_t target_bus_freq;
          ^
chip/max32660/i2c_chip.c:746:11: style: The scope of the variable 'time_scl_min' can be reduced. [variableScope]
 uint32_t time_scl_min;
          ^
chip/max32660/i2c_chip.c:747:11: style: The scope of the variable 'clock_low_min' can be reduced. [variableScope]
 uint32_t clock_low_min;
          ^
chip/max32660/i2c_chip.c:748:11: style: The scope of the variable 'clock_high_min' can be reduced. [variableScope]
 uint32_t clock_high_min;
          ^
chip/max32660/i2c_chip.c:749:11: style: The scope of the variable 'clock_min' can be reduced. [variableScope]
 uint32_t clock_min;
          ^
chip/max32660/i2c_chip.c:90:13: style: struct member 'i2c_req_state_t::req' is never used. [unusedStructMember]
 i2c_req_t *req;
            ^
chip/max32660/i2c_chip.c:128:10: style: struct member 'i2c_req::addr' is never used. [unusedStructMember]
 uint8_t addr;
         ^
chip/max32660/i2c_chip.c:129:10: style: struct member 'i2c_req::addr_match_flag' is never used. [unusedStructMember]
 uint8_t addr_match_flag;
         ^
chip/max32660/i2c_chip.c:130:17: style: struct member 'i2c_req::tx_data' is never used. [unusedStructMember]
 const uint8_t *tx_data;
                ^
chip/max32660/i2c_chip.c:131:11: style: struct member 'i2c_req::rx_data' is never used. [unusedStructMember]
 uint8_t *rx_data;
          ^
chip/max32660/i2c_chip.c:132:20: style: struct member 'i2c_req::received_count' is never used. [unusedStructMember]
 volatile unsigned received_count;
                   ^
chip/max32660/i2c_chip.c:133:15: style: struct member 'i2c_req::tx_remain' is never used. [unusedStructMember]
 volatile int tx_remain;
              ^
chip/max32660/i2c_chip.c:135:15: style: struct member 'i2c_req::restart' is never used. [unusedStructMember]
 volatile int restart;
              ^
chip/max32660/i2c_chip.c:136:16: style: struct member 'i2c_req::response_pending' is never used. [unusedStructMember]
 volatile bool response_pending;
               ^
chip/max32660/i2c_chip.c:137:16: style: struct member 'i2c_req::expecting_done' is never used. [unusedStructMember]
 volatile bool expecting_done;
               ^
chip/max32660/i2c_chip.c:138:16: style: struct member 'i2c_req::expecting_start' is never used. [unusedStructMember]
 volatile bool expecting_start;
               ^
chip/max32660/i2c_chip.c:156:17: style: struct member 'i2c_port_data::out' is never used. [unusedStructMember]
 const uint8_t *out;
                ^
chip/max32660/i2c_chip.c:157:6: style: struct member 'i2c_port_data::out_size' is never used. [unusedStructMember]
 int out_size;
     ^
chip/max32660/i2c_chip.c:158:11: style: struct member 'i2c_port_data::in' is never used. [unusedStructMember]
 uint8_t *in;
          ^
chip/max32660/i2c_chip.c:159:6: style: struct member 'i2c_port_data::in_size' is never used. [unusedStructMember]
 int in_size;
     ^
chip/max32660/i2c_chip.c:160:6: style: struct member 'i2c_port_data::flags' is never used. [unusedStructMember]
 int flags;
     ^
chip/max32660/i2c_chip.c:161:6: style: struct member 'i2c_port_data::idx' is never used. [unusedStructMember]
 int idx;
     ^
chip/max32660/i2c_chip.c:162:6: style: struct member 'i2c_port_data::err' is never used. [unusedStructMember]
 int err;
     ^
chip/max32660/i2c_chip.c:164:15: style: struct member 'i2c_port_data::task_waiting' is never used. [unusedStructMember]
 volatile int task_waiting;
              ^
chip/max32660/i2c_chip.c:299:0: information: Skipping configuration 'CONFIG_BOARD_I2C_SLAVE_ADDR_FLAGS;CONFIG_HOSTCMD_I2C_SLAVE_ADDR_FLAGS' since the value of 'CONFIG_BOARD_I2C_SLAVE_ADDR_FLAGS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CONFIG_BOARD_I2C_SLAVE_ADDR_FLAGS;
^
chip/max32660/i2c_chip.c:400:0: information: Skipping configuration 'CONFIG_BOARD_I2C_SLAVE_ADDR_FLAGS;CONFIG_HOSTCMD_I2C_SLAVE_ADDR_FLAGS' since the value of 'CONFIG_BOARD_I2C_SLAVE_ADDR_FLAGS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    0, CONFIG_BOARD_I2C_SLAVE_ADDR_FLAGS,
^
chip/max32660/i2c_chip.c:577:0: information: Skipping configuration 'CONFIG_BOARD_I2C_SLAVE_ADDR_FLAGS;CONFIG_HOSTCMD_I2C_SLAVE_ADDR_FLAGS' since the value of 'CONFIG_BOARD_I2C_SLAVE_ADDR_FLAGS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     1, CONFIG_BOARD_I2C_SLAVE_ADDR_FLAGS, 0);
^
chip/max32660/i2c_chip.c:660:0: information: Skipping configuration 'CONFIG_BOARD_I2C_SLAVE_ADDR_FLAGS;CONFIG_HOSTCMD_I2C_SLAVE_ADDR_FLAGS' since the value of 'CONFIG_HOSTCMD_I2C_SLAVE_ADDR_FLAGS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 req_slave.addr = CONFIG_HOSTCMD_I2C_SLAVE_ADDR_FLAGS;
^
chip/max32660/i2c_chip.c:660:0: information: Skipping configuration 'CONFIG_HOSTCMD_I2C_SLAVE_ADDR_FLAGS' since the value of 'CONFIG_HOSTCMD_I2C_SLAVE_ADDR_FLAGS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 req_slave.addr = CONFIG_HOSTCMD_I2C_SLAVE_ADDR_FLAGS;
^
chip/mchp/adc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/clock.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 30 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/clock.c:182:17: style: The scope of the variable 'ns' can be reduced. [variableScope]
 uint32_t hcnt, ns;
                ^
chip/mchp/dma.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/dma.c:129:11: style: The scope of the variable 'nflags' can be reduced. [variableScope]
 uint32_t nflags;
          ^
chip/mchp/dma.c:168:11: style: The scope of the variable 'ch' can be reduced. [variableScope]
 uint32_t ch, ctrl;
          ^
chip/mchp/dma.c:168:15: style: The scope of the variable 'ctrl' can be reduced. [variableScope]
 uint32_t ch, ctrl;
              ^
chip/mchp/dma.c:307:11: style: The scope of the variable 'ctrl' can be reduced. [variableScope]
 uint32_t ctrl;
          ^
chip/mchp/dma.c:46:18: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 uint32_t unused = 0;
                 ^
chip/mchp/dma.c:58:9: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 unused += MCHP_DMA_MAIN_CTRL;
        ^
chip/mchp/espi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 30 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/espi.c:927:1: error: syntax error [syntaxError]
}
^
chip/mchp/fan.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/gpio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/gpio.c:55:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
chip/mchp/gpio.c:56:11: style: The scope of the variable 'val' can be reduced. [variableScope]
 uint32_t val;
          ^
chip/mchp/gpio.c:203:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
chip/mchp/gpio.c:320:6: style: The scope of the variable 'flags' can be reduced. [variableScope]
 int flags;
     ^
chip/mchp/gpio.c:26:9: style: struct member 'gpio_int_mapping::port_offset' is never used. [unusedStructMember]
 int8_t port_offset;
        ^
chip/mchp/gpio_cmds.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/gpio_cmds.c:88:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
chip/mchp/gpio_cmds.c:89:11: style: The scope of the variable 'gctrl' can be reduced. [variableScope]
 uint32_t gctrl;
          ^
chip/mchp/gpspi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/gpspi.c:114:23: style: Redundant condition: If 'EXPR', the comparison 'txdata != 0' is always true. [redundantCondition]
 if ((txdata != NULL) && (txdata != 0)) {
                      ^
chip/mchp/gpspi.c:223:22: style:inconclusive: Function 'gpspi_enable' argument 1 names different: declaration 'port' definition 'hw_port'. [funcArgNamesDifferent]
int gpspi_enable(int hw_port, int enable)
                     ^
chip/mchp/gpspi_chip.h:30:22: note: Function 'gpspi_enable' argument 1 names different: declaration 'port' definition 'hw_port'.
int gpspi_enable(int port, int enable);
                     ^
chip/mchp/gpspi.c:223:22: note: Function 'gpspi_enable' argument 1 names different: declaration 'port' definition 'hw_port'.
int gpspi_enable(int hw_port, int enable)
                     ^
chip/mchp/gpspi.c:59:17: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 uint8_t unused = 0;
                ^
chip/mchp/gpspi.c:63:10: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
  unused += MCHP_SPI_RD(ctrl);
         ^
chip/mchp/gpspi.c:66:10: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
  unused += MCHP_SPI_RD(ctrl);
         ^
chip/mchp/gpspi.c:76:17: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
 uint8_t unused = 0;
                ^
chip/mchp/gpspi.c:86:10: style: Variable 'unused' is assigned a value that is never used. [unreadVariable]
  unused += MCHP_SPI_RD(ctrl);
         ^
chip/mchp/gpspi.c:198:11: style: Variable 'hw_port' is assigned a value that is never used. [unreadVariable]
  hw_port = MCHP_SPI_RD(ctrl);
          ^
chip/mchp/hwtimer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/i2c.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/i2c.c:653:5: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
 rv = wait_byte_done(ctrl, 0xff, 0x00);
    ^
chip/mchp/i2c.c:615:5: note: rv is assigned
 rv = EC_SUCCESS;
    ^
chip/mchp/i2c.c:653:5: note: rv is overwritten
 rv = wait_byte_done(ctrl, 0xff, 0x00);
    ^
chip/mchp/i2c.c:797:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
chip/mchp/i2c.c:994:9: style: The scope of the variable 'controller' can be reduced. [variableScope]
 int i, controller, kbps;
        ^
chip/mchp/i2c.c:994:21: style: The scope of the variable 'kbps' can be reduced. [variableScope]
 int i, controller, kbps;
                    ^
chip/mchp/i2c.c:150:10: style: struct member 'Anonymous0::ctrl' is never used. [unusedStructMember]
 uint8_t ctrl;
         ^
chip/mchp/i2c.c:160:6: style: struct member 'Anonymous1::count' is never used. [unusedStructMember]
 int count;
     ^
chip/mchp/i2c.c:161:6: style: struct member 'Anonymous1::length' is never used. [unusedStructMember]
 int length;
     ^
chip/mchp/i2c.c:162:10: style: struct member 'Anonymous1::addr' is never used. [unusedStructMember]
 uint8_t addr;
         ^
chip/mchp/i2c.c:163:10: style: struct member 'Anonymous1::buffer' is never used. [unusedStructMember]
 uint8_t buffer[I2C_MAX_HOST_PACKET_SIZE_EXTEND];
         ^
chip/mchp/i2c.c:777:5: style: Variable 'u8' is assigned a value that is never used. [unreadVariable]
 u8 = MCHP_I2C_DATA(ctrl);
    ^
chip/mchp/i2c.c:1047:6: style: Unused variable: slave_idx [unusedVariable]
 int slave_idx;
     ^
chip/mchp/keyboard_raw.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/lfw/ec_lfw.c:388:0: information: Skipping configuration 'CONFIG_MCHP_JTAG_MODE' since the value of 'CONFIG_MCHP_JTAG_MODE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 MCHP_EC_JTAG_EN = CONFIG_MCHP_JTAG_MODE;
^
chip/mchp/lfw/ec_lfw.c:421:0: information: Skipping configuration 'CONFIG_MCHP_JTAG_MODE' since the value of 'CONFIG_MCHP_JTAG_MODE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 MCHP_EC_JTAG_EN = CONFIG_MCHP_JTAG_MODE;
^
chip/mchp/lpc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 26 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/lpc.c:333:2: warning: Either the condition 'instance>=5' is redundant or the array 'acpi_ec_pcr_slp[5]' is accessed at index 5, which is out of bounds. [arrayIndexOutOfBoundsCond]
 MCHP_PCR_SLP_DIS_DEV(acpi_ec_pcr_slp[instance]);
 ^
chip/mchp/lpc.c:330:15: note: Assuming that condition 'instance>=5' is not redundant
 if (instance >= MCHP_ACPI_EC_MAX)
              ^
chip/mchp/lpc.c:333:2: note: Array index out of bounds
 MCHP_PCR_SLP_DIS_DEV(acpi_ec_pcr_slp[instance]);
 ^
chip/mchp/lpc.c:347:34: warning: Either the condition 'instance>=5' is redundant or the array 'acpi_ec_nvic_ibf[5]' is accessed at index 5, which is out of bounds. [arrayIndexOutOfBoundsCond]
 task_enable_irq(acpi_ec_nvic_ibf[instance]);
                                 ^
chip/mchp/lpc.c:330:15: note: Assuming that condition 'instance>=5' is not redundant
 if (instance >= MCHP_ACPI_EC_MAX)
              ^
chip/mchp/lpc.c:347:34: note: Array index out of bounds
 task_enable_irq(acpi_ec_nvic_ibf[instance]);
                                 ^
chip/mchp/lpc.c:777:9: style: Variable 'result' is reassigned a value before the old one has been used. [redundantAssignment]
 result = 0;
        ^
chip/mchp/lpc.c:769:9: note: result is assigned
 result = MCHP_ACPI_EC_BYTE_CTL(0);
        ^
chip/mchp/lpc.c:777:9: note: result is overwritten
 result = 0;
        ^
chip/mchp/peci.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/peci.c:198:17: style: The scope of the variable 'data_byte' can be reduced. [variableScope]
 uint8_t temp1, data_byte, bit0;
                ^
chip/mchp/peci.c:350:6: style: The scope of the variable 'index' can be reduced. [variableScope]
 int index;
     ^
chip/mchp/peci.c:352:10: style: The scope of the variable 'aw_FCS_calc' can be reduced. [variableScope]
 uint8_t aw_FCS_calc;
         ^
chip/mchp/port80.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/port80.c:38:6: style: The scope of the variable 'd' can be reduced. [variableScope]
 int d;
     ^
chip/mchp/pwm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/qmspi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/qmspi.c:504:27: style: The scope of the variable 'opdma' can be reduced. [variableScope]
 const struct dma_option *opdma;
                          ^
chip/mchp/qmspi.c:505:19: style: The scope of the variable 'dmau' can be reduced. [variableScope]
 uint32_t d, did, dmau;
                  ^
chip/mchp/qmspi.c:506:11: style: The scope of the variable 'u' can be reduced. [variableScope]
 uint64_t u;
          ^
chip/mchp/qmspi.c:672:22: style:inconclusive: Function 'qmspi_enable' argument 1 names different: declaration 'port' definition 'hw_port'. [funcArgNamesDifferent]
int qmspi_enable(int hw_port, int enable)
                     ^
chip/mchp/qmspi_chip.h:35:22: note: Function 'qmspi_enable' argument 1 names different: declaration 'port' definition 'hw_port'.
int qmspi_enable(int port, int enable);
                     ^
chip/mchp/qmspi.c:672:22: note: Function 'qmspi_enable' argument 1 names different: declaration 'port' definition 'hw_port'.
int qmspi_enable(int hw_port, int enable)
                     ^
chip/mchp/qmspi.c:519:4: style: Variable 'd' is assigned a value that is never used. [unreadVariable]
 d = did = 0;
   ^
chip/mchp/spi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/system.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/tfdp.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/uart.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mchp/watchdog.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/mec1322/clock.c:277:11: style: The scope of the variable 'next_delay' can be reduced. [variableScope]
 uint32_t next_delay;
          ^
chip/mec1322/clock.c:278:11: style: The scope of the variable 'max_sleep_time' can be reduced. [variableScope]
 uint32_t max_sleep_time;
          ^
chip/mec1322/clock.c:279:6: style: The scope of the variable 'time_for_dsleep' can be reduced. [variableScope]
 int time_for_dsleep;
     ^
chip/mec1322/gpio.c:35:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
chip/mec1322/gpio.c:36:11: style: The scope of the variable 'val' can be reduced. [variableScope]
 uint32_t val;
          ^
chip/mec1322/gpio.c:81:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
chip/mec1322/gpio.c:82:11: style: The scope of the variable 'val' can be reduced. [variableScope]
 uint32_t val;
          ^
chip/mec1322/gpio.c:198:6: style: The scope of the variable 'flags' can be reduced. [variableScope]
 int flags;
     ^
chip/mec1322/gpio.c:255:9: style: The scope of the variable 'bit' can be reduced. [variableScope]
 int i, bit;
        ^
chip/mec1322/i2c.c:475:6: style: The scope of the variable 'controller' can be reduced. [variableScope]
 int controller;
     ^
chip/mec1322/lpc.c:48:0: information: Skipping configuration 'CONFIG_KEYBOARD_IRQ_GPIO' since the value of 'CONFIG_KEYBOARD_IRQ_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(CONFIG_KEYBOARD_IRQ_GPIO, 1);
^
chip/mec1322/lpc.c:51:0: information: Skipping configuration 'CONFIG_KEYBOARD_IRQ_GPIO' since the value of 'CONFIG_KEYBOARD_IRQ_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(CONFIG_KEYBOARD_IRQ_GPIO, 0);
^
chip/mec1322/lpc.c:55:0: information: Skipping configuration 'CONFIG_KEYBOARD_IRQ_GPIO' since the value of 'CONFIG_KEYBOARD_IRQ_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(CONFIG_KEYBOARD_IRQ_GPIO, 1);
^
chip/mec1322/lpc.c:81:0: information: Skipping configuration 'CONFIG_SCI_GPIO' since the value of 'CONFIG_SCI_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(CONFIG_SCI_GPIO, 0);
^
chip/mec1322/lpc.c:83:0: information: Skipping configuration 'CONFIG_SCI_GPIO' since the value of 'CONFIG_SCI_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(CONFIG_SCI_GPIO, 1);
^
chip/mec1322/port80.c:89:6: style: The scope of the variable 'data' can be reduced. [variableScope]
 int data;
     ^
chip/mec1322/spi.c:63:10: style: The scope of the variable 'unused' can be reduced. [variableScope]
 uint8_t unused __attribute__((unused)) = 0;
         ^
chip/mec1322/spi.c:106:10: style: The scope of the variable 'unused' can be reduced. [variableScope]
 uint8_t unused __attribute__((unused)) = 0;
         ^
chip/mec1322/watchdog.c:45:32: error: Signed integer overflow for expression '47999<<16'. [integerOverflow]
 val = (val & 0xffff) | (47999 << 16);
                               ^
chip/mt8192_scp/clock.c:165:11: style: The scope of the variable 'middle' can be reduced. [variableScope]
 uint32_t middle, min = 0, max = OSC_CALI_MASK;
          ^
chip/mt8192_scp/hostcmd.c:95:1: error: There is an unknown macro here somewhere. Configuration is required. If CONCAT3 is a macro then please configure it. [unknownMacro]
DECLARE_IPI(SCP_IPI_HOST_COMMAND, hostcmd_handler, 0);
^
chip/mt8192_scp/ipi.c:129:0: information: Skipping configuration 'HAS_TASK_HOSTCMD;SCP_IPI_INIT' since the value of 'SCP_IPI_INIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 ret = ipi_send(SCP_IPI_INIT, (void *)&scp_run, sizeof(scp_run), 1);
^
chip/mt8192_scp/ipi.c:129:0: information: Skipping configuration 'SCP_IPI_INIT' since the value of 'SCP_IPI_INIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 ret = ipi_send(SCP_IPI_INIT, (void *)&scp_run, sizeof(scp_run), 1);
^
chip/mt_scp/gpio.c:18:6: style: The scope of the variable 'bit' can be reduced. [variableScope]
 int bit, mode_reg_index, shift;
     ^
chip/mt_scp/gpio.c:18:11: style: The scope of the variable 'mode_reg_index' can be reduced. [variableScope]
 int bit, mode_reg_index, shift;
          ^
chip/mt_scp/gpio.c:18:27: style: The scope of the variable 'shift' can be reduced. [variableScope]
 int bit, mode_reg_index, shift;
                          ^
chip/mt_scp/gpio.c:19:11: style: The scope of the variable 'mode_bits' can be reduced. [variableScope]
 uint32_t mode_bits, mode_mask;
          ^
chip/mt_scp/ipi.c:253:0: information: Skipping configuration 'CONFIG_MKBP_USE_CUSTOM;HAS_TASK_HOSTCMD;IPI_SCP_INIT' since the value of 'IPI_SCP_INIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 ret = ipi_send(IPI_SCP_INIT, (void *)&scp_run, sizeof(scp_run), 1);
^
chip/mt_scp/ipi.c:253:0: information: Skipping configuration 'CONFIG_RPMSG_NAME_SERVICE;IPI_SCP_INIT' since the value of 'IPI_SCP_INIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 ret = ipi_send(IPI_SCP_INIT, (void *)&scp_run, sizeof(scp_run), 1);
^
chip/mt_scp/ipi.c:253:0: information: Skipping configuration 'HAS_TASK_HOSTCMD;IPI_SCP_INIT' since the value of 'IPI_SCP_INIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 ret = ipi_send(IPI_SCP_INIT, (void *)&scp_run, sizeof(scp_run), 1);
^
chip/mt_scp/ipi.c:253:0: information: Skipping configuration 'IPI_SCP_INIT' since the value of 'IPI_SCP_INIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 ret = ipi_send(IPI_SCP_INIT, (void *)&scp_run, sizeof(scp_run), 1);
^
chip/mt_scp/memmap.c:81:12: style: The scope of the variable 'addr' can be reduced. [variableScope]
 uintptr_t addr;
           ^
chip/mt_scp/memmap.c:110:12: style: The scope of the variable 'addr' can be reduced. [variableScope]
 uintptr_t addr;
           ^
chip/mt_scp/memmap.c:297:17: portability: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
 if ((ap_addr & SCP_L1_EXT_ADDR_OTHER_MSB_MASK) != CACHE_TRANS_AP_ADDR)
                ^
chip/mt_scp/memmap.c:312:18: portability: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
 if ((scp_addr & SCP_L1_EXT_ADDR_OTHER_MSB_MASK) !=
                 ^
chip/mt_scp/memmap.c:85:39: error: Signed integer overflow for expression '0x7ffffff<<5'. [integerOverflow]
  SCP_CACHE_OP(CACHE_DCACHE) = addr & SCP_CACHE_OP_TADDR_MASK;
                                      ^
chip/mt_scp/memmap.c:114:39: error: Signed integer overflow for expression '0x7ffffff<<5'. [integerOverflow]
  SCP_CACHE_OP(CACHE_DCACHE) = addr & SCP_CACHE_OP_TADDR_MASK;
                                      ^
chip/mt_scp/memmap.c:117:39: error: Signed integer overflow for expression '0x7ffffff<<5'. [integerOverflow]
  SCP_CACHE_OP(CACHE_DCACHE) = addr & SCP_CACHE_OP_TADDR_MASK;
                                      ^
chip/mt_scp/memmap.c:57:0: information: Skipping configuration 'CONFIG_DRAM_BASE' since the value of 'CONFIG_DRAM_BASE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
BUILD_ASSERT(CONFIG_DRAM_BASE == CACHE_TRANS_SCP_CACHE_ADDR);
^
chip/mt_scp/memmap.c:290:0: information: Skipping configuration 'CONFIG_DRAM_BASE' since the value of 'CONFIG_DRAM_BASE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
BUILD_ASSERT(CONFIG_DRAM_BASE == CACHE_TRANS_SCP_CACHE_ADDR);
^
chip/mt_scp/system.c:135:17: style: Variable 'flags' is assigned a value that is never used. [unreadVariable]
 uint32_t flags = 0;
                ^
chip/mt_scp/system.c:144:10: style: Variable 'flags' is assigned a value that is never used. [unreadVariable]
   flags |= EC_RESET_FLAG_WATCHDOG;
         ^
chip/mt_scp/system.c:146:10: style: Variable 'flags' is assigned a value that is never used. [unreadVariable]
   flags |= EC_RESET_FLAG_POWER_ON;
         ^
chip/mt_scp/system.c:148:10: style: Variable 'flags' is assigned a value that is never used. [unreadVariable]
   flags |= EC_RESET_FLAG_OTHER;
         ^
chip/mt_scp/system.c:151:9: style: Variable 'flags' is assigned a value that is never used. [unreadVariable]
  flags |= EC_RESET_FLAG_POWER_ON;
        ^
chip/npcx/adc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/adc.c:186:11: style: The scope of the variable 'chn_data' can be reduced. [variableScope]
 uint16_t chn_data;
          ^
chip/npcx/apm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/cec.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/cec.c:1019:11: style: The scope of the variable 'events' can be reduced. [variableScope]
 uint32_t events;
          ^
chip/npcx/clock.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/espi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/espi.c:152:14: style: The scope of the variable 'index' can be reduced. [variableScope]
 uint8_t  i, index;
             ^
chip/npcx/espi.c:184:13: style: The scope of the variable 'index' can be reduced. [variableScope]
 uint8_t i, index;
            ^
chip/npcx/espi.c:154:10: style: Unsigned expression 'config->idx' can't be negative so it is unnecessary to test it. [unsignedPositive]
 switch (VM_TYPE(config->idx)) {
         ^
chip/npcx/espi.c:186:10: style: Unsigned expression 'config->idx' can't be negative so it is unnecessary to test it. [unsignedPositive]
 switch (VM_TYPE(config->idx)) {
         ^
chip/npcx/fan.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/flash.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/flash.c:143:21: error: The address of local variable 'dest_addr' is accessed at non-zero index. [objectIndex]
 NPCX_UMA_AB2 = addr[2];
                    ^
chip/npcx/flash.c:141:29: note: Address of variable taken here.
 uint8_t *addr = (uint8_t *)&dest_addr;
                            ^
chip/npcx/flash.c:143:21: note: The address of local variable 'dest_addr' is accessed at non-zero index.
 NPCX_UMA_AB2 = addr[2];
                    ^
chip/npcx/flash.c:144:21: error: The address of local variable 'dest_addr' is accessed at non-zero index. [objectIndex]
 NPCX_UMA_AB1 = addr[1];
                    ^
chip/npcx/flash.c:141:29: note: Address of variable taken here.
 uint8_t *addr = (uint8_t *)&dest_addr;
                            ^
chip/npcx/flash.c:144:21: note: The address of local variable 'dest_addr' is accessed at non-zero index.
 NPCX_UMA_AB1 = addr[1];
                    ^
chip/npcx/flash.c:424:6: style: The scope of the variable 'write_size' can be reduced. [variableScope]
 int write_size;
     ^
chip/npcx/flash.c:498:6: style: The scope of the variable 'write_len' can be reduced. [variableScope]
 int write_len;
     ^
chip/npcx/gpio-npcx5.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/gpio-npcx7.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/gpio-npcx9.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/gpio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 25 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/gpio.c:261:6: style: The scope of the variable 'bit' can be reduced. [variableScope]
 int bit;
     ^
chip/npcx/header.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/hwtimer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/i2c-npcx5.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/i2c-npcx7.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/i2c-npcx9.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/i2c.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/i2c.c:294:11: style: The scope of the variable 'fifo_avail' can be reduced. [variableScope]
 int len, fifo_avail, i;
          ^
chip/npcx/keyboard_raw.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/lct.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/lpc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/peci.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/ps2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/pwm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/shi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/sib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/spi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/spi.c:38:19: style: The scope of the variable 'unused' can be reduced. [variableScope]
 volatile uint8_t unused __attribute__((unused));
                  ^
chip/npcx/spiflashfw/npcx_monitor.c:105:21: error: The address of local variable 'dest_addr' is accessed at non-zero index. [objectIndex]
 NPCX_UMA_AB2 = addr[2];
                    ^
chip/npcx/spiflashfw/npcx_monitor.c:103:29: note: Address of variable taken here.
 uint8_t *addr = (uint8_t *)&dest_addr;
                            ^
chip/npcx/spiflashfw/npcx_monitor.c:105:21: note: The address of local variable 'dest_addr' is accessed at non-zero index.
 NPCX_UMA_AB2 = addr[2];
                    ^
chip/npcx/spiflashfw/npcx_monitor.c:106:21: error: The address of local variable 'dest_addr' is accessed at non-zero index. [objectIndex]
 NPCX_UMA_AB1 = addr[1];
                    ^
chip/npcx/spiflashfw/npcx_monitor.c:103:29: note: Address of variable taken here.
 uint8_t *addr = (uint8_t *)&dest_addr;
                            ^
chip/npcx/spiflashfw/npcx_monitor.c:106:21: note: The address of local variable 'dest_addr' is accessed at non-zero index.
 NPCX_UMA_AB1 = addr[1];
                    ^
chip/npcx/spiflashfw/npcx_monitor.c:221:10: style: The scope of the variable 'cmp_data' can be reduced. [variableScope]
 uint8_t cmp_data;
         ^
chip/npcx/system-npcx5.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/system-npcx5.c:141:36: error: Subtracting pointers that point to different objects [comparePointers]
 for (i = 0; i < &__flash_lpfw_end - &__flash_lpfw_start; i++)
                                   ^
chip/npcx/system_chip.h:76:21: note: Variable declared here.
extern unsigned int __flash_lpfw_end;
                    ^
chip/npcx/system-npcx5.c:141:18: note: Address of variable taken here.
 for (i = 0; i < &__flash_lpfw_end - &__flash_lpfw_start; i++)
                 ^
chip/npcx/system_chip.h:73:21: note: Variable declared here.
extern unsigned int __flash_lpfw_start;
                    ^
chip/npcx/system-npcx5.c:141:38: note: Address of variable taken here.
 for (i = 0; i < &__flash_lpfw_end - &__flash_lpfw_start; i++)
                                     ^
chip/npcx/system-npcx5.c:141:36: note: Subtracting pointers that point to different objects
 for (i = 0; i < &__flash_lpfw_end - &__flash_lpfw_start; i++)
                                   ^
chip/npcx/system-npcx7.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/system-npcx9.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/system.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 33 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/system.c:654:3: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
  CLEAR_BIT(NPCX_WTC, NPCX_WTC_WIE);
  ^
chip/npcx/system.c:677:2: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
 SET_BIT(NPCX_WTC, NPCX_WTC_WIE);
 ^
chip/npcx/system.c:694:2: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
 CLEAR_BIT(NPCX_WTC, NPCX_WTC_WIE);
 ^
chip/npcx/system.c:654:3: error: Signed integer overflow for expression '0x1<<31'. [integerOverflow]
  CLEAR_BIT(NPCX_WTC, NPCX_WTC_WIE);
  ^
chip/npcx/system.c:677:2: error: Signed integer overflow for expression '0x1<<31'. [integerOverflow]
 SET_BIT(NPCX_WTC, NPCX_WTC_WIE);
 ^
chip/npcx/system.c:694:2: error: Signed integer overflow for expression '0x1<<31'. [integerOverflow]
 CLEAR_BIT(NPCX_WTC, NPCX_WTC_WIE);
 ^
chip/npcx/uart.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/uartn.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/uartn.c:201:6: style: The scope of the variable 'scratch' can be reduced. [variableScope]
 int scratch __attribute__ ((unused));
     ^
chip/npcx/watchdog.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/watchdog.c:120:6: error: There is an unknown macro here somewhere. Configuration is required. If IRQ_HANDLER is a macro then please configure it. [unknownMacro]
void IRQ_HANDLER(ITIM_INT(ITIM_WDG_NO))(void)
     ^
chip/npcx/wov.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/npcx/wov.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
chip/nrf51/bluetooth_le.c:459:21: error: The address of local variable 'addr' is accessed at non-zero index. [objectIndex]
 ((uint32_t *)&addr)[1] = BLE_RANDOM_ADDR_MSBS_STATIC << 8 | 0x5A4;
                    ^
chip/nrf51/bluetooth_le.c:459:15: note: Address of variable taken here.
 ((uint32_t *)&addr)[1] = BLE_RANDOM_ADDR_MSBS_STATIC << 8 | 0x5A4;
              ^
chip/nrf51/bluetooth_le.c:459:21: note: The address of local variable 'addr' is accessed at non-zero index.
 ((uint32_t *)&addr)[1] = BLE_RANDOM_ADDR_MSBS_STATIC << 8 | 0x5A4;
                    ^
chip/nrf51/bluetooth_le.c:104:9: warning: Identical condition and return expression 'rv', return value is always 0 [identicalConditionAfterEarlyExit]
 return rv;
        ^
chip/nrf51/bluetooth_le.c:82:6: note: If condition 'rv' is true, the function will return/exit
 if (rv)
     ^
chip/nrf51/bluetooth_le.c:104:9: note: Returning identical expression 'rv'
 return rv;
        ^
chip/nrf51/bluetooth_le.c:528:5: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
 rv = radio_disable();
    ^
chip/nrf51/bluetooth_le.c:508:5: note: rv is assigned
 rv = ble_radio_init(BLE_ADV_ACCESS_ADDRESS, BLE_ADV_CRCINIT);
    ^
chip/nrf51/bluetooth_le.c:528:5: note: rv is overwritten
 rv = radio_disable();
    ^
chip/nrf51/bluetooth_le.c:238:73: style:inconclusive: Function 'ble_radio_add_device_to_allow_list' argument 2 names different: declaration 'type' definition 'rand'. [funcArgNamesDifferent]
int ble_radio_add_device_to_allow_list(const uint8_t *addr_ptr, uint8_t rand)
                                                                        ^
chip/nrf51/bluetooth_le.h:64:73: note: Function 'ble_radio_add_device_to_allow_list' argument 2 names different: declaration 'type' definition 'rand'.
int ble_radio_add_device_to_allow_list(const uint8_t *addr_ptr, uint8_t type);
                                                                        ^
chip/nrf51/bluetooth_le.c:238:73: note: Function 'ble_radio_add_device_to_allow_list' argument 2 names different: declaration 'type' definition 'rand'.
int ble_radio_add_device_to_allow_list(const uint8_t *addr_ptr, uint8_t rand)
                                                                        ^
chip/nrf51/bluetooth_le.c:266:18: style:inconclusive: Function 'ble_radio_remove_device_from_allow_list' argument 2 names different: declaration 'type' definition 'rand'. [funcArgNamesDifferent]
         uint8_t rand)
                 ^
chip/nrf51/bluetooth_le.h:68:18: note: Function 'ble_radio_remove_device_from_allow_list' argument 2 names different: declaration 'type' definition 'rand'.
         uint8_t type);
                 ^
chip/nrf51/bluetooth_le.c:266:18: note: Function 'ble_radio_remove_device_from_allow_list' argument 2 names different: declaration 'type' definition 'rand'.
         uint8_t rand)
                 ^
chip/nrf51/gpio.c:297:15: warning: Either the condition 'g' is redundant or there is overflow in pointer subtraction. [nullPointerArithmeticRedundantCheck]
   signal = g - gpio_list;
              ^
chip/nrf51/gpio.c:298:8: note: Assuming that condition 'g' is not redundant
   if (g && signal < GPIO_IH_COUNT)
       ^
chip/nrf51/gpio.c:297:15: note: Null pointer subtraction
   signal = g - gpio_list;
              ^
chip/nrf51/gpio.c:306:14: warning: Either the condition 'g' is redundant or there is overflow in pointer subtraction. [nullPointerArithmeticRedundantCheck]
  signal = g - gpio_list;
             ^
chip/nrf51/gpio.c:307:7: note: Assuming that condition 'g' is not redundant
  if (g && signal < GPIO_IH_COUNT)
      ^
chip/nrf51/gpio.c:306:14: note: Null pointer subtraction
  signal = g - gpio_list;
             ^
chip/nrf51/gpio.c:195:6: style: The scope of the variable 'pin' can be reduced. [variableScope]
 int pin;
     ^
chip/nrf51/gpio.c:256:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
chip/nrf51/gpio.c:241:30: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
   NRF51_GPIOTE_INTENSET = 1 << NRF51_GPIOTE_PORT_BIT;
                             ^
chip/nrf51/gpio.c:276:29: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
  NRF51_GPIOTE_INTENCLR = 1 << NRF51_GPIOTE_PORT_BIT;
                            ^
chip/nrf51/gpio.c:241:30: error: Signed integer overflow for expression '1<<31'. [integerOverflow]
   NRF51_GPIOTE_INTENSET = 1 << NRF51_GPIOTE_PORT_BIT;
                             ^
chip/nrf51/gpio.c:276:29: error: Signed integer overflow for expression '1<<31'. [integerOverflow]
  NRF51_GPIOTE_INTENCLR = 1 << NRF51_GPIOTE_PORT_BIT;
                            ^
chip/nrf51/i2c.c:147:14: style: Variable 'timeout' is assigned a value that is never used. [unreadVariable]
 int timeout = I2C_TIMEOUT;
             ^
chip/nrf51/keyboard_raw.c:80:29: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
  NRF51_GPIOTE_INTENSET = 1 << NRF51_GPIOTE_PORT_BIT;
                            ^
chip/nrf51/keyboard_raw.c:82:29: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
  NRF51_GPIOTE_INTENCLR = 1 << NRF51_GPIOTE_PORT_BIT;
                            ^
chip/nrf51/keyboard_raw.c:80:29: error: Signed integer overflow for expression '1<<31'. [integerOverflow]
  NRF51_GPIOTE_INTENSET = 1 << NRF51_GPIOTE_PORT_BIT;
                            ^
chip/nrf51/keyboard_raw.c:82:29: error: Signed integer overflow for expression '1<<31'. [integerOverflow]
  NRF51_GPIOTE_INTENCLR = 1 << NRF51_GPIOTE_PORT_BIT;
                            ^
chip/nrf51/radio_test.c:137:9: warning: Identical condition and return expression 'rv', return value is always 0 [identicalConditionAfterEarlyExit]
 return rv;
        ^
chip/nrf51/radio_test.c:108:6: note: If condition 'rv' is true, the function will return/exit
 if (rv)
     ^
chip/nrf51/radio_test.c:137:9: note: Returning identical expression 'rv'
 return rv;
        ^
chip/nrf51/radio_test.c:48:6: style: The scope of the variable 'lsb' can be reduced. [variableScope]
 int lsb;
     ^
chip/nrf51/radio_test.c:146:26: warning: Function 'ble_test_tx_init' argument order different: declaration 'chan, type, len' definition 'chan, len, type' [funcArgOrderDifferent]
int ble_test_tx_init(int chan, int len, int type)
                         ^
chip/nrf51/radio_test.h:35:26: note: Function 'ble_test_tx_init' argument order different: declaration 'chan, type, len' definition 'chan, len, type'
int ble_test_tx_init(int chan, int type, int len);
                         ^
chip/nrf51/radio_test.c:146:26: note: Function 'ble_test_tx_init' argument order different: declaration 'chan, type, len' definition 'chan, len, type'
int ble_test_tx_init(int chan, int len, int type)
                         ^
chip/stm32/adc-stm32f0.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/adc-stm32f0.c:313:26: style: Condition 'adc_watchdog_enabled()' is always false [knownConditionTrueFalse]
 if (adc_watchdog_enabled()) {
                         ^
chip/stm32/adc-stm32f0.c:332:6: style: Condition 'restore_watchdog' is always false [knownConditionTrueFalse]
 if (restore_watchdog)
     ^
chip/stm32/adc-stm32f0.c:307:25: note: Assignment 'restore_watchdog=0', assigned value is 0
 int restore_watchdog = 0;
                        ^
chip/stm32/adc-stm32f0.c:332:6: note: Condition 'restore_watchdog' is always false
 if (restore_watchdog)
     ^
chip/stm32/adc-stm32f0.c:26:11: style: struct member 'adc_profile_t::ier_reg' is never used. [unusedStructMember]
 uint32_t ier_reg;
          ^
chip/stm32/adc-stm32f0.c:28:27: style: struct member 'adc_profile_t::dma_option' is never used. [unusedStructMember]
 const struct dma_option *dma_option;
                          ^
chip/stm32/adc-stm32f0.c:30:6: style: struct member 'adc_profile_t::dma_buffer_size' is never used. [unusedStructMember]
 int dma_buffer_size;
     ^
chip/stm32/adc-stm32f3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/adc-stm32f4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/adc-stm32l.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/bkpdata.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/charger_detect.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/clock-f.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/clock-stm32f0.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 32 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/clock-stm32f3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 32 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/clock-stm32f4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/clock-stm32f4.c:122:6: error: Signed integer overflow for expression '2<<30'. [integerOverflow]
  (2 << 30) |  /* MCO2 <- HSE */
     ^
chip/stm32/clock-stm32g4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/clock-stm32h7.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/clock-stm32l.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/clock-stm32l4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/debug_printf.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/dma-stm32f4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/dma-stm32f4.c:108:18: style: Variable 'dma_stream->scr' is reassigned a value before the old one has been used. [redundantAssignment]
 dma_stream->scr = ccr;
                 ^
chip/stm32/dma-stm32f4.c:106:18: note: dma_stream->scr is assigned
 dma_stream->scr = ccr;
                 ^
chip/stm32/dma-stm32f4.c:108:18: note: dma_stream->scr is overwritten
 dma_stream->scr = ccr;
                 ^
chip/stm32/dma-stm32f4.c:111:18: style: Variable 'dma_stream->scr' is reassigned a value before the old one has been used. [redundantAssignment]
 dma_stream->scr = ccr;
                 ^
chip/stm32/dma-stm32f4.c:108:18: note: dma_stream->scr is assigned
 dma_stream->scr = ccr;
                 ^
chip/stm32/dma-stm32f4.c:111:18: note: dma_stream->scr is overwritten
 dma_stream->scr = ccr;
                 ^
chip/stm32/dma.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/dma.c:374:1: error: There is an unknown macro here somewhere. Configuration is required. If CONCAT2 is a macro then please configure it. [unknownMacro]
DECLARE_DMA_IRQ(1);
^
chip/stm32/dma.c:132:12: style: Variable 'chan->ccr' is reassigned a value before the old one has been used. [redundantAssignment]
 chan->ccr = ccr;
           ^
chip/stm32/dma.c:130:12: note: chan->ccr is assigned
 chan->ccr = ccr;
           ^
chip/stm32/dma.c:132:12: note: chan->ccr is overwritten
 chan->ccr = ccr;
           ^
chip/stm32/flash-f.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 28 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/flash-f.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
chip/stm32/flash-stm32f0.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/flash-stm32f3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/flash-stm32f3.c:98:30: error: syntax error: ||) [syntaxError]
 return (entire_flash_locked ||
                             ^
chip/stm32/flash-stm32f4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/flash-stm32f4.c:98:30: error: syntax error: ||) [syntaxError]
 return (entire_flash_locked ||
                             ^
chip/stm32/flash-stm32g4-l4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/flash-stm32h7.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/flash-stm32h7.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
chip/stm32/flash-stm32l.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/flash-stm32l.c:60:23: style: The if condition is the same as the previous if condition [duplicateCondition]
 if (STM32_FLASH_PECR & STM32_FLASH_PECR_PE_LOCK) {
                      ^
chip/stm32/flash-stm32l.c:54:23: note: First condition
 if (STM32_FLASH_PECR & STM32_FLASH_PECR_PE_LOCK) {
                      ^
chip/stm32/flash-stm32l.c:60:23: note: Second condition
 if (STM32_FLASH_PECR & STM32_FLASH_PECR_PE_LOCK) {
                      ^
chip/stm32/gpio-f0-l.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/gpio-f0-l.c:34:21: style: Opposite expression on both sides of '&'. [oppositeExpression]
 if ((mask != (mask & -mask)) || (mask == 0))
                    ^
chip/stm32/gpio-stm32f0.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/gpio-stm32f3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/gpio-stm32f4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/gpio-stm32g4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/gpio-stm32h7.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/gpio-stm32l.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/gpio-stm32l4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/gpio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/gpio.c:158:6: style: The scope of the variable 'bit' can be reduced. [variableScope]
 int bit;
     ^
chip/stm32/gpio.c:161:10: style: The scope of the variable 'signal' can be reduced. [variableScope]
 uint8_t signal;
         ^
chip/stm32/hwtimer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/hwtimer32.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 25 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/i2c-stm32f0.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 23 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/i2c-stm32f3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 23 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/i2c-stm32f4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/i2c-stm32f4.c:656:29: style: Local variable 'p' shadows outer variable [shadowVariable]
   const struct i2c_port_t *p;
                            ^
chip/stm32/i2c-stm32f4.c:559:27: note: Shadowed declaration
 const struct i2c_port_t *p = find_port(port);
                          ^
chip/stm32/i2c-stm32f4.c:656:29: note: Shadow variable
   const struct i2c_port_t *p;
                            ^
chip/stm32/i2c-stm32f4.c:191:5: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
 rv = STM32_I2C_SR2(port);
    ^
chip/stm32/i2c-stm32g4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/i2c-stm32g4.c:139:21: style: Expression is always false because 'else if' condition matches previous condition at line 137. [multiCondition]
 } else if (p->kbps == freq_400) {
                    ^
chip/stm32/i2c-stm32l.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/i2c-stm32l.c:119:5: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
 rv = STM32_I2C_SR2(port);
    ^
chip/stm32/i2c-stm32l4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/i2c_ite_flash_support.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/i2c_ite_flash_support.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
chip/stm32/keyboard_raw.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/keyboard_raw.c:107:15: style: The scope of the variable 'port' can be reduced. [variableScope]
 unsigned int port, prev_port = 0;
              ^
chip/stm32/otp-stm32f4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/power_led.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/pwm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/spi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/spi_master-stm32h7.c:180:14: style: The scope of the variable 'txdma' can be reduced. [variableScope]
 dma_chan_t *txdma;
             ^
chip/stm32/spi_master.c:120:10: style: The scope of the variable 'unused' can be reduced. [variableScope]
 uint8_t unused __attribute__((unused));
         ^
chip/stm32/spi_master.c:121:45: style: The scope of the variable 'delta' can be reduced. [variableScope]
 uint32_t start = __hw_clock_source_read(), delta;
                                            ^
chip/stm32/spi_master.c:135:45: style: The scope of the variable 'delta' can be reduced. [variableScope]
 uint32_t start = __hw_clock_source_read(), delta;
                                            ^
chip/stm32/spi_master.c:287:14: style: The scope of the variable 'txdma' can be reduced. [variableScope]
 dma_chan_t *txdma;
             ^
chip/stm32/system.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 30 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/system.c:197:6: style: Condition 'apb1fz_reg' is always false [knownConditionTrueFalse]
 if (apb1fz_reg)
     ^
chip/stm32/system.c:142:24: note: Assignment 'apb1fz_reg=0', assigned value is 0
 uint32_t apb1fz_reg = 0;
                       ^
chip/stm32/system.c:197:6: note: Condition 'apb1fz_reg' is always false
 if (apb1fz_reg)
     ^
chip/stm32/system.c:199:6: style: Condition 'apb2fz_reg' is always false [knownConditionTrueFalse]
 if (apb2fz_reg)
     ^
chip/stm32/system.c:143:24: note: Assignment 'apb2fz_reg=0', assigned value is 0
 uint32_t apb2fz_reg = 0;
                       ^
chip/stm32/system.c:199:6: note: Condition 'apb2fz_reg' is always false
 if (apb2fz_reg)
     ^
chip/stm32/trng.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/trng.c:46:10: portability: 'buffer' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
  buffer += cnt;
         ^
chip/stm32/uart.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 29 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/ucpd-stm32gx.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/ucpd-stm32gx.c:80:27: style:inconclusive: Function 'stm32gx_ucpd_init' argument 1 names different: declaration 'usbc_port' definition 'port'. [funcArgNamesDifferent]
int stm32gx_ucpd_init(int port)
                          ^
chip/stm32/ucpd-stm32gx.h:63:27: note: Function 'stm32gx_ucpd_init' argument 1 names different: declaration 'usbc_port' definition 'port'.
int stm32gx_ucpd_init(int usbc_port);
                          ^
chip/stm32/ucpd-stm32gx.c:80:27: note: Function 'stm32gx_ucpd_init' argument 1 names different: declaration 'usbc_port' definition 'port'.
int stm32gx_ucpd_init(int port)
                          ^
chip/stm32/ucpd-stm32gx.c:122:30: style:inconclusive: Function 'stm32gx_ucpd_release' argument 1 names different: declaration 'usbc_port' definition 'port'. [funcArgNamesDifferent]
int stm32gx_ucpd_release(int port)
                             ^
chip/stm32/ucpd-stm32gx.h:71:30: note: Function 'stm32gx_ucpd_release' argument 1 names different: declaration 'usbc_port' definition 'port'.
int stm32gx_ucpd_release(int usbc_port);
                             ^
chip/stm32/ucpd-stm32gx.c:122:30: note: Function 'stm32gx_ucpd_release' argument 1 names different: declaration 'usbc_port' definition 'port'.
int stm32gx_ucpd_release(int port)
                             ^
chip/stm32/ucpd-stm32gx.c:129:29: style:inconclusive: Function 'stm32gx_ucpd_get_cc' argument 1 names different: declaration 'usbc_port' definition 'port'. [funcArgNamesDifferent]
int stm32gx_ucpd_get_cc(int port, enum tcpc_cc_voltage_status *cc1,
                            ^
chip/stm32/ucpd-stm32gx.h:81:29: note: Function 'stm32gx_ucpd_get_cc' argument 1 names different: declaration 'usbc_port' definition 'port'.
int stm32gx_ucpd_get_cc(int usbc_port, enum tcpc_cc_voltage_status *cc1,
                            ^
chip/stm32/ucpd-stm32gx.c:129:29: note: Function 'stm32gx_ucpd_get_cc' argument 1 names different: declaration 'usbc_port' definition 'port'.
int stm32gx_ucpd_get_cc(int port, enum tcpc_cc_voltage_status *cc1,
                            ^
chip/stm32/ucpd-stm32gx.c:182:39: style:inconclusive: Function 'stm32gx_ucpd_get_role_control' argument 1 names different: declaration 'usbc_port' definition 'port'. [funcArgNamesDifferent]
int stm32gx_ucpd_get_role_control(int port)
                                      ^
chip/stm32/ucpd-stm32gx.h:90:39: note: Function 'stm32gx_ucpd_get_role_control' argument 1 names different: declaration 'usbc_port' definition 'port'.
int stm32gx_ucpd_get_role_control(int usbc_port);
                                      ^
chip/stm32/ucpd-stm32gx.c:182:39: note: Function 'stm32gx_ucpd_get_role_control' argument 1 names different: declaration 'usbc_port' definition 'port'.
int stm32gx_ucpd_get_role_control(int port)
                                      ^
chip/stm32/ucpd-stm32gx.c:229:29: style:inconclusive: Function 'stm32gx_ucpd_set_cc' argument 1 names different: declaration 'usbc_port' definition 'port'. [funcArgNamesDifferent]
int stm32gx_ucpd_set_cc(int port, int cc_pull, int rp)
                            ^
chip/stm32/ucpd-stm32gx.h:100:29: note: Function 'stm32gx_ucpd_set_cc' argument 1 names different: declaration 'usbc_port' definition 'port'.
int stm32gx_ucpd_set_cc(int usbc_port, int cc_pull, int rp);
                            ^
chip/stm32/ucpd-stm32gx.c:229:29: note: Function 'stm32gx_ucpd_set_cc' argument 1 names different: declaration 'usbc_port' definition 'port'.
int stm32gx_ucpd_set_cc(int port, int cc_pull, int rp)
                            ^
chip/stm32/ucpd-stm32gx.c:259:35: style:inconclusive: Function 'stm32gx_ucpd_set_polarity' argument 1 names different: declaration 'usbc_port' definition 'port'. [funcArgNamesDifferent]
int stm32gx_ucpd_set_polarity(int port, enum tcpc_cc_polarity polarity)
                                  ^
chip/stm32/ucpd-stm32gx.h:109:35: note: Function 'stm32gx_ucpd_set_polarity' argument 1 names different: declaration 'usbc_port' definition 'port'.
int stm32gx_ucpd_set_polarity(int usbc_port, enum tcpc_cc_polarity polarity);
                                  ^
chip/stm32/ucpd-stm32gx.c:259:35: note: Function 'stm32gx_ucpd_set_polarity' argument 1 names different: declaration 'usbc_port' definition 'port'.
int stm32gx_ucpd_set_polarity(int port, enum tcpc_cc_polarity polarity)
                                  ^
chip/stm32/usart-stm32f0.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 23 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usart-stm32f3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usart-stm32f4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usart-stm32l.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usart.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usart_host_command.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usart_host_command.c:98:8: error: syntax error [syntaxError]
static enum uart_host_command_state {
       ^
chip/stm32/usart_rx_dma.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usart_rx_interrupt-stm32f0.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usart_rx_interrupt-stm32f3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usart_rx_interrupt-stm32f4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usart_rx_interrupt-stm32l.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usart_rx_interrupt.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usart_tx_dma.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usart_tx_interrupt.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usb-stm32f0.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usb-stm32l.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usb-stream.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usb.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 28 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usb.c:773:12: error: The address of local variable 'data' is accessed at non-zero index. [objectIndex]
  *d++ = (s[1] << 8) | s[0];
           ^
chip/stm32/usb.c:149:4: note: Address of variable taken here.
   &desc_patches[i].data, sizeof(desc_patches[i].data));
   ^
chip/stm32/usb.c:149:4: note: Calling function 'memcpy_to_usbram', 2nd argument '&desc_patches[i].data' value is lifetime=data
   &desc_patches[i].data, sizeof(desc_patches[i].data));
   ^
chip/stm32/usb.c:765:16: note: Assuming condition is false
 if (unaligned && n) {
               ^
chip/stm32/usb.c:773:12: note: The address of local variable 'data' is accessed at non-zero index.
  *d++ = (s[1] << 8) | s[0];
           ^
chip/stm32/usb.c:773:12: error: The address of local variable 'data' is accessed at non-zero index. [objectIndex]
  *d++ = (s[1] << 8) | s[0];
           ^
chip/stm32/usb.c:269:50: note: Address of variable taken here.
  memcpy_to_usbram(EP0_BUF_TX_SRAM_ADDR, (void *)&data, 2);
                                                 ^
chip/stm32/usb.c:269:42: note: Calling function 'memcpy_to_usbram', 2nd argument '(void*)&data' value is lifetime=data
  memcpy_to_usbram(EP0_BUF_TX_SRAM_ADDR, (void *)&data, 2);
                                         ^
chip/stm32/usb.c:765:16: note: Assuming condition is false
 if (unaligned && n) {
               ^
chip/stm32/usb.c:773:12: note: The address of local variable 'data' is accessed at non-zero index.
  *d++ = (s[1] << 8) | s[0];
           ^
chip/stm32/usb.c:773:12: error: The address of local variable 'dev_desc' is accessed at non-zero index. [objectIndex]
  *d++ = (s[1] << 8) | s[0];
           ^
chip/stm32/usb.c:226:19: note: Address of variable taken here.
   desc = (void *)&dev_desc;
                  ^
chip/stm32/usb.c:257:23: note: Calling function 'ep0_send_descriptor', 1st argument 'desc' value is lifetime=dev_desc
  ep0_send_descriptor(desc, len, type == USB_DT_CONFIGURATION ?
                      ^
chip/stm32/usb.c:169:29: note: Calling function 'memcpy_to_usbram_ep0_patch', 1st argument 'desc' value is lifetime=dev_desc
 memcpy_to_usbram_ep0_patch(desc, len);
                            ^
chip/stm32/usb.c:140:60: note: Calling function 'memcpy_to_usbram', 2nd argument 'src' value is lifetime=dev_desc
 ret = memcpy_to_usbram((void *)usb_sram_addr(ep0_buf_tx), src, n);
                                                           ^
chip/stm32/usb.c:765:16: note: Assuming condition is false
 if (unaligned && n) {
               ^
chip/stm32/usb.c:773:12: note: The address of local variable 'dev_desc' is accessed at non-zero index.
  *d++ = (s[1] << 8) | s[0];
           ^
chip/stm32/usb.c:140:33: error: Subtracting pointers that point to different objects [comparePointers]
 ret = memcpy_to_usbram((void *)usb_sram_addr(ep0_buf_tx), src, n);
                                ^
chip/stm32/usb.c:95:17: note: Variable declared here.
static usb_uint ep0_buf_tx[USB_MAX_PACKET_SIZE / 2] __usb_ram;
                ^
chip/stm32/usb.c:140:33: note: Array decayed to pointer here.
 ret = memcpy_to_usbram((void *)usb_sram_addr(ep0_buf_tx), src, n);
                                ^
chip/stm32/usb_hw.h:32:17: note: Variable declared here.
extern usb_uint __usb_ram_start[];
                ^
chip/stm32/usb.c:140:33: note: Array decayed to pointer here.
 ret = memcpy_to_usbram((void *)usb_sram_addr(ep0_buf_tx), src, n);
                                ^
chip/stm32/usb.c:140:33: note: Subtracting pointers that point to different objects
 ret = memcpy_to_usbram((void *)usb_sram_addr(ep0_buf_tx), src, n);
                                ^
chip/stm32/usb.c:148:29: error: Subtracting pointers that point to different objects [comparePointers]
  memcpy_to_usbram((void *)(usb_sram_addr(ep0_buf_tx) + offset),
                            ^
chip/stm32/usb.c:95:17: note: Variable declared here.
static usb_uint ep0_buf_tx[USB_MAX_PACKET_SIZE / 2] __usb_ram;
                ^
chip/stm32/usb.c:148:29: note: Array decayed to pointer here.
  memcpy_to_usbram((void *)(usb_sram_addr(ep0_buf_tx) + offset),
                            ^
chip/stm32/usb_hw.h:32:17: note: Variable declared here.
extern usb_uint __usb_ram_start[];
                ^
chip/stm32/usb.c:148:29: note: Array decayed to pointer here.
  memcpy_to_usbram((void *)(usb_sram_addr(ep0_buf_tx) + offset),
                            ^
chip/stm32/usb.c:148:29: note: Subtracting pointers that point to different objects
  memcpy_to_usbram((void *)(usb_sram_addr(ep0_buf_tx) + offset),
                            ^
chip/stm32/usb.c:269:20: error: Subtracting pointers that point to different objects [comparePointers]
  memcpy_to_usbram(EP0_BUF_TX_SRAM_ADDR, (void *)&data, 2);
                   ^
chip/stm32/usb.c:95:17: note: Variable declared here.
static usb_uint ep0_buf_tx[USB_MAX_PACKET_SIZE / 2] __usb_ram;
                ^
chip/stm32/usb.c:269:20: note: Array decayed to pointer here.
  memcpy_to_usbram(EP0_BUF_TX_SRAM_ADDR, (void *)&data, 2);
                   ^
chip/stm32/usb_hw.h:32:17: note: Variable declared here.
extern usb_uint __usb_ram_start[];
                ^
chip/stm32/usb.c:269:20: note: Array decayed to pointer here.
  memcpy_to_usbram(EP0_BUF_TX_SRAM_ADDR, (void *)&data, 2);
                   ^
chip/stm32/usb.c:269:20: note: Subtracting pointers that point to different objects
  memcpy_to_usbram(EP0_BUF_TX_SRAM_ADDR, (void *)&data, 2);
                   ^
chip/stm32/usb.c:325:20: error: Subtracting pointers that point to different objects [comparePointers]
  memcpy_to_usbram(EP0_BUF_TX_SRAM_ADDR, desc_ptr, len);
                   ^
chip/stm32/usb.c:95:17: note: Variable declared here.
static usb_uint ep0_buf_tx[USB_MAX_PACKET_SIZE / 2] __usb_ram;
                ^
chip/stm32/usb.c:325:20: note: Array decayed to pointer here.
  memcpy_to_usbram(EP0_BUF_TX_SRAM_ADDR, desc_ptr, len);
                   ^
chip/stm32/usb_hw.h:32:17: note: Variable declared here.
extern usb_uint __usb_ram_start[];
                ^
chip/stm32/usb.c:325:20: note: Array decayed to pointer here.
  memcpy_to_usbram(EP0_BUF_TX_SRAM_ADDR, desc_ptr, len);
                   ^
chip/stm32/usb.c:325:20: note: Subtracting pointers that point to different objects
  memcpy_to_usbram(EP0_BUF_TX_SRAM_ADDR, desc_ptr, len);
                   ^
chip/stm32/usb.c:358:25: error: Subtracting pointers that point to different objects [comparePointers]
 btable_ep[0].tx_addr = usb_sram_addr(ep0_buf_tx);
                        ^
chip/stm32/usb.c:95:17: note: Variable declared here.
static usb_uint ep0_buf_tx[USB_MAX_PACKET_SIZE / 2] __usb_ram;
                ^
chip/stm32/usb.c:358:25: note: Array decayed to pointer here.
 btable_ep[0].tx_addr = usb_sram_addr(ep0_buf_tx);
                        ^
chip/stm32/usb_hw.h:32:17: note: Variable declared here.
extern usb_uint __usb_ram_start[];
                ^
chip/stm32/usb.c:358:25: note: Array decayed to pointer here.
 btable_ep[0].tx_addr = usb_sram_addr(ep0_buf_tx);
                        ^
chip/stm32/usb.c:358:25: note: Subtracting pointers that point to different objects
 btable_ep[0].tx_addr = usb_sram_addr(ep0_buf_tx);
                        ^
chip/stm32/usb.c:359:25: error: Subtracting pointers that point to different objects [comparePointers]
 btable_ep[0].rx_addr = usb_sram_addr(ep0_buf_rx);
                        ^
chip/stm32/usb.c:96:17: note: Variable declared here.
static usb_uint ep0_buf_rx[USB_MAX_PACKET_SIZE / 2] __usb_ram;
                ^
chip/stm32/usb.c:359:25: note: Array decayed to pointer here.
 btable_ep[0].rx_addr = usb_sram_addr(ep0_buf_rx);
                        ^
chip/stm32/usb_hw.h:32:17: note: Variable declared here.
extern usb_uint __usb_ram_start[];
                ^
chip/stm32/usb.c:359:25: note: Array decayed to pointer here.
 btable_ep[0].rx_addr = usb_sram_addr(ep0_buf_rx);
                        ^
chip/stm32/usb.c:359:25: note: Subtracting pointers that point to different objects
 btable_ep[0].rx_addr = usb_sram_addr(ep0_buf_rx);
                        ^
chip/stm32/usb_console.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usb_console.c:148:6: style: The scope of the variable 'wait_time_us' can be reduced. [variableScope]
 int wait_time_us = 1;
     ^
chip/stm32/usb_console.c:103:39: error: Subtracting pointers that point to different objects [comparePointers]
 btable_ep[USB_EP_CONSOLE].tx_addr  = usb_sram_addr(ep_buf_tx);
                                      ^
chip/stm32/usb_console.c:63:17: note: Variable declared here.
static usb_uint ep_buf_tx[USB_MAX_PACKET_SIZE / 2] __usb_ram;
                ^
chip/stm32/usb_console.c:103:39: note: Array decayed to pointer here.
 btable_ep[USB_EP_CONSOLE].tx_addr  = usb_sram_addr(ep_buf_tx);
                                      ^
chip/stm32/usb_hw.h:32:17: note: Variable declared here.
extern usb_uint __usb_ram_start[];
                ^
chip/stm32/usb_console.c:103:39: note: Array decayed to pointer here.
 btable_ep[USB_EP_CONSOLE].tx_addr  = usb_sram_addr(ep_buf_tx);
                                      ^
chip/stm32/usb_console.c:103:39: note: Subtracting pointers that point to different objects
 btable_ep[USB_EP_CONSOLE].tx_addr  = usb_sram_addr(ep_buf_tx);
                                      ^
chip/stm32/usb_console.c:106:39: error: Subtracting pointers that point to different objects [comparePointers]
 btable_ep[USB_EP_CONSOLE].rx_addr  = usb_sram_addr(ep_buf_rx);
                                      ^
chip/stm32/usb_console.c:64:17: note: Variable declared here.
static usb_uint ep_buf_rx[USB_MAX_PACKET_SIZE / 2] __usb_ram;
                ^
chip/stm32/usb_console.c:106:39: note: Array decayed to pointer here.
 btable_ep[USB_EP_CONSOLE].rx_addr  = usb_sram_addr(ep_buf_rx);
                                      ^
chip/stm32/usb_hw.h:32:17: note: Variable declared here.
extern usb_uint __usb_ram_start[];
                ^
chip/stm32/usb_console.c:106:39: note: Array decayed to pointer here.
 btable_ep[USB_EP_CONSOLE].rx_addr  = usb_sram_addr(ep_buf_rx);
                                      ^
chip/stm32/usb_console.c:106:39: note: Subtracting pointers that point to different objects
 btable_ep[USB_EP_CONSOLE].rx_addr  = usb_sram_addr(ep_buf_rx);
                                      ^
chip/stm32/usb_dwc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 25 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usb_dwc.c:432:28: warning: Possible null pointer dereference: source [nullPointer]
 memcpy(ep->in_databuffer, source, len);
                           ^
chip/stm32/usb_dwc.c:527:32: note: Calling function 'initialize_in_transfer', 1st argument '0' value is 0
 (void) initialize_in_transfer(0, 0);
                               ^
chip/stm32/usb_dwc.c:426:10: note: Assuming condition is Assuming condition is false
 if (len >= IN_BUF_SIZE) {
         ^
chip/stm32/usb_dwc.c:432:28: note: Null pointer dereference
 memcpy(ep->in_databuffer, source, len);
                           ^
chip/stm32/usb_dwc.c:255:17: style: Same expression on both sides of '-='. [duplicateExpression]
 ep->in_packets -= ep->in_packets;
                ^
chip/stm32/usb_dwc.c:1007:6: style: The scope of the variable 'ep' can be reduced. [variableScope]
 int ep;
     ^
chip/stm32/usb_dwc_console.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usb_dwc_console.c:241:6: style: The scope of the variable 'wait_time_us' can be reduced. [variableScope]
 int wait_time_us = 1;
     ^
chip/stm32/usb_dwc_stream.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usb_gpio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usb_gpio.c:34:11: style: The scope of the variable 'i' can be reduced. [variableScope]
 size_t   i;
          ^
chip/stm32/usb_hid.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usb_hid.c:96:40: style:inconclusive: Function 'hid_iface_request' argument 3 names different: declaration 'hid_config' definition 'config'. [funcArgNamesDifferent]
        const struct usb_hid_config_t *config)
                                       ^
chip/stm32/usb_hid_hw.h:39:40: note: Function 'hid_iface_request' argument 3 names different: declaration 'hid_config' definition 'config'.
        const struct usb_hid_config_t *hid_config);
                                       ^
chip/stm32/usb_hid.c:96:40: note: Function 'hid_iface_request' argument 3 names different: declaration 'hid_config' definition 'config'.
        const struct usb_hid_config_t *config)
                                       ^
chip/stm32/usb_hid_keyboard.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 23 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usb_hid_keyboard.c:421:0: error: failed to expand 'USB_DECLARE_EP', it is invalid to use a preprocessor directive as macro parameter [preprocessorErrorDirective]
#ifdef CONFIG_USB_HID_KEYBOARD_BACKLIGHT
^
chip/stm32/usb_hid_keyboard.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
chip/stm32/usb_hid_touchpad.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usb_hid_touchpad.c:261:28: error: Subtracting pointers that point to different objects [comparePointers]
 memcpy_to_usbram((void *) usb_sram_addr(hid_ep_buf),
                           ^
chip/stm32/usb_hid_touchpad.c:253:17: note: Variable declared here.
static usb_uint hid_ep_buf[DIV_ROUND_UP(HID_TOUCHPAD_REPORT_SIZE, 2)] __usb_ram;
                ^
chip/stm32/usb_hid_touchpad.c:261:28: note: Array decayed to pointer here.
 memcpy_to_usbram((void *) usb_sram_addr(hid_ep_buf),
                           ^
chip/stm32/usb_hw.h:32:17: note: Variable declared here.
extern usb_uint __usb_ram_start[];
                ^
chip/stm32/usb_hid_touchpad.c:261:28: note: Array decayed to pointer here.
 memcpy_to_usbram((void *) usb_sram_addr(hid_ep_buf),
                           ^
chip/stm32/usb_hid_touchpad.c:261:28: note: Subtracting pointers that point to different objects
 memcpy_to_usbram((void *) usb_sram_addr(hid_ep_buf),
                           ^
chip/stm32/usb_isochronous.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usb_isochronous.c:122:25: style:inconclusive: Function 'usb_isochronous_event' argument 2 names different: declaration 'event' definition 'evt'. [funcArgNamesDifferent]
      enum usb_ep_event evt)
                        ^
chip/stm32/usb_isochronous.h:193:25: note: Function 'usb_isochronous_event' argument 2 names different: declaration 'event' definition 'evt'.
      enum usb_ep_event event);
                        ^
chip/stm32/usb_isochronous.c:122:25: note: Function 'usb_isochronous_event' argument 2 names different: declaration 'event' definition 'evt'.
      enum usb_ep_event evt)
                        ^
chip/stm32/usb_pd_phy.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 27 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usb_pd_phy.c:235:25: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 234. [shiftTooManyBitsSigned]
   msg[word_idx++] |= 1 << bit_idx;
                        ^
chip/stm32/usb_pd_phy.c:234:15: note: Assuming that condition 'bit_idx==31' is not redundant
  if (bit_idx == 31) {
              ^
chip/stm32/usb_pd_phy.c:235:25: note: Shift
   msg[word_idx++] |= 1 << bit_idx;
                        ^
chip/stm32/usb_pd_phy.c:235:25: warning: Either the condition 'bit_idx==31' is redundant or there is signed integer overflow for expression '1<<bit_idx'. [integerOverflowCond]
   msg[word_idx++] |= 1 << bit_idx;
                        ^
chip/stm32/usb_pd_phy.c:234:15: note: Assuming that condition 'bit_idx==31' is not redundant
  if (bit_idx == 31) {
              ^
chip/stm32/usb_pd_phy.c:235:25: note: Integer overflow
   msg[word_idx++] |= 1 << bit_idx;
                        ^
chip/stm32/usb_power.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 21 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/usb_spi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
chip/stm32/watchdog.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/acpi.c:112:0: information: Skipping configuration 'CONFIG_DPTF;CONFIG_DPTF_MULTI_PROFILE' since the value of 'CONFIG_DPTF_MULTI_PROFILE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_DPTF_MULTI_PROFILE) &&
^
common/adc.c:47:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
 int i, ret;
        ^
common/aes-gcm.c:146:10: style: The scope of the variable 'rem' can be reduced. [variableScope]
  size_t rem, nlo, nhi;
         ^
common/aes-gcm.c:201:7: style: The scope of the variable 'cnt' can be reduced. [variableScope]
  int cnt;
      ^
common/aes-gcm.c:202:15: style: The scope of the variable 'nlo' can be reduced. [variableScope]
  size_t rem, nlo, nhi;
              ^
common/aes-gcm.c:202:20: style: The scope of the variable 'nhi' can be reduced. [variableScope]
  size_t rem, nlo, nhi;
                   ^
common/aes-gcm.c:420:20: style: Condition 'pmull_capable()' is always false [knownConditionTrueFalse]
  if (pmull_capable()) {
                   ^
common/aes-gcm.c:427:19: style: Condition 'neon_capable()' is always false [knownConditionTrueFalse]
  if (neon_capable()) {
                  ^
common/aes.c:636:12: style: The scope of the variable 'temp' can be reduced. [variableScope]
  uint32_t temp;
           ^
common/als.c:60:6: style: The scope of the variable 'err' can be reduced. [variableScope]
 int err;
     ^
common/als.c:109:9: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int i, rv, val;
        ^
common/audio_codec_wov.c:394:9: style: Checking if unsigned expression 'n' is less than zero. [unsignedLessThanZero]
  if (n < 0) {
        ^
common/backlight_lid.c:35:0: information: Skipping configuration 'CONFIG_BACKLIGHT_REQ_GPIO' since the value of 'CONFIG_BACKLIGHT_REQ_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  gpio_get_level(CONFIG_BACKLIGHT_REQ_GPIO));
^
common/backlight_lid.c:54:0: information: Skipping configuration 'CONFIG_BACKLIGHT_REQ_GPIO' since the value of 'CONFIG_BACKLIGHT_REQ_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_enable_interrupt(CONFIG_BACKLIGHT_REQ_GPIO);
^
common/battery.c:91:13: style: The scope of the variable 'i' can be reduced. [variableScope]
 int value, i;
            ^
common/battery.c:329:41: style: The scope of the variable 'p' can be reduced. [variableScope]
 const struct ec_params_battery_cutoff *p;
                                        ^
common/battery.c:61:0: information: Skipping configuration 'CONFIG_BATTERY_PRESENT_GPIO' since the value of 'CONFIG_BATTERY_PRESENT_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return gpio_get_level(CONFIG_BATTERY_PRESENT_GPIO) ? BP_NO : BP_YES;
^
common/blink.c:16:0: information: Skipping configuration 'CONFIG_BLINK_LEDS' since the value of 'CONFIG_BLINK_LEDS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const enum gpio_signal leds[] = { CONFIG_BLINK_LEDS };
^
common/bluetooth_le.c:137:10: style: The scope of the variable 'value' can be reduced. [variableScope]
 uint8_t value;
         ^
common/bluetooth_le.c:160:6: style: The scope of the variable 'curr_offs' can be reduced. [variableScope]
 int curr_offs;
     ^
common/btle_hci_controller.c:289:16: style: Variable 'data' is assigned a value that is never used. [unreadVariable]
 uint8_t *data = hciAclbuf + sizeof(struct hciAclHdr);
               ^
common/btle_ll.c:659:7: style: The scope of the variable 'sleep_time' can be reduced. [variableScope]
 long sleep_time;
      ^
common/btle_ll.c:660:6: style: The scope of the variable 'offset' can be reduced. [variableScope]
 int offset = 0;
     ^
common/btle_ll.c:661:11: style: The scope of the variable 'listen_time' can be reduced. [variableScope]
 uint64_t listen_time;
          ^
common/btle_ll.c:204:6: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
  rv = ll_state_change_request(STANDBY);
     ^
common/btle_ll.c:353:18: style: Variable 'handle' is assigned a value that is never used. [unreadVariable]
 uint16_t handle = params[0] | (((uint16_t)params[1]) << 8);
                 ^
common/btle_ll.c:660:13: style: Variable 'offset' is assigned a value that is never used. [unreadVariable]
 int offset = 0;
            ^
common/button.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/button.c:124:9: style: The scope of the variable 'pressed' can be reduced. [variableScope]
 int i, pressed;
        ^
common/button.c:127:0: information: Skipping configuration 'CONFIG_BUTTON_TRIGGERED_RECOVERY;CONFIG_DEDICATED_RECOVERY_BUTTON' since the value of 'CONFIG_DEDICATED_RECOVERY_BUTTON' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_DEDICATED_RECOVERY_BUTTON)) {
^
common/button.c:135:0: information: Skipping configuration 'CONFIG_BUTTON_TRIGGERED_RECOVERY;CONFIG_DEDICATED_RECOVERY_BUTTON' since the value of 'CONFIG_DEDICATED_RECOVERY_BUTTON' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return IS_ENABLED(CONFIG_DEDICATED_RECOVERY_BUTTON) ? 0 : 1;
^
common/button.c:127:0: information: Skipping configuration 'CONFIG_BUTTON_TRIGGERED_RECOVERY;CONFIG_DEDICATED_RECOVERY_BUTTON;CONFIG_DEDICATED_RECOVERY_BUTTON_2' since the value of 'CONFIG_DEDICATED_RECOVERY_BUTTON' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_DEDICATED_RECOVERY_BUTTON)) {
^
common/button.c:135:0: information: Skipping configuration 'CONFIG_BUTTON_TRIGGERED_RECOVERY;CONFIG_DEDICATED_RECOVERY_BUTTON;CONFIG_DEDICATED_RECOVERY_BUTTON_2' since the value of 'CONFIG_DEDICATED_RECOVERY_BUTTON' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return IS_ENABLED(CONFIG_DEDICATED_RECOVERY_BUTTON) ? 0 : 1;
^
common/button.c:427:13: style: Variable 'button' is assigned a value that is never used. [unreadVariable]
 int button = BUTTON_COUNT;
            ^
common/charge_manager.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/charge_manager.c:438:7: style: Condition 'use_ramp_current' is always false [knownConditionTrueFalse]
  if (use_ramp_current) {
      ^
common/charge_manager.c:436:22: note: Assignment 'use_ramp_current=0', assigned value is 0
  use_ramp_current = 0;
                     ^
common/charge_manager.c:438:7: note: Condition 'use_ramp_current' is always false
  if (use_ramp_current) {
      ^
common/charge_manager.c:548:6: style: The scope of the variable 'val' can be reduced. [variableScope]
 int val, i;
     ^
common/charge_manager.c:1338:16: style: Local variable 'override_port' shadows outer variable [shadowVariable]
 const int16_t override_port = p->override_port;
               ^
common/charge_manager.c:102:12: note: Shadowed declaration
static int override_port = OVERRIDE_OFF;
           ^
common/charge_manager.c:1338:16: note: Shadow variable
 const int16_t override_port = p->override_port;
               ^
common/charge_manager.c:1262:0: information: Skipping configuration 'CONFIG_USB_PD_LOGGING;CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT' since the value of 'CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT :
^
common/charge_manager.c:1262:0: information: Skipping configuration 'CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT' since the value of 'CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT :
^
common/charge_manager.c:1236:0: information: Skipping configuration 'CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT;CONFIG_USB_PD_MAX_TOTAL_SOURCE_CURRENT' since the value of 'CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT)
^
common/charge_manager.c:1262:0: information: Skipping configuration 'CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT;CONFIG_USB_PD_MAX_TOTAL_SOURCE_CURRENT' since the value of 'CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT :
^
common/charge_manager.c:112:0: information: Skipping configuration 'CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT;CONFIG_USB_PD_MAX_TOTAL_SOURCE_CURRENT' since the value of 'CONFIG_USB_PD_MAX_TOTAL_SOURCE_CURRENT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      CONFIG_USB_PD_MAX_TOTAL_SOURCE_CURRENT);
^
common/charge_ramp_sw.c:156:20: style: Variable 'ramp_st_new' is assigned a value that is never used. [unreadVariable]
       ramp_st_new = CHG_RAMP_DISCONNECTED;
                   ^
common/charge_state_v2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 45 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/charge_state_v2.c:107:1: error: There is an unknown macro here somewhere. Configuration is required. If STATIC_IF is a macro then please configure it. [unknownMacro]
STATIC_IF(CONFIG_USB_PD_PREFER_MV) timestamp_t stable_ts;
^
common/charge_state_v2.c:1952:0: information: Skipping configuration 'CONFIG_BATTERY_DEAD_UNTIL_VALUE;CONFIG_BATTERY_REQUESTS_NIL_WHEN_DEAD' since the value of 'CONFIG_BATTERY_DEAD_UNTIL_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
       curr.batt.state_of_charge < CONFIG_BATTERY_DEAD_UNTIL_VALUE) {
^
common/charge_state_v2.c:2283:0: information: Skipping configuration 'CONFIG_BATTERY_HW_PRESENT_CUSTOM;CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON' since the value of 'CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON)
^
common/charge_state_v2.c:2334:0: information: Skipping configuration 'CONFIG_BATTERY_HW_PRESENT_CUSTOM;CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON;CONFIG_CHARGE_MANAGER' since the value of 'CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON * 1000
^
common/charge_state_v2.c:2283:0: information: Skipping configuration 'CONFIG_BATTERY_MEASURE_IMBALANCE;CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON' since the value of 'CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON)
^
common/charge_state_v2.c:2283:0: information: Skipping configuration 'CONFIG_BATTERY_REVIVE_DISCONNECT;CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON' since the value of 'CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON)
^
common/charge_state_v2.c:2283:0: information: Skipping configuration 'CONFIG_BATTERY_REVIVE_DISCONNECT;CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON;CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON_WITH_AC;CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON_WITH_BATT;CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON;CONFIG_CHARGE_MANAGER' since the value of 'CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON)
^
common/charge_state_v2.c:2302:0: information: Skipping configuration 'CONFIG_BATTERY_REVIVE_DISCONNECT;CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON;CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON_WITH_AC;CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON_WITH_BATT;CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON;CONFIG_CHARGE_MANAGER' since the value of 'CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON_WITH_AC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON_WITH_AC))
^
common/charge_state_v2.c:2296:0: information: Skipping configuration 'CONFIG_BATTERY_REVIVE_DISCONNECT;CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON;CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON_WITH_AC;CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON_WITH_BATT;CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON;CONFIG_CHARGE_MANAGER' since the value of 'CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON_WITH_BATT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON_WITH_BATT * 1000
^
common/charge_state_v2.c:2291:0: information: Skipping configuration 'CONFIG_BATTERY_REVIVE_DISCONNECT;CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON;CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON_WITH_AC;CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON_WITH_BATT;CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON;CONFIG_CHARGE_MANAGER' since the value of 'CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON * 1000)
^
common/charger.c:261:14: style: The comparison 'chgnum < 0' is always false. [knownConditionTrueFalse]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:258:15: note: 'chgnum' is assigned value '0' here.
 int chgnum = 0;
              ^
common/charger.c:261:14: note: The comparison 'chgnum < 0' is always false.
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:277:14: style: The comparison 'chgnum < 0' is always false. [knownConditionTrueFalse]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:274:15: note: 'chgnum' is assigned value '0' here.
 int chgnum = 0;
              ^
common/charger.c:277:14: note: The comparison 'chgnum < 0' is always false.
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:293:14: style: The comparison 'chgnum < 0' is always false. [knownConditionTrueFalse]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:290:15: note: 'chgnum' is assigned value '0' here.
 int chgnum = 0;
              ^
common/charger.c:293:14: note: The comparison 'chgnum < 0' is always false.
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:309:14: style: The comparison 'chgnum < 0' is always false. [knownConditionTrueFalse]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:306:15: note: 'chgnum' is assigned value '0' here.
 int chgnum = 0;
              ^
common/charger.c:309:14: note: The comparison 'chgnum < 0' is always false.
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:518:14: style: The comparison 'chgnum < 0' is always false. [knownConditionTrueFalse]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:515:15: note: 'chgnum' is assigned value '0' here.
 int chgnum = 0;
              ^
common/charger.c:518:14: note: The comparison 'chgnum < 0' is always false.
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:534:14: style: The comparison 'chgnum < 0' is always false. [knownConditionTrueFalse]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:531:15: note: 'chgnum' is assigned value '0' here.
 int chgnum = 0;
              ^
common/charger.c:534:14: note: The comparison 'chgnum < 0' is always false.
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:550:14: style: The comparison 'chgnum < 0' is always false. [knownConditionTrueFalse]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:547:15: note: 'chgnum' is assigned value '0' here.
 int chgnum = 0;
              ^
common/charger.c:550:14: note: The comparison 'chgnum < 0' is always false.
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:566:14: style: The comparison 'chgnum < 0' is always false. [knownConditionTrueFalse]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:563:15: note: 'chgnum' is assigned value '0' here.
 int chgnum = 0;
              ^
common/charger.c:566:14: note: The comparison 'chgnum < 0' is always false.
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:582:14: style: The comparison 'chgnum < 0' is always false. [knownConditionTrueFalse]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:579:15: note: 'chgnum' is assigned value '0' here.
 int chgnum = 0;
              ^
common/charger.c:582:14: note: The comparison 'chgnum < 0' is always false.
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:261:30: style: Checking if unsigned expression 'board_get_charger_chip_count()' is less than zero. [unsignedLessThanZero]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:258:15: note: Assignment 'chgnum=0', assigned value is 0
 int chgnum = 0;
              ^
common/charger.c:261:30: note: Unsigned less than zero
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:277:30: style: Checking if unsigned expression 'board_get_charger_chip_count()' is less than zero. [unsignedLessThanZero]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:274:15: note: Assignment 'chgnum=0', assigned value is 0
 int chgnum = 0;
              ^
common/charger.c:277:30: note: Unsigned less than zero
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:293:30: style: Checking if unsigned expression 'board_get_charger_chip_count()' is less than zero. [unsignedLessThanZero]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:290:15: note: Assignment 'chgnum=0', assigned value is 0
 int chgnum = 0;
              ^
common/charger.c:293:30: note: Unsigned less than zero
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:309:30: style: Checking if unsigned expression 'board_get_charger_chip_count()' is less than zero. [unsignedLessThanZero]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:306:15: note: Assignment 'chgnum=0', assigned value is 0
 int chgnum = 0;
              ^
common/charger.c:309:30: note: Unsigned less than zero
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:518:30: style: Checking if unsigned expression 'board_get_charger_chip_count()' is less than zero. [unsignedLessThanZero]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:515:15: note: Assignment 'chgnum=0', assigned value is 0
 int chgnum = 0;
              ^
common/charger.c:518:30: note: Unsigned less than zero
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:534:30: style: Checking if unsigned expression 'board_get_charger_chip_count()' is less than zero. [unsignedLessThanZero]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:531:15: note: Assignment 'chgnum=0', assigned value is 0
 int chgnum = 0;
              ^
common/charger.c:534:30: note: Unsigned less than zero
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:550:30: style: Checking if unsigned expression 'board_get_charger_chip_count()' is less than zero. [unsignedLessThanZero]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:547:15: note: Assignment 'chgnum=0', assigned value is 0
 int chgnum = 0;
              ^
common/charger.c:550:30: note: Unsigned less than zero
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:566:30: style: Checking if unsigned expression 'board_get_charger_chip_count()' is less than zero. [unsignedLessThanZero]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:563:15: note: Assignment 'chgnum=0', assigned value is 0
 int chgnum = 0;
              ^
common/charger.c:566:30: note: Unsigned less than zero
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:582:30: style: Checking if unsigned expression 'board_get_charger_chip_count()' is less than zero. [unsignedLessThanZero]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:579:15: note: Assignment 'chgnum=0', assigned value is 0
 int chgnum = 0;
              ^
common/charger.c:582:30: note: Unsigned less than zero
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:599:14: style: The comparison 'chgnum < 0' is always false. [knownConditionTrueFalse]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:596:15: note: 'chgnum' is assigned value '0' here.
 int chgnum = 0;
              ^
common/charger.c:599:14: note: The comparison 'chgnum < 0' is always false.
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:615:14: style: The comparison 'chgnum < 0' is always false. [knownConditionTrueFalse]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:612:15: note: 'chgnum' is assigned value '0' here.
 int chgnum = 0;
              ^
common/charger.c:615:14: note: The comparison 'chgnum < 0' is always false.
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:631:14: style: The comparison 'chgnum < 0' is always false. [knownConditionTrueFalse]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:628:15: note: 'chgnum' is assigned value '0' here.
 int chgnum = 0;
              ^
common/charger.c:631:14: note: The comparison 'chgnum < 0' is always false.
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
             ^
common/charger.c:599:30: style: Checking if unsigned expression 'board_get_charger_chip_count()' is less than zero. [unsignedLessThanZero]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:596:15: note: Assignment 'chgnum=0', assigned value is 0
 int chgnum = 0;
              ^
common/charger.c:599:30: note: Unsigned less than zero
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:615:30: style: Checking if unsigned expression 'board_get_charger_chip_count()' is less than zero. [unsignedLessThanZero]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:612:15: note: Assignment 'chgnum=0', assigned value is 0
 int chgnum = 0;
              ^
common/charger.c:615:30: note: Unsigned less than zero
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:631:30: style: Checking if unsigned expression 'board_get_charger_chip_count()' is less than zero. [unsignedLessThanZero]
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/charger.c:628:15: note: Assignment 'chgnum=0', assigned value is 0
 int chgnum = 0;
              ^
common/charger.c:631:30: note: Unsigned less than zero
 if ((chgnum < 0) || (chgnum >= board_get_charger_chip_count())) {
                             ^
common/chipset.c:108:9: style: The scope of the variable 'log_address' can be reduced. [variableScope]
 size_t log_address;
        ^
common/clz.c:40:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  x <<= 1;
  ^
common/clz.c:40:5: style: Variable 'x' is assigned a value that is never used. [unreadVariable]
  x <<= 1;
    ^
common/console.c:34:0: information: Skipping configuration 'CONFIG_CONSOLE_HISTORY' since the value of 'CONFIG_CONSOLE_HISTORY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static char history[CONFIG_CONSOLE_HISTORY][CONFIG_CONSOLE_INPUT_LINE_SIZE];
^
common/console.c:525:0: information: Skipping configuration 'CONFIG_CONSOLE_HISTORY' since the value of 'CONFIG_CONSOLE_HISTORY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    CONFIG_CONSOLE_HISTORY;
^
common/console.c:591:0: information: Skipping configuration 'CONFIG_CONSOLE_HISTORY' since the value of 'CONFIG_CONSOLE_HISTORY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   history_pos = CONFIG_CONSOLE_HISTORY - 1;
^
common/console.c:602:0: information: Skipping configuration 'CONFIG_CONSOLE_HISTORY' since the value of 'CONFIG_CONSOLE_HISTORY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (++history_pos >= CONFIG_CONSOLE_HISTORY)
^
common/console.c:760:0: information: Skipping configuration 'CONFIG_CONSOLE_HISTORY' since the value of 'CONFIG_CONSOLE_HISTORY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 for (i = 0; i < CONFIG_CONSOLE_HISTORY; i++) {
^
common/console.c:761:0: information: Skipping configuration 'CONFIG_CONSOLE_HISTORY' since the value of 'CONFIG_CONSOLE_HISTORY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  int idx = (history_next + i) % CONFIG_CONSOLE_HISTORY;
^
common/console_output.c:70:15: error: va_list 'args' used before va_start() was called. [va_list_usedBeforeStarted]
 usb_va_start(args, format);
              ^
common/console_output.c:71:28: error: va_list 'args' used before va_start() was called. [va_list_usedBeforeStarted]
 rv1 = usb_vprintf(format, args);
                           ^
common/console_output.c:72:13: error: va_list 'args' used before va_start() was called. [va_list_usedBeforeStarted]
 usb_va_end(args);
            ^
common/console_output.c:100:15: error: va_list 'args' used before va_start() was called. [va_list_usedBeforeStarted]
 usb_va_start(args, format);
              ^
common/console_output.c:101:26: error: va_list 'args' used before va_start() was called. [va_list_usedBeforeStarted]
 r = usb_vprintf(format, args);
                         ^
common/console_output.c:104:13: error: va_list 'args' used before va_start() was called. [va_list_usedBeforeStarted]
 usb_va_end(args);
            ^
common/ctz.c:26:42: style: Opposite expression on both sides of '&'. [oppositeExpression]
 return MulDeBruijnBitPos[((uint32_t)((x & -x) * 0x077CB531U)) >> 27];
                                         ^
common/dptf.c:61:6: style: The scope of the variable 'max' can be reduced. [variableScope]
 int max, i;
     ^
common/dptf.c:129:12: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int i, t, rv;
           ^
common/ec_ec_comm_master.c:115:16: warning: The address of local variable 'data' might be accessed at non-zero index. [objectIndex]
  (void *)&data[tx_length];
               ^
common/ec_ec_comm_master.c:262:12: note: Address of variable taken here.
   (void *)&data, sizeof(data.req.param),
           ^
common/ec_ec_comm_master.c:262:4: note: Calling function 'write_command', 2nd argument '(void*)&data' value is lifetime=data
   (void *)&data, sizeof(data.req.param),
   ^
common/ec_ec_comm_master.c:115:16: note: The address of local variable 'data' might be accessed at non-zero index.
  (void *)&data[tx_length];
               ^
common/ec_ec_comm_master.c:115:16: warning: The address of local variable 'data' might be accessed at non-zero index. [objectIndex]
  (void *)&data[tx_length];
               ^
common/ec_ec_comm_master.c:302:12: note: Address of variable taken here.
   (void *)&data, sizeof(data.req.param),
           ^
common/ec_ec_comm_master.c:302:4: note: Calling function 'write_command', 2nd argument '(void*)&data' value is lifetime=data
   (void *)&data, sizeof(data.req.param),
   ^
common/ec_ec_comm_master.c:115:16: note: The address of local variable 'data' might be accessed at non-zero index.
  (void *)&data[tx_length];
               ^
common/ec_ec_comm_master.c:115:16: warning: The address of local variable 'data' might be accessed at non-zero index. [objectIndex]
  (void *)&data[tx_length];
               ^
common/ec_ec_comm_master.c:344:11: note: Address of variable taken here.
  (void *)&data, sizeof(data.req.ctrl), 0, 30 * MSEC);
          ^
common/ec_ec_comm_master.c:344:3: note: Calling function 'write_command', 2nd argument '(void*)&data' value is lifetime=data
  (void *)&data, sizeof(data.req.ctrl), 0, 30 * MSEC);
  ^
common/ec_ec_comm_master.c:115:16: note: The address of local variable 'data' might be accessed at non-zero index.
  (void *)&data[tx_length];
               ^
common/ec_ec_comm_master.c:115:16: warning: The address of local variable 'data' might be accessed at non-zero index. [objectIndex]
  (void *)&data[tx_length];
               ^
common/ec_ec_comm_master.c:366:11: note: Address of variable taken here.
  (void *)&data, sizeof(data.req.param), 0, 30 * MSEC);
          ^
common/ec_ec_comm_master.c:366:3: note: Calling function 'write_command', 2nd argument '(void*)&data' value is lifetime=data
  (void *)&data, sizeof(data.req.param), 0, 30 * MSEC);
  ^
common/ec_ec_comm_master.c:115:16: note: The address of local variable 'data' might be accessed at non-zero index.
  (void *)&data[tx_length];
               ^
common/ec_ec_comm_master.c:251:5: style: Local variable 'req' shadows outer variable [shadowVariable]
  } req;
    ^
common/ec_ec_comm_master.c:251:5: note: Shadowed declaration
  } req;
    ^
common/ec_ec_comm_master.c:251:5: note: Shadow variable
  } req;
    ^
common/ec_ec_comm_master.c:256:5: style: Local variable 'resp' shadows outer variable [shadowVariable]
  } resp;
    ^
common/ec_ec_comm_master.c:256:5: note: Shadowed declaration
  } resp;
    ^
common/ec_ec_comm_master.c:256:5: note: Shadow variable
  } resp;
    ^
common/ec_ec_comm_master.c:291:5: style: Local variable 'req' shadows outer variable [shadowVariable]
  } req;
    ^
common/ec_ec_comm_master.c:291:5: note: Shadowed declaration
  } req;
    ^
common/ec_ec_comm_master.c:291:5: note: Shadow variable
  } req;
    ^
common/ec_ec_comm_master.c:296:5: style: Local variable 'resp' shadows outer variable [shadowVariable]
  } resp;
    ^
common/ec_ec_comm_master.c:296:5: note: Shadowed declaration
  } resp;
    ^
common/ec_ec_comm_master.c:296:5: note: Shadow variable
  } resp;
    ^
common/ec_ec_comm_master.c:333:5: style: Local variable 'req' shadows outer variable [shadowVariable]
  } req;
    ^
common/ec_ec_comm_master.c:333:5: note: Shadowed declaration
  } req;
    ^
common/ec_ec_comm_master.c:333:5: note: Shadow variable
  } req;
    ^
common/ec_ec_comm_master.c:336:5: style: Local variable 'resp' shadows outer variable [shadowVariable]
  } resp;
    ^
common/ec_ec_comm_master.c:336:5: note: Shadowed declaration
  } resp;
    ^
common/ec_ec_comm_master.c:336:5: note: Shadow variable
  } resp;
    ^
common/ec_ec_comm_master.c:356:5: style: Local variable 'req' shadows outer variable [shadowVariable]
  } req;
    ^
common/ec_ec_comm_master.c:356:5: note: Shadowed declaration
  } req;
    ^
common/ec_ec_comm_master.c:356:5: note: Shadow variable
  } req;
    ^
common/ec_ec_comm_master.c:359:5: style: Local variable 'resp' shadows outer variable [shadowVariable]
  } resp;
    ^
common/ec_ec_comm_master.c:359:5: note: Shadowed declaration
  } resp;
    ^
common/ec_ec_comm_master.c:359:5: note: Shadow variable
  } resp;
    ^
common/ec_ec_comm_master.c:250:12: style: struct member 'Anonymous1::crc8' is never used. [unusedStructMember]
   uint8_t crc8;
           ^
common/ec_ec_comm_master.c:255:12: style: struct member 'Anonymous2::crc8' is never used. [unusedStructMember]
   uint8_t crc8;
           ^
common/ec_ec_comm_master.c:290:12: style: struct member 'Anonymous3::crc8' is never used. [unusedStructMember]
   uint8_t crc8;
           ^
common/ec_ec_comm_master.c:295:12: style: struct member 'Anonymous4::crc8' is never used. [unusedStructMember]
   uint8_t crc8;
           ^
common/ec_ec_comm_master.c:332:12: style: struct member 'Anonymous5::crc8' is never used. [unusedStructMember]
   uint8_t crc8;
           ^
common/ec_ec_comm_slave.c:109:11: style: The scope of the variable 'delta' can be reduced. [variableScope]
 uint32_t delta;
          ^
common/ec_features.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/fan.c:155:3: style: Assignment of function parameter has no effect outside the function. [uselessAssignmentArg]
  argc--;
  ^
common/fan.c:156:3: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
  argv++;
  ^
common/fan.c:64:11: style: The scope of the variable 'max' can be reduced. [variableScope]
 int rpm, max, min;
          ^
common/fan.c:64:16: style: The scope of the variable 'min' can be reduced. [variableScope]
 int rpm, max, min;
               ^
common/fan.c:186:6: style: The scope of the variable 'tmp' can be reduced. [variableScope]
 int tmp, is_pgood;
     ^
common/fan.c:186:11: style: The scope of the variable 'is_pgood' can be reduced. [variableScope]
 int tmp, is_pgood;
          ^
common/fan.c:155:7: style: Variable 'argc' is assigned a value that is never used. [unreadVariable]
  argc--;
      ^
common/fan.c:156:7: style: Variable 'argv' is assigned a value that is never used. [unreadVariable]
  argv++;
      ^
common/fan.c:88:0: information: Skipping configuration 'CONFIG_FAN_UPDATE_PERIOD' since the value of 'CONFIG_FAN_UPDATE_PERIOD' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 fan_update_counter[fan] %= CONFIG_FAN_UPDATE_PERIOD;
^
common/flash.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 28 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/flash.c:587:6: style: The scope of the variable 'bsize' can be reduced. [variableScope]
 int bsize;
     ^
common/flash.c:200:6: style: The scope of the variable 'bank_size' can be reduced. [variableScope]
 int bank_size;
     ^
common/fpsensor/fpsensor.c:344:2: style:inconclusive: Statements following return, break, continue, goto or throw will never be executed. [unreachableCode]
 r->template_size = FP_ALGORITHM_ENCRYPTED_TEMPLATE_SIZE;
 ^
common/fpsensor/fpsensor.c:382:10: style: The scope of the variable 'key' can be reduced. [variableScope]
 uint8_t key[SBP_ENC_KEY_LEN];
         ^
common/fpsensor/fpsensor.c:545:10: style: The scope of the variable 'key' can be reduced. [variableScope]
 uint8_t key[SBP_ENC_KEY_LEN];
         ^
common/fpsensor/fpsensor.c:337:32: style: Variable 'r' is assigned a value that is never used. [unreadVariable]
 struct ec_response_fp_info *r = args->response;
                               ^
common/fpsensor/fpsensor_crypto.c:42:0: information: Skipping configuration 'CONFIG_AES;CONFIG_AES_GCM;CONFIG_ROLLBACK_SECRET_SIZE' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 memcpy(ikm + CONFIG_ROLLBACK_SECRET_SIZE, tpm_seed, sizeof(tpm_seed));
^
common/fpsensor/fpsensor_crypto.c:146:0: information: Skipping configuration 'CONFIG_AES;CONFIG_AES_GCM;CONFIG_ROLLBACK_SECRET_SIZE' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 uint8_t ikm[CONFIG_ROLLBACK_SECRET_SIZE + sizeof(tpm_seed)];
^
common/fpsensor/fpsensor_crypto.c:189:0: information: Skipping configuration 'CONFIG_AES;CONFIG_AES_GCM;CONFIG_ROLLBACK_SECRET_SIZE' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 uint8_t ikm[CONFIG_ROLLBACK_SECRET_SIZE + sizeof(tpm_seed)];
^
common/fpsensor/fpsensor_crypto.c:193:0: information: Skipping configuration 'CONFIG_AES;CONFIG_AES_GCM;CONFIG_ROLLBACK_SECRET_SIZE' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 BUILD_ASSERT(SBP_ENC_KEY_LEN <= CONFIG_ROLLBACK_SECRET_SIZE);
^
common/gpio_commands.c:118:13: style: Condition 'flags&gpio_descriptions[i].bitfield' is always false [knownConditionTrueFalse]
  if (flags & gpio_descriptions[i].bitfield)
            ^
common/gpio_commands.c:110:10: note: Assignment 'flags=0', assigned value is 0
 flags = 0;
         ^
common/gpio_commands.c:118:13: note: Condition 'flags&gpio_descriptions[i].bitfield' is always false
  if (flags & gpio_descriptions[i].bitfield)
            ^
common/gyro_cal.c:379:15: style: Redundant initialization for 'conf_not_rot'. The initialized value is overwritten before it is read. [redundantInitialization]
 conf_not_rot =
              ^
common/gyro_cal.c:341:20: note: conf_not_rot is initialized
 fp_t conf_not_rot = INT_TO_FP(0);
                   ^
common/gyro_cal.c:379:15: note: conf_not_rot is overwritten
 conf_not_rot =
              ^
common/gyro_cal.c:382:17: style: Redundant initialization for 'conf_not_accel'. The initialized value is overwritten before it is read. [redundantInitialization]
 conf_not_accel = gyro_cal->accel_stillness_detect.stillness_confidence;
                ^
common/gyro_cal.c:342:22: note: conf_not_accel is initialized
 fp_t conf_not_accel = INT_TO_FP(0);
                     ^
common/gyro_cal.c:382:17: note: conf_not_accel is overwritten
 conf_not_accel = gyro_cal->accel_stillness_detect.stillness_confidence;
                ^
common/gyro_cal.c:383:13: style: Redundant initialization for 'conf_still'. The initialized value is overwritten before it is read. [redundantInitialization]
 conf_still = fp_mul(conf_not_rot, conf_not_accel);
            ^
common/gyro_cal.c:343:18: note: conf_still is initialized
 fp_t conf_still = INT_TO_FP(0);
                 ^
common/gyro_cal.c:383:13: note: conf_still is overwritten
 conf_still = fp_mul(conf_not_rot, conf_not_accel);
            ^
common/gyro_still_det.c:71:8: style: Redundant initialization for 'delta'. The initialized value is overwritten before it is read. [redundantInitialization]
 delta = (x - gyro_still_det->assumed_mean[X]);
       ^
common/gyro_still_det.c:16:13: note: delta is initialized
 fp_t delta = INT_TO_FP(0);
            ^
common/gyro_still_det.c:71:8: note: delta is overwritten
 delta = (x - gyro_still_det->assumed_mean[X]);
       ^
common/hooks.c:251:19: style: Condition '!defer_new_call' is always true [knownConditionTrueFalse]
  if (next > 0 && !defer_new_call)
                  ^
common/hooks.c:234:20: note: Assignment 'defer_new_call=0', assigned value is 0
  defer_new_call = 0;
                   ^
common/hooks.c:251:19: note: Condition '!defer_new_call' is always true
  if (next > 0 && !defer_new_call)
                  ^
common/host_command.c:645:13: style: The scope of the variable 'hc_prev_cmd' can be reduced. [variableScope]
 static int hc_prev_cmd;
            ^
common/host_command.c:646:13: style: The scope of the variable 'hc_prev_count' can be reduced. [variableScope]
 static int hc_prev_count;
            ^
common/host_command.c:647:18: style: The scope of the variable 'hc_prev_time' can be reduced. [variableScope]
 static uint64_t hc_prev_time;
                 ^
common/host_command.c:855:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
common/host_command.c:387:11: style: The scope of the variable 'num' can be reduced. [variableScope]
 uint32_t num;
          ^
common/host_command.c:86:0: information: Skipping configuration 'CONFIG_SUPPRESSED_HOST_COMMANDS' since the value of 'CONFIG_SUPPRESSED_HOST_COMMANDS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const uint16_t hc_suppressed_cmd[] = { CONFIG_SUPPRESSED_HOST_COMMANDS };
^
common/host_command_master.c:198:14: style: The scope of the variable 'tmp' can be reduced. [variableScope]
 int i, ret, tmp;
             ^
common/i2c_bitbang.c:160:6: style: The scope of the variable 'err' can be reduced. [variableScope]
 int err;
     ^
common/i2c_hid_touchpad.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
common/i2c_master.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/i2c_master.c:1177:7: style: Condition 'rv' is always true [knownConditionTrueFalse]
  if (rv) {
      ^
common/i2c_master.c:1143:12: note: Assignment 'rv=1', assigned value is 1
  int rv = 1;
           ^
common/i2c_master.c:1177:7: note: Condition 'rv' is always true
  if (rv) {
      ^
common/i2c_master.c:424:6: style: Redundant initialization for 'reg'. The initialized value is overwritten before it is read. [redundantInitialization]
 reg = offset;
     ^
common/i2c_master.c:421:14: note: reg is initialized
 uint8_t reg = offset;
             ^
common/i2c_master.c:424:6: note: reg is overwritten
 reg = offset;
     ^
common/i2c_master.c:1309:10: style: The scope of the variable 'port' can be reduced. [variableScope]
  int i, port;
         ^
common/i2c_master.c:1651:16: style: Condition '!rv' is always true [knownConditionTrueFalse]
    } else if (!rv && data != data_verify) {
               ^
common/i2c_master.c:1647:9: note: Assuming that condition 'rv' is not redundant
    if (rv) {
        ^
common/i2c_master.c:1651:16: note: Condition '!rv' is always true
    } else if (!rv && data != data_verify) {
               ^
common/i2c_master.c:1550:28: style: The scope of the variable 'reg_s_info' can be reduced. [variableScope]
 struct i2c_test_reg_info *reg_s_info;
                           ^
common/i2c_master.c:1551:27: style: The scope of the variable 'test_s_results' can be reduced. [variableScope]
 struct i2c_test_results *test_s_results;
                          ^
common/i2c_trace.c:166:6: style: The scope of the variable 'address_low' can be reduced. [variableScope]
 int address_low;
     ^
common/i2c_trace.c:167:6: style: The scope of the variable 'address_high' can be reduced. [variableScope]
 int address_high;
     ^
common/ioexpander.c:158:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
common/keyboard_8042.c:856:34: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
   A20_status = command & BIT(1) ? 1 : 0;
                                 ^
common/keyboard_8042.c:884:0: information: Skipping configuration 'CONFIG_8042_AUX' since the value of 'CONFIG_8042_AUX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (IS_ENABLED(CONFIG_8042_AUX) &&
^
common/keyboard_8042.c:967:0: information: Skipping configuration 'CONFIG_8042_AUX' since the value of 'CONFIG_8042_AUX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
       IS_ENABLED(CONFIG_8042_AUX)) {
^
common/keyboard_8042.c:991:0: information: Skipping configuration 'CONFIG_8042_AUX' since the value of 'CONFIG_8042_AUX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (aux_chan_enabled && IS_ENABLED(CONFIG_8042_AUX))
^
common/keyboard_8042.c:1137:64: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 ccprintf("I8042_XLATE: %d\n", controller_ram[0] & I8042_XLATE ? 1 : 0);
                                                               ^
common/keyboard_mkbp.c:593:13: style: The scope of the variable 'p' can be reduced. [variableScope]
  int r, c, p;
            ^
common/keyboard_scan.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/keyboard_scan.c:85:10: style: struct member 'boot_key_entry::mask_index' is never used. [unusedStructMember]
 uint8_t mask_index;
         ^
common/keyboard_scan.c:86:10: style: struct member 'boot_key_entry::mask_value' is never used. [unusedStructMember]
 uint8_t mask_value;
         ^
common/keyboard_scan.c:1068:13: style: The scope of the variable 'p' can be reduced. [variableScope]
  int r, c, p;
            ^
common/keyboard_scan.c:634:0: information: Skipping configuration 'CONFIG_KEYBOARD_BOOT_KEYS;KEYBOARD_MASK_PWRBTN' since the value of 'KEYBOARD_MASK_PWRBTN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if ((keyscan_config.actual_key_mask[c] & KEYBOARD_MASK_PWRBTN)
^
common/keyboard_scan.c:635:0: information: Skipping configuration 'CONFIG_KEYBOARD_BOOT_KEYS;KEYBOARD_MASK_PWRBTN' since the value of 'KEYBOARD_MASK_PWRBTN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
      && !(curr_state[c] & KEYBOARD_MASK_PWRBTN))
^
common/keyboard_scan.c:640:0: information: Skipping configuration 'CONFIG_KEYBOARD_BOOT_KEYS;KEYBOARD_MASK_PWRBTN' since the value of 'KEYBOARD_MASK_PWRBTN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   curr_state[c] &= ~KEYBOARD_MASK_PWRBTN;
^
common/keyboard_test.c:108:6: style: Variable 'ksi' is reassigned a value before the old one has been used. [redundantAssignment]
 ksi = &keyscan_items[keyscan_seq_upto];
     ^
common/keyboard_test.c:102:6: note: ksi is assigned
 ksi = keyscan_seq_get();
     ^
common/keyboard_test.c:108:6: note: ksi is overwritten
 ksi = &keyscan_items[keyscan_seq_upto];
     ^
common/keyboard_vivaldi.c:131:6: style: Condition '!vivaldi_keybd' is always true [knownConditionTrueFalse]
 if (!vivaldi_keybd || !vivaldi_keybd->num_top_row_keys) {
     ^
common/keyboard_vivaldi.c:129:44: note: Assignment 'vivaldi_keybd=board_vivaldi_keybd_config()', assigned value is 0
 vivaldi_keybd = board_vivaldi_keybd_config();
                                           ^
common/keyboard_vivaldi.c:131:6: note: Condition '!vivaldi_keybd' is always true
 if (!vivaldi_keybd || !vivaldi_keybd->num_top_row_keys) {
     ^
common/lb_common.c:249:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
common/lb_common.c:336:10: style: The scope of the variable 'reg' can be reduced. [variableScope]
 uint8_t reg;
         ^
common/lb_common.c:260:10: style: Checking if unsigned expression 'led' is less than zero. [unsignedLessThanZero]
 if (led < 0 || led >= NUM_LEDS)
         ^
common/led_common.c:21:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
common/led_onoff_states.c:53:0: information: Skipping configuration 'CONFIG_LED_ONOFF_STATES_BAT_LOW' since the value of 'CONFIG_LED_ONOFF_STATES_BAT_LOW' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    CONFIG_LED_ONOFF_STATES_BAT_LOW)
^
common/lid_angle.c:156:21: style: Condition '!accept' is always true [knownConditionTrueFalse]
 else if (ignore && !accept)
                    ^
common/lid_angle.c:154:6: note: Assuming that condition 'accept' is not redundant
 if (accept)
     ^
common/lid_angle.c:156:21: note: Condition '!accept' is always true
 else if (ignore && !accept)
                    ^
common/lightbar.c:1512:1: error: syntax error [syntaxError]
enum lightbyte_opcode {
^
common/main.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/math_util.c:289:40: style: Clarify calculation precedence for '^' and '?'. [clarifyCalculation]
 return (dividend > 0) ^ (divisor > 0) ?
                                       ^
common/mkbp_event.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/mkbp_event.c:226:6: style: Condition '!skip_interrupt' is always true [knownConditionTrueFalse]
     !skip_interrupt) {
     ^
common/mkbp_event.c:195:23: note: Assignment 'skip_interrupt=0', assigned value is 0
 int skip_interrupt = 0;
                      ^
common/mkbp_event.c:222:34: note: Assignment 'skip_interrupt=skip_interrupt&&!(state.events&BIT(EC_MKBP_EVENT_KEY_MATRIX))', assigned value is 0
 skip_interrupt = skip_interrupt &&
                                 ^
common/mkbp_event.c:226:6: note: Condition '!skip_interrupt' is always true
     !skip_interrupt) {
     ^
common/mkbp_event.c:72:0: information: Skipping configuration 'CONFIG_MKBP_EVENT_WAKEUP_MASK' since the value of 'CONFIG_MKBP_EVENT_WAKEUP_MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static uint32_t mkbp_event_wake_mask = CONFIG_MKBP_EVENT_WAKEUP_MASK;
^
common/mkbp_event.c:72:0: information: Skipping configuration 'CONFIG_MKBP_EVENT_WAKEUP_MASK;CONFIG_MKBP_EVENT_WAKEUP_MASK;CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK' since the value of 'CONFIG_MKBP_EVENT_WAKEUP_MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static uint32_t mkbp_event_wake_mask = CONFIG_MKBP_EVENT_WAKEUP_MASK;
^
common/mkbp_event.c:76:0: information: Skipping configuration 'CONFIG_MKBP_EVENT_WAKEUP_MASK;CONFIG_MKBP_EVENT_WAKEUP_MASK;CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK' since the value of 'CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static uint32_t mkbp_host_event_wake_mask = CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK;
^
common/mkbp_event.c:72:0: information: Skipping configuration 'CONFIG_MKBP_EVENT_WAKEUP_MASK;CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK' since the value of 'CONFIG_MKBP_EVENT_WAKEUP_MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static uint32_t mkbp_event_wake_mask = CONFIG_MKBP_EVENT_WAKEUP_MASK;
^
common/mkbp_event.c:76:0: information: Skipping configuration 'CONFIG_MKBP_EVENT_WAKEUP_MASK;CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK' since the value of 'CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static uint32_t mkbp_host_event_wake_mask = CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK;
^
common/mkbp_event.c:72:0: information: Skipping configuration 'CONFIG_MKBP_EVENT_WAKEUP_MASK;CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK;CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK' since the value of 'CONFIG_MKBP_EVENT_WAKEUP_MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static uint32_t mkbp_event_wake_mask = CONFIG_MKBP_EVENT_WAKEUP_MASK;
^
common/mkbp_event.c:76:0: information: Skipping configuration 'CONFIG_MKBP_EVENT_WAKEUP_MASK;CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK;CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK' since the value of 'CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static uint32_t mkbp_host_event_wake_mask = CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK;
^
common/mkbp_event.c:72:0: information: Skipping configuration 'CONFIG_MKBP_EVENT_WAKEUP_MASK;CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK;CONFIG_POWER_TRACK_HOST_SLEEP_STATE' since the value of 'CONFIG_MKBP_EVENT_WAKEUP_MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static uint32_t mkbp_event_wake_mask = CONFIG_MKBP_EVENT_WAKEUP_MASK;
^
common/mkbp_event.c:76:0: information: Skipping configuration 'CONFIG_MKBP_EVENT_WAKEUP_MASK;CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK;CONFIG_POWER_TRACK_HOST_SLEEP_STATE' since the value of 'CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static uint32_t mkbp_host_event_wake_mask = CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK;
^
common/mkbp_event.c:76:0: information: Skipping configuration 'CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK' since the value of 'CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static uint32_t mkbp_host_event_wake_mask = CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK;
^
common/mkbp_event.c:76:0: information: Skipping configuration 'CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK;CONFIG_MKBP_USE_HOST_EVENT' since the value of 'CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static uint32_t mkbp_host_event_wake_mask = CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK;
^
common/mkbp_event.c:398:0: information: Skipping configuration 'CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK;CONFIG_MKBP_USE_HOST_EVENT' since the value of 'CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 r->mask = CONFIG_MKBP_HOST_EVENT_WAKEUP_MASK;
^
common/motion_lid.c:457:36: style: Condition 'board_is_lid_angle_tablet_mode()' is always true [knownConditionTrueFalse]
 if (board_is_lid_angle_tablet_mode())
                                   ^
common/motion_sense.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 31 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/motion_sense.c:301:26: style: The scope of the variable 'sensor' can be reduced. [variableScope]
 struct motion_sensor_t *sensor;
                         ^
common/motion_sense.c:982:28: style: Local variable 'sensor' shadows outer variable [shadowVariable]
   struct motion_sensor_t *sensor = &motion_sensors[i];
                           ^
common/motion_sense.c:870:26: note: Shadowed declaration
 struct motion_sensor_t *sensor;
                         ^
common/motion_sense.c:982:28: note: Shadow variable
   struct motion_sensor_t *sensor = &motion_sensors[i];
                           ^
common/motion_sense.c:91:0: information: Skipping configuration 'CONFIG_ACCEL_FORCE_MODE_MASK' since the value of 'CONFIG_ACCEL_FORCE_MODE_MASK' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!(CONFIG_ACCEL_FORCE_MODE_MASK & (1 << (sensor - motion_sensors))))
^
common/motion_sense.c:649:0: information: Skipping configuration 'CONFIG_ACCEL_SPOOF_MODE' since the value of 'CONFIG_ACCEL_SPOOF_MODE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_ACCEL_SPOOF_MODE) &&
^
common/motion_sense.c:649:0: information: Skipping configuration 'CONFIG_ACCEL_SPOOF_MODE;CONFIG_CMD_ACCELSPOOF' since the value of 'CONFIG_ACCEL_SPOOF_MODE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_ACCEL_SPOOF_MODE) &&
^
common/motion_sense.c:1365:37: style: Local variable 'i' shadows outer variable [shadowVariable]
  uint32_t enabled, disabled, mask, i;
                                    ^
common/motion_sense.c:1054:6: note: Shadowed declaration
 int i, ret = EC_RES_INVALID_PARAM, reported;
     ^
common/motion_sense.c:1365:37: note: Shadow variable
  uint32_t enabled, disabled, mask, i;
                                    ^
common/motion_sense.c:1396:37: style: Local variable 'i' shadows outer variable [shadowVariable]
  uint32_t enabled, disabled, mask, i;
                                    ^
common/motion_sense.c:1054:6: note: Shadowed declaration
 int i, ret = EC_RES_INVALID_PARAM, reported;
     ^
common/motion_sense.c:1396:37: note: Shadow variable
  uint32_t enabled, disabled, mask, i;
                                    ^
common/motion_sense.c:1517:10: style: The scope of the variable 'data' can be reduced. [variableScope]
 int id, data, round = 1;
         ^
common/motion_sense.c:1517:16: style: The scope of the variable 'round' can be reduced. [variableScope]
 int id, data, round = 1;
               ^
common/motion_sense.c:1565:10: style: The scope of the variable 'data' can be reduced. [variableScope]
 int id, data, round = 1;
         ^
common/motion_sense.c:1565:16: style: The scope of the variable 'round' can be reduced. [variableScope]
 int id, data, round = 1;
               ^
common/motion_sense.c:1613:10: style: The scope of the variable 'data' can be reduced. [variableScope]
 int id, data, round = 1;
         ^
common/motion_sense.c:1613:16: style: The scope of the variable 'round' can be reduced. [variableScope]
 int id, data, round = 1;
               ^
common/motion_sense.c:1671:17: style: The scope of the variable 'ret' can be reduced. [variableScope]
 int id, n = 1, ret;
                ^
common/newton_fit.c:27:33: style: The scope of the variable '_it' can be reduced. [variableScope]
 struct newton_fit_orientation *_it;
                                ^
common/newton_fit.c:46:33: style: The scope of the variable '_it' can be reduced. [variableScope]
 struct newton_fit_orientation *_it;
                                ^
common/newton_fit.c:88:33: style: The scope of the variable '_it' can be reduced. [variableScope]
 struct newton_fit_orientation *_it;
                                ^
common/ocpc.c:316:22: style: The if condition is the same as the previous if condition [duplicateCondition]
 if (ocpc->last_vsys != OCPC_UNINIT)
                     ^
common/ocpc.c:297:22: note: First condition
 if (ocpc->last_vsys != OCPC_UNINIT) {
                     ^
common/ocpc.c:316:22: note: Second condition
 if (ocpc->last_vsys != OCPC_UNINIT)
                     ^
common/ocpc.c:478:7: style: The scope of the variable 'num' can be reduced. [variableScope]
 int *num, *denom;
      ^
common/ocpc.c:478:13: style: The scope of the variable 'denom' can be reduced. [variableScope]
 int *num, *denom;
            ^
common/online_calibration.c:106:27: warning: Either the condition 'calib_data==NULL' is redundant or there is possible null pointer dereference: calib_data. [nullPointerRedundantCheck]
  (struct gyro_cal_data *)calib_data->type_specific_data;
                          ^
common/online_calibration.c:113:33: note: Assuming that condition 'calib_data==NULL' is not redundant
 if (data == NULL || calib_data == NULL ||
                                ^
common/online_calibration.c:106:27: note: Null pointer dereference
  (struct gyro_cal_data *)calib_data->type_specific_data;
                          ^
common/online_calibration.c:240:10: warning: Using 'sizeof' on array given as function argument returns size of a pointer. [sizeofwithsilentarraypointer]
         sizeof(out));
         ^
common/panic_output.c:389:22: style: The scope of the variable 'pdata' can be reduced. [variableScope]
 struct panic_data * pdata;
                     ^
common/panic_output.c:197:28: style: Local variable 'pdata_ptr' shadows outer variable [shadowVariable]
 struct panic_data * const pdata_ptr = PANIC_DATA_PTR;
                           ^
common/panic_output.c:23:34: note: Shadowed declaration
static struct panic_data * const pdata_ptr = PANIC_DATA_PTR;
                                 ^
common/panic_output.c:197:28: note: Shadow variable
 struct panic_data * const pdata_ptr = PANIC_DATA_PTR;
                           ^
common/panic_output.c:361:28: style: Local variable 'pdata_ptr' shadows outer variable [shadowVariable]
 struct panic_data * const pdata_ptr = panic_get_data();
                           ^
common/panic_output.c:23:34: note: Shadowed declaration
static struct panic_data * const pdata_ptr = PANIC_DATA_PTR;
                                 ^
common/panic_output.c:361:28: note: Shadow variable
 struct panic_data * const pdata_ptr = panic_get_data();
                           ^
common/panic_output.c:322:22: error: Division by zero. [zerodiv]
  ccprintf("%08x", 1 / zero);
                     ^
common/panic_output.c:319:23: note: Assignment 'zero=0', assigned value is 0
  volatile int zero = 0;
                      ^
common/panic_output.c:322:22: note: Division by zero
  ccprintf("%08x", 1 / zero);
                     ^
common/panic_output.c:327:22: error: Division by zero. [zerodiv]
  ccprintf("%08x", 1 / zero);
                     ^
common/panic_output.c:324:23: note: Assignment 'zero=0', assigned value is 0
  volatile int zero = 0;
                      ^
common/panic_output.c:327:22: note: Division by zero
  ccprintf("%08x", 1 / zero);
                     ^
common/panic_output.c:45:0: information: Skipping configuration 'CONFIG_DEBUG_ASSERT_BRIEF;CONFIG_DEBUG_ASSERT_REBOOTS;CONFIG_SOFTWARE_PANIC' since the value of 'CONFIG_SOFTWARE_PANIC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return (IS_ENABLED(CONFIG_SOFTWARE_PANIC) &&
^
common/panic_output.c:45:0: information: Skipping configuration 'CONFIG_DEBUG_ASSERT_REBOOTS;CONFIG_SOFTWARE_PANIC' since the value of 'CONFIG_SOFTWARE_PANIC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return (IS_ENABLED(CONFIG_SOFTWARE_PANIC) &&
^
common/panic_output.c:45:0: information: Skipping configuration 'CONFIG_SOFTWARE_PANIC' since the value of 'CONFIG_SOFTWARE_PANIC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return (IS_ENABLED(CONFIG_SOFTWARE_PANIC) &&
^
common/pd_log.c:43:11: style: The scope of the variable 'timestamp' can be reduced. [variableScope]
 uint32_t timestamp;
          ^
common/peci.c:94:6: style: The scope of the variable 'param' can be reduced. [variableScope]
 int param;
     ^
common/peci.c:143:13: style: Variable 'w_buf[4]' is assigned a value that is never used. [unreadVariable]
   w_buf[4] = (uint8_t)(param >> 0);
            ^
common/power_button_x86.c:418:11: style: The scope of the variable 't' can be reduced. [variableScope]
 uint64_t t;
          ^
common/power_button_x86.c:419:11: style: The scope of the variable 'tsleep' can be reduced. [variableScope]
 uint64_t tsleep;
          ^
common/power_button_x86.c:352:0: information: Skipping configuration 'CONFIG_CHARGER' since the value of 'CONFIG_CHARGER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (!IS_ENABLED(CONFIG_CHARGER) || charge_prevent_power_on(0)) {
^
common/power_button_x86.c:360:0: information: Skipping configuration 'CONFIG_CHARGER' since the value of 'CONFIG_CHARGER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (IS_ENABLED(CONFIG_CHARGER)) {
^
common/pwm.c:113:6: style: The scope of the variable 'value' can be reduced. [variableScope]
 int value = 0;
     ^
common/pwm.c:117:8: style: The scope of the variable 'raw' can be reduced. [variableScope]
 char *raw;
       ^
common/pwm.c:113:12: style: Variable 'value' is assigned a value that is never used. [unreadVariable]
 int value = 0;
           ^
common/rollback.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/rollback.c:209:0: information: Skipping configuration 'CONFIG_ROLLBACK_SECRET_LOCAL_ENTROPY_SIZE;CONFIG_ROLLBACK_SECRET_SIZE;CONFIG_ROLLBACK_UPDATE;CONFIG_SHA256' since the value of 'CONFIG_ROLLBACK_SECRET_LOCAL_ENTROPY_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 for (i = 0; i < CONFIG_ROLLBACK_SECRET_LOCAL_ENTROPY_SIZE; i++) {
^
common/rollback_private.h:25:0: information: Skipping configuration 'CONFIG_ROLLBACK_SECRET_LOCAL_ENTROPY_SIZE;CONFIG_ROLLBACK_SECRET_SIZE;CONFIG_ROLLBACK_UPDATE;CONFIG_SHA256' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 uint8_t secret[CONFIG_ROLLBACK_SECRET_SIZE];
^
common/rollback.c:196:0: information: Skipping configuration 'CONFIG_ROLLBACK_SECRET_LOCAL_ENTROPY_SIZE;CONFIG_ROLLBACK_SECRET_SIZE;CONFIG_ROLLBACK_UPDATE;CONFIG_SHA256' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
BUILD_ASSERT(SHA256_DIGEST_SIZE == CONFIG_ROLLBACK_SECRET_SIZE);
^
common/rollback.c:205:0: information: Skipping configuration 'CONFIG_ROLLBACK_SECRET_LOCAL_ENTROPY_SIZE;CONFIG_ROLLBACK_SECRET_SIZE;CONFIG_ROLLBACK_UPDATE;CONFIG_SHA256' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 SHA256_update(&ctx, src, CONFIG_ROLLBACK_SECRET_SIZE);
^
common/rollback.c:217:0: information: Skipping configuration 'CONFIG_ROLLBACK_SECRET_LOCAL_ENTROPY_SIZE;CONFIG_ROLLBACK_SECRET_SIZE;CONFIG_ROLLBACK_UPDATE;CONFIG_SHA256' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 memcpy(dst, hash, CONFIG_ROLLBACK_SECRET_SIZE);
^
common/rollback.c:477:0: information: Skipping configuration 'CONFIG_ROLLBACK_SECRET_LOCAL_ENTROPY_SIZE;CONFIG_ROLLBACK_SECRET_SIZE;CONFIG_ROLLBACK_UPDATE;CONFIG_SHA256' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    data.secret[CONFIG_ROLLBACK_SECRET_SIZE-1]);
^
common/rollback_private.h:25:0: information: Skipping configuration 'CONFIG_ROLLBACK_SECRET_SIZE' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 uint8_t secret[CONFIG_ROLLBACK_SECRET_SIZE];
^
common/rollback.c:477:0: information: Skipping configuration 'CONFIG_ROLLBACK_SECRET_SIZE' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    data.secret[CONFIG_ROLLBACK_SECRET_SIZE-1]);
^
common/rollback_private.h:25:0: information: Skipping configuration 'CONFIG_ROLLBACK_SECRET_SIZE;CONFIG_ROLLBACK_UPDATE;CONFIG_SHA256' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 uint8_t secret[CONFIG_ROLLBACK_SECRET_SIZE];
^
common/rollback.c:196:0: information: Skipping configuration 'CONFIG_ROLLBACK_SECRET_SIZE;CONFIG_ROLLBACK_UPDATE;CONFIG_SHA256' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
BUILD_ASSERT(SHA256_DIGEST_SIZE == CONFIG_ROLLBACK_SECRET_SIZE);
^
common/rollback.c:205:0: information: Skipping configuration 'CONFIG_ROLLBACK_SECRET_SIZE;CONFIG_ROLLBACK_UPDATE;CONFIG_SHA256' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 SHA256_update(&ctx, src, CONFIG_ROLLBACK_SECRET_SIZE);
^
common/rollback.c:217:0: information: Skipping configuration 'CONFIG_ROLLBACK_SECRET_SIZE;CONFIG_ROLLBACK_UPDATE;CONFIG_SHA256' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 memcpy(dst, hash, CONFIG_ROLLBACK_SECRET_SIZE);
^
common/rollback.c:477:0: information: Skipping configuration 'CONFIG_ROLLBACK_SECRET_SIZE;CONFIG_ROLLBACK_UPDATE;CONFIG_SHA256' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    data.secret[CONFIG_ROLLBACK_SECRET_SIZE-1]);
^
common/rwsig.c:181:31: error: Uninitialized variable: rwlen [uninitvar]
 good = check_padding(rwdata, rwlen,
                              ^
common/sha256.c:137:4: error: Array 'w[64]' accessed at index 64, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+1);
   ^
common/sha256.c:138:4: error: Array 'w[64]' accessed at index 65, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+2);
   ^
common/sha256.c:139:4: error: Array 'w[64]' accessed at index 66, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+3);
   ^
common/sha256.c:139:4: error: Array 'w[64]' accessed at index 64, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+3);
   ^
common/sha256.c:140:4: error: Array 'w[64]' accessed at index 67, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+4);
   ^
common/sha256.c:140:4: error: Array 'w[64]' accessed at index 65, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+4);
   ^
common/sha256.c:141:4: error: Array 'w[64]' accessed at index 68, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+5);
   ^
common/sha256.c:141:4: error: Array 'w[64]' accessed at index 66, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+5);
   ^
common/sha256.c:142:4: error: Array 'w[64]' accessed at index 69, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+6);
   ^
common/sha256.c:142:4: error: Array 'w[64]' accessed at index 67, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+6);
   ^
common/sha256.c:143:4: error: Array 'w[64]' accessed at index 70, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+7);
   ^
common/sha256.c:143:4: error: Array 'w[64]' accessed at index 68, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+7);
   ^
common/sha256.c:156:4: error: Array 'sha256_k[64]' accessed at index 64, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(7, 0, 1, 2, 3, 4, 5, 6, j+1);
   ^
common/sha256.c:156:4: error: Array 'w[64]' accessed at index 64, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(7, 0, 1, 2, 3, 4, 5, 6, j+1);
   ^
common/sha256.c:157:4: error: Array 'sha256_k[64]' accessed at index 65, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(6, 7, 0, 1, 2, 3, 4, 5, j+2);
   ^
common/sha256.c:157:4: error: Array 'w[64]' accessed at index 65, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(6, 7, 0, 1, 2, 3, 4, 5, j+2);
   ^
common/sha256.c:158:4: error: Array 'sha256_k[64]' accessed at index 66, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(5, 6, 7, 0, 1, 2, 3, 4, j+3);
   ^
common/sha256.c:158:4: error: Array 'w[64]' accessed at index 66, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(5, 6, 7, 0, 1, 2, 3, 4, j+3);
   ^
common/sha256.c:159:4: error: Array 'sha256_k[64]' accessed at index 67, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(4, 5, 6, 7, 0, 1, 2, 3, j+4);
   ^
common/sha256.c:159:4: error: Array 'w[64]' accessed at index 67, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(4, 5, 6, 7, 0, 1, 2, 3, j+4);
   ^
common/sha256.c:160:4: error: Array 'sha256_k[64]' accessed at index 68, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(3, 4, 5, 6, 7, 0, 1, 2, j+5);
   ^
common/sha256.c:160:4: error: Array 'w[64]' accessed at index 68, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(3, 4, 5, 6, 7, 0, 1, 2, j+5);
   ^
common/sha256.c:161:4: error: Array 'sha256_k[64]' accessed at index 69, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(2, 3, 4, 5, 6, 7, 0, 1, j+6);
   ^
common/sha256.c:161:4: error: Array 'w[64]' accessed at index 69, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(2, 3, 4, 5, 6, 7, 0, 1, j+6);
   ^
common/sha256.c:162:4: error: Array 'sha256_k[64]' accessed at index 70, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(1, 2, 3, 4, 5, 6, 7, 0, j+7);
   ^
common/sha256.c:162:4: error: Array 'w[64]' accessed at index 70, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(1, 2, 3, 4, 5, 6, 7, 0, j+7);
   ^
common/spi_commands.c:20:10: style: The scope of the variable 'data' can be reduced. [variableScope]
 uint8_t data[32];
         ^
common/spi_flash.c:140:9: warning: Identical condition and return expression 'rv', return value is always 0 [identicalConditionAfterEarlyExit]
 return rv;
        ^
common/spi_flash.c:134:6: note: If condition 'rv' is true, the function will return/exit
 if (rv)
     ^
common/spi_flash.c:140:9: note: Returning identical expression 'rv'
 return rv;
        ^
common/spi_flash.c:503:9: warning: Identical condition and return expression 'rv', return value is always 0 [identicalConditionAfterEarlyExit]
 return rv;
        ^
common/spi_flash.c:490:6: note: If condition 'rv' is true, the function will return/exit
 if (rv)
     ^
common/spi_flash.c:503:9: note: Returning identical expression 'rv'
 return rv;
        ^
common/spi_flash.c:130:11: style: Condition 'reg2==-1' is always true [knownConditionTrueFalse]
 if (reg2 == -1)
          ^
common/spi_flash.c:127:10: note: Assignment 'reg2=-1', assigned value is -1
 reg2 = -1;
         ^
common/spi_flash.c:130:11: note: Condition 'reg2==-1' is always true
 if (reg2 == -1)
          ^
common/spi_flash.c:95:2: style:inconclusive: Statements following return, break, continue, goto or throw will never be executed. [unreachableCode]
 if (spi_transaction(SPI_FLASH_DEVICE, &cmd, 1, &resp, 1) != EC_SUCCESS)
 ^
common/spi_flash.c:154:25: style: The scope of the variable 'spi_addr' can be reduced. [variableScope]
 int i, read_size, ret, spi_addr;
                        ^
common/spi_flash.c:280:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv, write_size;
     ^
common/spi_flash.c:280:10: style: The scope of the variable 'write_size' can be reduced. [variableScope]
 int rv, write_size;
         ^
common/spi_flash.c:87:14: style: Variable 'cmd' is assigned a value that is never used. [unreadVariable]
 uint8_t cmd = SPI_FLASH_READ_SR2;
             ^
common/spi_flash.c:555:6: style: The scope of the variable 'write_len' can be reduced. [variableScope]
 int write_len;
     ^
common/spi_flash.c:601:6: style: The scope of the variable 'read_len' can be reduced. [variableScope]
 int read_len;
     ^
common/spi_flash_reg.c:154:30: style: The scope of the variable 'range' can be reduced. [variableScope]
 const struct protect_range *range;
                             ^
common/spi_flash_reg.c:156:11: style: Variable 'cmp' is assigned a value that is never used. [unreadVariable]
 char cmp = 0;
          ^
common/spi_flash_reg.c:157:11: style: Variable 'sec' is assigned a value that is never used. [unreadVariable]
 char sec = 0;
          ^
common/spi_flash_reg.c:158:10: style: Variable 'tb' is assigned a value that is never used. [unreadVariable]
 char tb = 0;
         ^
common/spi_flash_reg.c:159:10: style: Variable 'bp' is assigned a value that is never used. [unreadVariable]
 char bp = 0;
         ^
common/spi_nor.c:89:9: warning: Identical condition and return expression 'rv', return value is always 0 [identicalConditionAfterEarlyExit]
 return rv;
        ^
common/spi_nor.c:84:6: note: If condition 'rv' is true, the function will return/exit
 if (rv)
     ^
common/spi_nor.c:89:9: note: Returning identical expression 'rv'
 return rv;
        ^
common/spi_nor.c:453:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
common/spi_nor.c:110:10: style: Local variable 'buf' shadows outer variable [shadowVariable]
 uint8_t buf[2];
         ^
common/spi_nor.c:50:16: note: Shadowed declaration
static uint8_t buf[CONFIG_SPI_NOR_MAX_MESSAGE_SIZE];
               ^
common/spi_nor.c:110:10: note: Shadow variable
 uint8_t buf[2];
         ^
common/spi_nor.c:382:9: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
 int rv = EC_SUCCESS;
        ^
common/spi_nor.c:422:9: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
 int rv = EC_SUCCESS;
        ^
common/spi_nor.c:887:33: style: The scope of the variable 'spi_nor_device' can be reduced. [variableScope]
 const struct spi_nor_device_t *spi_nor_device = 0;
                                ^
common/spi_nor.c:887:48: style: Variable 'spi_nor_device' is assigned a value that is never used. [unreadVariable]
 const struct spi_nor_device_t *spi_nor_device = 0;
                                               ^
common/switch.c:111:11: style: Local variable 'memmap_switches' shadows outer variable [shadowVariable]
 uint8_t *memmap_switches = host_get_memmap(EC_MEMMAP_SWITCHES);
          ^
common/switch.c:23:17: note: Shadowed declaration
static uint8_t *memmap_switches;
                ^
common/switch.c:111:11: note: Shadow variable
 uint8_t *memmap_switches = host_get_memmap(EC_MEMMAP_SWITCHES);
          ^
common/system.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/system.c:67:1: error: There is an unknown macro here somewhere. Configuration is required. If STATIC_IF is a macro then please configure it. [unknownMacro]
STATIC_IF(CONFIG_HIBERNATE) uint32_t hibernate_seconds;
^
common/system.c:1645:0: information: Skipping configuration 'CONFIG_BATTERY;CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON' since the value of 'CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   soc >= CONFIG_CHARGER_MIN_BAT_PCT_FOR_POWER_ON)
^
common/system.c:1652:0: information: Skipping configuration 'CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON;CONFIG_CHARGE_MANAGER' since the value of 'CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (pow >= CONFIG_CHARGER_MIN_POWER_MW_FOR_POWER_ON)
^
common/tablet_mode.c:102:0: information: Skipping configuration 'CONFIG_GMR_TABLET_MODE;GMR_TABLET_MODE_GPIO_L' since the value of 'GMR_TABLET_MODE_GPIO_L' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
         : !gpio_get_level(GMR_TABLET_MODE_GPIO_L);
^
common/tablet_mode.c:151:0: information: Skipping configuration 'CONFIG_GMR_TABLET_MODE;GMR_TABLET_MODE_GPIO_L' since the value of 'GMR_TABLET_MODE_GPIO_L' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_enable_interrupt(GMR_TABLET_MODE_GPIO_L);
^
common/tablet_mode.c:162:0: information: Skipping configuration 'CONFIG_GMR_TABLET_MODE;GMR_TABLET_MODE_GPIO_L' since the value of 'GMR_TABLET_MODE_GPIO_L' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_disable_interrupt(GMR_TABLET_MODE_GPIO_L);
^
common/thermal.c:240:9: style: The scope of the variable 'val' can be reduced. [variableScope]
 int i, val;
        ^
common/throttle_ap.c:138:11: style: The scope of the variable 'tmpval' can be reduced. [variableScope]
 uint32_t tmpval;
          ^
common/timer.c:29:1: error: There is an unknown macro here somewhere. Configuration is required. If STATIC_IF_NOT is a macro then please configure it. [unknownMacro]
STATIC_IF_NOT(CONFIG_HWTIMER_64BIT) uint32_t clksrc_high;
^
common/timer.c:29:0: information: Skipping configuration 'CONFIG_HWTIMER_64BIT' since the value of 'CONFIG_HWTIMER_64BIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
STATIC_IF_NOT(CONFIG_HWTIMER_64BIT) uint32_t clksrc_high;
^
common/timer.c:67:0: information: Skipping configuration 'CONFIG_HWTIMER_64BIT' since the value of 'CONFIG_HWTIMER_64BIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!IS_ENABLED(CONFIG_HWTIMER_64BIT) && overflow)
^
common/timer.c:197:0: information: Skipping configuration 'CONFIG_HWTIMER_64BIT' since the value of 'CONFIG_HWTIMER_64BIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_HWTIMER_64BIT)) {
^
common/timer.c:219:0: information: Skipping configuration 'CONFIG_HWTIMER_64BIT' since the value of 'CONFIG_HWTIMER_64BIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_HWTIMER_64BIT)) {
^
common/timer.c:282:0: information: Skipping configuration 'CONFIG_HWTIMER_64BIT' since the value of 'CONFIG_HWTIMER_64BIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_HWTIMER_64BIT)) {
^
common/timer.c:289:0: information: Skipping configuration 'CONFIG_HWTIMER_64BIT' since the value of 'CONFIG_HWTIMER_64BIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_HWTIMER_64BIT))
^
common/timer.c:167:0: information: Skipping configuration 'CONFIG_ZEPHYR' since the value of 'CONFIG_ZEPHYR' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_ZEPHYR)) {
^
common/uart_buffering.c:260:6: style: The scope of the variable 'scratch' can be reduced. [variableScope]
 int scratch __attribute__ ((unused));
     ^
common/uart_buffering.c:85:6: style: Variable 'tx_buf_next' is not assigned a value. [unassignedVariable]
 int tx_buf_next, tx_buf_new_tail;
     ^
common/uart_buffering.c:85:19: style: Variable 'tx_buf_new_tail' is not assigned a value. [unassignedVariable]
 int tx_buf_next, tx_buf_new_tail;
                  ^
common/update_fw.c:49:0: information: Skipping configuration 'CONFIG_TOUCHPAD_HASH_FW;CONFIG_TOUCHPAD_VIRTUAL_OFF' since the value of 'CONFIG_TOUCHPAD_VIRTUAL_OFF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return (block_offset >= CONFIG_TOUCHPAD_VIRTUAL_OFF) &&
^
common/update_fw.c:51:0: information: Skipping configuration 'CONFIG_TOUCHPAD_HASH_FW;CONFIG_TOUCHPAD_VIRTUAL_OFF' since the value of 'CONFIG_TOUCHPAD_VIRTUAL_OFF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   (CONFIG_TOUCHPAD_VIRTUAL_OFF +
^
common/update_fw.c:129:0: information: Skipping configuration 'CONFIG_TOUCHPAD_HASH_FW;CONFIG_TOUCHPAD_VIRTUAL_OFF' since the value of 'CONFIG_TOUCHPAD_VIRTUAL_OFF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  uint32_t fw_offset = block_offset - CONFIG_TOUCHPAD_VIRTUAL_OFF;
^
common/update_fw.c:287:0: information: Skipping configuration 'CONFIG_TOUCHPAD_HASH_FW;CONFIG_TOUCHPAD_VIRTUAL_OFF' since the value of 'CONFIG_TOUCHPAD_VIRTUAL_OFF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    block_offset - CONFIG_TOUCHPAD_VIRTUAL_OFF,
^
common/update_fw.c:49:0: information: Skipping configuration 'CONFIG_TOUCHPAD_VIRTUAL_OFF' since the value of 'CONFIG_TOUCHPAD_VIRTUAL_OFF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return (block_offset >= CONFIG_TOUCHPAD_VIRTUAL_OFF) &&
^
common/update_fw.c:51:0: information: Skipping configuration 'CONFIG_TOUCHPAD_VIRTUAL_OFF' since the value of 'CONFIG_TOUCHPAD_VIRTUAL_OFF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   (CONFIG_TOUCHPAD_VIRTUAL_OFF +
^
common/update_fw.c:287:0: information: Skipping configuration 'CONFIG_TOUCHPAD_VIRTUAL_OFF' since the value of 'CONFIG_TOUCHPAD_VIRTUAL_OFF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    block_offset - CONFIG_TOUCHPAD_VIRTUAL_OFF,
^
common/usb_common.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/usb_common.c:585:0: information: Skipping configuration 'CONFIG_USBC_PPC' since the value of 'CONFIG_USBC_PPC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USBC_PPC))
^
common/usb_common.c:730:0: information: Skipping configuration 'CONFIG_USB_PD_DISCHARGE;CONFIG_USB_PD_DISCHARGE_GPIO' since the value of 'CONFIG_USB_PD_DISCHARGE_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_DISCHARGE_GPIO))
^
common/usb_console_stream.c:93:6: style: The scope of the variable 'wait_time_us' can be reduced. [variableScope]
 int wait_time_us = 1;
     ^
common/usb_i2c.c:27:1: error: There is an unknown macro here somewhere. Configuration is required. If USB_I2C_CONFIG is a macro then please configure it. [unknownMacro]
USB_I2C_CONFIG(i2c,
^
common/usb_pd_alt_mode_dfp.c:268:6: style: The scope of the variable 'idx' can be reduced. [variableScope]
 int idx;
     ^
common/usb_pd_alt_mode_dfp.c:367:11: style: The scope of the variable 'svid0' can be reduced. [variableScope]
 uint16_t svid0, svid1;
          ^
common/usb_pd_alt_mode_dfp.c:367:18: style: The scope of the variable 'svid1' can be reduced. [variableScope]
 uint16_t svid0, svid1;
                 ^
common/usb_pd_alt_mode_dfp.c:908:23: style: The scope of the variable 'disc' can be reduced. [variableScope]
 struct pd_discovery *disc;
                      ^
common/usb_pd_alt_mode_dfp.c:838:26: style: Variable 'dev_mode_resp.raw_value' is assigned a value that is never used. [unreadVariable]
 dev_mode_resp.raw_value = pd_get_tbt_mode_vdo(port, TCPC_TX_SOP);
                         ^
common/usb_pd_alt_mode_dfp.c:839:28: style: Variable 'cable_mode_resp.raw_value' is assigned a value that is never used. [unreadVariable]
 cable_mode_resp.raw_value =
                           ^
common/usb_pd_alt_mode_dfp.c:843:32: style: Variable 'enter_dev_mode.vendor_spec_b1' is assigned a value that is never used. [unreadVariable]
 enter_dev_mode.vendor_spec_b1 = dev_mode_resp.vendor_spec_b1;
                               ^
common/usb_pd_alt_mode_dfp.c:844:32: style: Variable 'enter_dev_mode.vendor_spec_b0' is assigned a value that is never used. [unreadVariable]
 enter_dev_mode.vendor_spec_b0 = dev_mode_resp.vendor_spec_b0;
                               ^
common/usb_pd_alt_mode_dfp.c:845:31: style: Variable 'enter_dev_mode.intel_spec_b0' is assigned a value that is never used. [unreadVariable]
 enter_dev_mode.intel_spec_b0 = dev_mode_resp.intel_spec_b0;
                              ^
common/usb_pd_alt_mode_dfp.c:846:23: style: Variable 'enter_dev_mode.cable' is assigned a value that is never used. [unreadVariable]
 enter_dev_mode.cable =
                      ^
common/usb_pd_alt_mode_dfp.c:851:28: style: Variable 'enter_dev_mode.lsrx_comm' is assigned a value that is never used. [unreadVariable]
  enter_dev_mode.lsrx_comm =
                           ^
common/usb_pd_alt_mode_dfp.c:853:31: style: Variable 'enter_dev_mode.retimer_type' is assigned a value that is never used. [unreadVariable]
  enter_dev_mode.retimer_type =
                              ^
common/usb_pd_alt_mode_dfp.c:855:28: style: Variable 'enter_dev_mode.tbt_cable' is assigned a value that is never used. [unreadVariable]
  enter_dev_mode.tbt_cable =
                           ^
common/usb_pd_alt_mode_dfp.c:857:30: style: Variable 'enter_dev_mode.tbt_rounded' is assigned a value that is never used. [unreadVariable]
  enter_dev_mode.tbt_rounded =
                             ^
common/usb_pd_alt_mode_dfp.c:859:34: style: Variable 'enter_dev_mode.tbt_cable_speed' is assigned a value that is never used. [unreadVariable]
  enter_dev_mode.tbt_cable_speed =
                                 ^
common/usb_pd_alt_mode_dfp.c:862:34: style: Variable 'enter_dev_mode.tbt_cable_speed' is assigned a value that is never used. [unreadVariable]
  enter_dev_mode.tbt_cable_speed = TBT_SS_U32_GEN1_GEN2;
                                 ^
common/usb_pd_alt_mode_dfp.c:864:30: style: Variable 'enter_dev_mode.tbt_alt_mode' is assigned a value that is never used. [unreadVariable]
 enter_dev_mode.tbt_alt_mode = TBT_ALTERNATE_MODE;
                             ^
common/usb_pd_alt_mode_dfp.c:964:22: style: Variable 'eudo.cable_current' is assigned a value that is never used. [unreadVariable]
  eudo.cable_current = USB4_CABLE_CURRENT_3A;
                     ^
common/usb_pd_alt_mode_dfp.c:967:22: style: Variable 'eudo.cable_current' is assigned a value that is never used. [unreadVariable]
  eudo.cable_current = USB4_CABLE_CURRENT_5A;
                     ^
common/usb_pd_alt_mode_dfp.c:970:22: style: Variable 'eudo.cable_current' is assigned a value that is never used. [unreadVariable]
  eudo.cable_current = USB4_CABLE_CURRENT_INVALID;
                     ^
common/usb_pd_alt_mode_dfp.c:973:22: style: Variable 'eudo.pcie_supported' is assigned a value that is never used. [unreadVariable]
 eudo.pcie_supported = IS_ENABLED(CONFIG_USB_PD_PCIE_TUNNELING);
                     ^
common/usb_pd_alt_mode_dfp.c:974:20: style: Variable 'eudo.dp_supported' is assigned a value that is never used. [unreadVariable]
 eudo.dp_supported = IS_ENABLED(CONFIG_USB_PD_ALT_MODE_DFP);
                   ^
common/usb_pd_alt_mode_dfp.c:975:21: style: Variable 'eudo.tbt_supported' is assigned a value that is never used. [unreadVariable]
 eudo.tbt_supported = IS_ENABLED(CONFIG_USB_PD_TBT_COMPAT_MODE);
                    ^
common/usb_pd_alt_mode_dfp.c:976:20: style: Variable 'eudo.host_present' is assigned a value that is never used. [unreadVariable]
 eudo.host_present = 1;
                   ^
common/usb_pd_alt_mode_dfp.c:1143:10: style:inconclusive: Boolean expression '!lvl' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
 if (irq & !lvl) {
         ^
common/usb_pd_alt_mode_dfp.c:1143:10: style: Boolean result is used in bitwise operation. Clarify expression with parentheses. [clarifyCondition]
 if (irq & !lvl) {
         ^
common/usb_pd_alt_mode_dfp.c:743:0: information: Skipping configuration 'CONFIG_USB_PD_TBT_COMPAT_MODE' since the value of 'CONFIG_USB_PD_TBT_COMPAT_MODE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     IS_ENABLED(CONFIG_USB_PD_TBT_COMPAT_MODE)) {
^
common/usb_pd_alt_mode_dfp.c:762:0: information: Skipping configuration 'CONFIG_USB_PD_TBT_COMPAT_MODE' since the value of 'CONFIG_USB_PD_TBT_COMPAT_MODE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!IS_ENABLED(CONFIG_USB_PD_TBT_COMPAT_MODE) ||
^
common/usb_pd_alt_mode_dfp.c:975:0: information: Skipping configuration 'CONFIG_USB_PD_TBT_COMPAT_MODE' since the value of 'CONFIG_USB_PD_TBT_COMPAT_MODE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 eudo.tbt_supported = IS_ENABLED(CONFIG_USB_PD_TBT_COMPAT_MODE);
^
common/usb_pd_alt_mode_dfp.c:1111:0: information: Skipping configuration 'USB_PD_PORT_TCPC_MST' since the value of 'USB_PD_PORT_TCPC_MST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (port == USB_PD_PORT_TCPC_MST)
^
common/usb_pd_alt_mode_dfp.c:1173:0: information: Skipping configuration 'USB_PD_PORT_TCPC_MST' since the value of 'USB_PD_PORT_TCPC_MST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (port == USB_PD_PORT_TCPC_MST)
^
common/usb_pd_alt_mode_dfp.c:1189:0: information: Skipping configuration 'USB_PD_PORT_TCPC_MST' since the value of 'USB_PD_PORT_TCPC_MST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (port == USB_PD_PORT_TCPC_MST)
^
common/usb_pd_dual_role.c:20:0: information: Skipping configuration 'CONFIG_USB_PD_GIVE_BACK;PD_MAX_VOLTAGE_MV;PD_OPERATING_POWER_MW' since the value of 'PD_MAX_VOLTAGE_MV' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static unsigned int max_request_mv = PD_MAX_VOLTAGE_MV;
^
common/usb_pd_dual_role.c:58:0: information: Skipping configuration 'CONFIG_USB_PD_GIVE_BACK;PD_MAX_VOLTAGE_MV;PD_OPERATING_POWER_MW' since the value of 'PD_MAX_VOLTAGE_MV' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 max_mv = MIN(max_mv, PD_MAX_VOLTAGE_MV);
^
common/usb_pd_dual_role.c:326:0: information: Skipping configuration 'CONFIG_USB_PD_GIVE_BACK;PD_MAX_VOLTAGE_MV;PD_OPERATING_POWER_MW' since the value of 'PD_MAX_VOLTAGE_MV' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     PD_MAX_VOLTAGE_MV, &pdo);
^
common/usb_pd_dual_role.c:263:0: information: Skipping configuration 'CONFIG_USB_PD_GIVE_BACK;PD_MAX_VOLTAGE_MV;PD_OPERATING_POWER_MW' since the value of 'PD_OPERATING_POWER_MW' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (uw < (1000 * PD_OPERATING_POWER_MW))
^
common/usb_pd_dual_role.c:20:0: information: Skipping configuration 'PD_MAX_VOLTAGE_MV;PD_OPERATING_POWER_MW' since the value of 'PD_MAX_VOLTAGE_MV' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static unsigned int max_request_mv = PD_MAX_VOLTAGE_MV;
^
common/usb_pd_dual_role.c:58:0: information: Skipping configuration 'PD_MAX_VOLTAGE_MV;PD_OPERATING_POWER_MW' since the value of 'PD_MAX_VOLTAGE_MV' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 max_mv = MIN(max_mv, PD_MAX_VOLTAGE_MV);
^
common/usb_pd_dual_role.c:326:0: information: Skipping configuration 'PD_MAX_VOLTAGE_MV;PD_OPERATING_POWER_MW' since the value of 'PD_MAX_VOLTAGE_MV' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     PD_MAX_VOLTAGE_MV, &pdo);
^
common/usb_pd_dual_role.c:263:0: information: Skipping configuration 'PD_MAX_VOLTAGE_MV;PD_OPERATING_POWER_MW' since the value of 'PD_OPERATING_POWER_MW' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (uw < (1000 * PD_OPERATING_POWER_MW))
^
common/usb_pd_host_cmd.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/usb_pd_host_cmd.c:262:23: style: Variable 'cable_resp.raw_value' is assigned a value that is never used. [unreadVariable]
 cable_resp.raw_value = pd_get_tbt_mode_vdo(port, TCPC_TX_SOP_PRIME);
                      ^
common/usb_pd_host_cmd.c:263:24: style: Variable 'device_resp.raw_value' is assigned a value that is never used. [unreadVariable]
 device_resp.raw_value = pd_get_tbt_mode_vdo(port, TCPC_TX_SOP);
                       ^
common/usb_pd_host_cmd.c:60:13: style: The scope of the variable 'rw_hash_next_idx' can be reduced. [variableScope]
 static int rw_hash_next_idx;
            ^
common/usb_pd_policy.c:873:58: portability: '(void*)CONFIG_PROGRAM_MEMORY_BASE' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
  SHA256_update(&ctx, (void *)CONFIG_PROGRAM_MEMORY_BASE +
                                                         ^
common/usb_pd_protocol.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 64 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/usb_pd_protocol.c:634:2: style:inconclusive: Found duplicate branches for 'if' and 'else'. [duplicateBranch]
 if (rv == EC_SUCCESS)
 ^
common/usb_pd_protocol.c:636:2: note: Found duplicate branches for 'if' and 'else'.
 else
 ^
common/usb_pd_protocol.c:634:2: note: Found duplicate branches for 'if' and 'else'.
 if (rv == EC_SUCCESS)
 ^
common/usb_pd_protocol.c:261:11: style: struct member 'pd_protocol::vbus_debounce_time' is never used. [unusedStructMember]
 uint64_t vbus_debounce_time;
          ^
common/usb_pd_protocol.c:2817:27: style: Variable 'incoming_packet' is assigned a value that is never used. [unreadVariable]
 int res, incoming_packet = 0;
                          ^
common/usb_pd_protocol.c:848:0: information: Skipping configuration 'CONFIG_BATTERY;CONFIG_BATTERY_PRESENT_CUSTOM;CONFIG_BATTERY_PRESENT_GPIO;CONFIG_COMMON_RUNTIME;CONFIG_HOSTCMD_FLASHPD;HAS_TASK_HOSTCMD' since the value of 'CONFIG_COMMON_RUNTIME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_COMMON_RUNTIME))
^
common/usb_pd_protocol.c:3335:0: information: Skipping configuration 'CONFIG_BATTERY;CONFIG_BATTERY_PRESENT_CUSTOM;CONFIG_BATTERY_PRESENT_GPIO;CONFIG_COMMON_RUNTIME;CONFIG_HOSTCMD_FLASHPD;HAS_TASK_HOSTCMD' since the value of 'CONFIG_COMMON_RUNTIME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (IS_ENABLED(CONFIG_COMMON_RUNTIME))
^
common/usb_pd_protocol.c:3297:12: style: Variable 'timeout' is reassigned a value before the old one has been used. [redundantAssignment]
   timeout = 2 * MSEC;
           ^
common/usb_pd_protocol.c:3190:12: note: timeout is assigned
   timeout = 10*MSEC;
           ^
common/usb_pd_protocol.c:3297:12: note: timeout is overwritten
   timeout = 2 * MSEC;
           ^
common/usb_pd_protocol.c:3089:33: style: Local variable 'cc1' shadows outer variable [shadowVariable]
    enum tcpc_cc_voltage_status cc1, cc2;
                                ^
common/usb_pd_protocol.c:2816:30: note: Shadowed declaration
 enum tcpc_cc_voltage_status cc1, cc2;
                             ^
common/usb_pd_protocol.c:3089:33: note: Shadow variable
    enum tcpc_cc_voltage_status cc1, cc2;
                                ^
common/usb_pd_protocol.c:3089:38: style: Local variable 'cc2' shadows outer variable [shadowVariable]
    enum tcpc_cc_voltage_status cc1, cc2;
                                     ^
common/usb_pd_protocol.c:2816:35: note: Shadowed declaration
 enum tcpc_cc_voltage_status cc1, cc2;
                                  ^
common/usb_pd_protocol.c:3089:38: note: Shadow variable
    enum tcpc_cc_voltage_status cc1, cc2;
                                     ^
common/usb_pd_protocol.c:1208:10: style: Variable 'bit_len' is assigned a value that is never used. [unreadVariable]
 bit_len = pd_transmit(port, TCPC_TX_SOP, header, pd_snk_pdo,
         ^
common/usb_pd_protocol.c:2372:0: information: Skipping configuration 'CONFIG_CHARGE_MANAGER;CONFIG_USB_PD_ALT_MODE_DFP' since the value of 'CONFIG_USB_PD_ALT_MODE_DFP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!IS_ENABLED(CONFIG_USB_PD_ALT_MODE_DFP))
^
common/usb_pd_protocol.c:2778:0: information: Skipping configuration 'CONFIG_CHARGE_MANAGER;CONFIG_USB_PD_ALT_MODE_DFP' since the value of 'CONFIG_USB_PD_ALT_MODE_DFP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     !IS_ENABLED(CONFIG_USB_PD_ALT_MODE_DFP))
^
common/usb_pd_protocol.c:848:0: information: Skipping configuration 'CONFIG_CMD_PD;CONFIG_CMD_PD_DEV_DUMP_INFO;CONFIG_COMMON_RUNTIME' since the value of 'CONFIG_COMMON_RUNTIME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_COMMON_RUNTIME))
^
common/usb_pd_protocol.c:3335:0: information: Skipping configuration 'CONFIG_CMD_PD;CONFIG_CMD_PD_DEV_DUMP_INFO;CONFIG_COMMON_RUNTIME' since the value of 'CONFIG_COMMON_RUNTIME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (IS_ENABLED(CONFIG_COMMON_RUNTIME))
^
common/usb_pd_protocol.c:848:0: information: Skipping configuration 'CONFIG_CMD_PD;CONFIG_CMD_PD_FLASH;CONFIG_CMD_PD;CONFIG_USB_PD_DUAL_ROLE;CONFIG_COMMON_RUNTIME' since the value of 'CONFIG_COMMON_RUNTIME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_COMMON_RUNTIME))
^
common/usb_pd_protocol.c:3335:0: information: Skipping configuration 'CONFIG_CMD_PD;CONFIG_CMD_PD_FLASH;CONFIG_CMD_PD;CONFIG_USB_PD_DUAL_ROLE;CONFIG_COMMON_RUNTIME' since the value of 'CONFIG_COMMON_RUNTIME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (IS_ENABLED(CONFIG_COMMON_RUNTIME))
^
common/usb_pd_protocol.c:4013:0: information: Skipping configuration 'CONFIG_CMD_PD;CONFIG_CMD_PD_FLASH;CONFIG_CMD_PD;CONFIG_USB_PD_DUAL_ROLE;CONFIG_COMMON_RUNTIME' since the value of 'CONFIG_COMMON_RUNTIME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (IS_ENABLED(CONFIG_COMMON_RUNTIME))
^
common/usb_pd_protocol.c:848:0: information: Skipping configuration 'CONFIG_CMD_PD;CONFIG_COMMON_RUNTIME' since the value of 'CONFIG_COMMON_RUNTIME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_COMMON_RUNTIME))
^
common/usb_pd_protocol.c:3335:0: information: Skipping configuration 'CONFIG_CMD_PD;CONFIG_COMMON_RUNTIME' since the value of 'CONFIG_COMMON_RUNTIME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (IS_ENABLED(CONFIG_COMMON_RUNTIME))
^
common/usb_pd_protocol.c:848:0: information: Skipping configuration 'CONFIG_CMD_PD;CONFIG_COMMON_RUNTIME;CONFIG_USB_PD_TRY_SRC' since the value of 'CONFIG_COMMON_RUNTIME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_COMMON_RUNTIME))
^
common/usb_pd_protocol.c:3335:0: information: Skipping configuration 'CONFIG_CMD_PD;CONFIG_COMMON_RUNTIME;CONFIG_USB_PD_TRY_SRC' since the value of 'CONFIG_COMMON_RUNTIME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (IS_ENABLED(CONFIG_COMMON_RUNTIME))
^
common/usb_pd_protocol.c:848:0: information: Skipping configuration 'CONFIG_CMD_PD;CONFIG_USB_PD_DUAL_ROLE;CONFIG_COMMON_RUNTIME' since the value of 'CONFIG_COMMON_RUNTIME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_COMMON_RUNTIME))
^
common/usb_pd_protocol.c:3335:0: information: Skipping configuration 'CONFIG_CMD_PD;CONFIG_USB_PD_DUAL_ROLE;CONFIG_COMMON_RUNTIME' since the value of 'CONFIG_COMMON_RUNTIME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (IS_ENABLED(CONFIG_COMMON_RUNTIME))
^
common/usb_pd_protocol.c:4013:0: information: Skipping configuration 'CONFIG_CMD_PD;CONFIG_USB_PD_DUAL_ROLE;CONFIG_COMMON_RUNTIME' since the value of 'CONFIG_COMMON_RUNTIME' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (IS_ENABLED(CONFIG_COMMON_RUNTIME))
^
common/usb_pd_tcpc.c:945:6: style: The scope of the variable 'evt' can be reduced. [variableScope]
 int evt;
     ^
common/usb_pd_tcpc.c:1374:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i, reg;
     ^
common/usb_pd_tcpc.c:1246:11: style: Local variable 'alert' shadows outer function [shadowFunction]
 uint16_t alert;
          ^
common/usb_pd_tcpc.c:823:13: note: Shadowed declaration
static void alert(int port, int mask)
            ^
common/usb_pd_tcpc.c:1246:11: note: Shadow variable
 uint16_t alert;
          ^
common/usb_pd_tcpc.c:1302:6: style: Local variable 'alert' shadows outer function [shadowFunction]
 int alert;
     ^
common/usb_pd_tcpc.c:823:13: note: Shadowed declaration
static void alert(int port, int mask)
            ^
common/usb_pd_tcpc.c:1302:6: note: Shadow variable
 int alert;
     ^
common/usb_pd_tcpc.c:642:12: style: Variable 'msg' is assigned a value that is never used. [unreadVariable]
 char *msg = "---";
           ^
common/usb_pd_tcpc.c:1420:7: style: The scope of the variable 'level' can be reduced. [variableScope]
  int level;
      ^
common/usb_pd_tcpc.c:264:11: style: struct member 'pd_port_controller::tx_payload' is never used. [unusedStructMember]
 uint32_t tx_payload[7];
          ^
common/usb_port_power_smart.c:145:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
common/usb_update.c:57:1: error: There is an unknown macro here somewhere. Configuration is required. If USB_STREAM_CONFIG_FULL is a macro then please configure it. [unknownMacro]
USB_STREAM_CONFIG_FULL(usb_update,
^
common/usb_update.c:276:0: information: Skipping configuration 'CONFIG_ROLLBACK;CONFIG_ROLLBACK_SECRET_SIZE;CONFIG_ROLLBACK_UPDATE' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (data_count < CONFIG_ROLLBACK_SECRET_SIZE) {
^
common/usb_update.c:95:0: information: Skipping configuration 'CONFIG_ROLLBACK;CONFIG_ROLLBACK_SECRET_SIZE;CONFIG_USB_PAIRING' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 BUILD_ASSERT(sizeof(tmp) >= CONFIG_ROLLBACK_SECRET_SIZE);
^
common/usb_update.c:120:0: information: Skipping configuration 'CONFIG_ROLLBACK;CONFIG_ROLLBACK_SECRET_SIZE;CONFIG_USB_PAIRING' since the value of 'CONFIG_ROLLBACK_SECRET_SIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 hmac_SHA256(tmp2, tmp, CONFIG_ROLLBACK_SECRET_SIZE,
^
common/usb_update.c:319:0: information: Skipping configuration 'CONFIG_TOUCHPAD;CONFIG_TOUCHPAD_HASH_FW;CONFIG_TOUCHPAD_VIRTUAL_OFF' since the value of 'CONFIG_TOUCHPAD_VIRTUAL_OFF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   tp.fw_address = CONFIG_TOUCHPAD_VIRTUAL_OFF;
^
common/usb_update.c:319:0: information: Skipping configuration 'CONFIG_TOUCHPAD;CONFIG_TOUCHPAD_VIRTUAL_OFF' since the value of 'CONFIG_TOUCHPAD_VIRTUAL_OFF' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   tp.fw_address = CONFIG_TOUCHPAD_VIRTUAL_OFF;
^
common/usbc/usb_pd_console.c:71:0: information: Skipping configuration 'CONFIG_USB_PD_DUAL_ROLE' since the value of 'CONFIG_USB_PD_DUAL_ROLE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_DUAL_ROLE)) {
^
common/usbc/usb_pd_console.c:41:0: information: Skipping configuration 'CONFIG_USB_PD_TRY_SRC' since the value of 'CONFIG_USB_PD_TRY_SRC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 } else if (IS_ENABLED(CONFIG_USB_PD_TRY_SRC) &&
^
common/usbc/usb_pe_drp_sm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 16 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/usbc/usb_pe_drp_sm.c:1367:14: style: The scope of the variable 'mode' can be reduced. [variableScope]
 const char *mode = "";
             ^
common/usbc/usb_pe_drp_sm.c:2714:10: style: The scope of the variable 'type' can be reduced. [variableScope]
 uint8_t type;
         ^
common/usbc/usb_pe_drp_sm.c:2715:10: style: The scope of the variable 'cnt' can be reduced. [variableScope]
 uint8_t cnt;
         ^
common/usbc/usb_pe_drp_sm.c:2716:10: style: The scope of the variable 'ext' can be reduced. [variableScope]
 uint8_t ext;
         ^
common/usbc/usb_pe_drp_sm.c:2796:10: style: The scope of the variable 'type' can be reduced. [variableScope]
 uint8_t type;
         ^
common/usbc/usb_pe_drp_sm.c:2797:10: style: The scope of the variable 'cnt' can be reduced. [variableScope]
 uint8_t cnt;
         ^
common/usbc/usb_pe_drp_sm.c:3357:6: style: The scope of the variable 'type' can be reduced. [variableScope]
 int type;
     ^
common/usbc/usb_pe_drp_sm.c:3358:6: style: The scope of the variable 'cnt' can be reduced. [variableScope]
 int cnt;
     ^
common/usbc/usb_pe_drp_sm.c:3359:6: style: The scope of the variable 'ext' can be reduced. [variableScope]
 int ext;
     ^
common/usbc/usb_pe_drp_sm.c:3813:6: style: The scope of the variable 'type' can be reduced. [variableScope]
 int type;
     ^
common/usbc/usb_pe_drp_sm.c:3814:6: style: The scope of the variable 'cnt' can be reduced. [variableScope]
 int cnt;
     ^
common/usbc/usb_pe_drp_sm.c:3815:6: style: The scope of the variable 'ext' can be reduced. [variableScope]
 int ext;
     ^
common/usbc/usb_pe_drp_sm.c:3955:6: style: The scope of the variable 'type' can be reduced. [variableScope]
 int type;
     ^
common/usbc/usb_pe_drp_sm.c:3956:6: style: The scope of the variable 'cnt' can be reduced. [variableScope]
 int cnt;
     ^
common/usbc/usb_pe_drp_sm.c:3957:6: style: The scope of the variable 'ext' can be reduced. [variableScope]
 int ext;
     ^
common/usbc/usb_pe_drp_sm.c:4023:6: style: The scope of the variable 'type' can be reduced. [variableScope]
 int type;
     ^
common/usbc/usb_pe_drp_sm.c:4024:6: style: The scope of the variable 'cnt' can be reduced. [variableScope]
 int cnt;
     ^
common/usbc/usb_pe_drp_sm.c:4025:6: style: The scope of the variable 'ext' can be reduced. [variableScope]
 int ext;
     ^
common/usbc/usb_pe_drp_sm.c:4299:6: style: The scope of the variable 'type' can be reduced. [variableScope]
 int type;
     ^
common/usbc/usb_pe_drp_sm.c:4300:6: style: The scope of the variable 'cnt' can be reduced. [variableScope]
 int cnt;
     ^
common/usbc/usb_pe_drp_sm.c:4301:6: style: The scope of the variable 'ext' can be reduced. [variableScope]
 int ext;
     ^
common/usbc/usb_pe_drp_sm.c:5925:6: style: The scope of the variable 'type' can be reduced. [variableScope]
 int type;
     ^
common/usbc/usb_pe_drp_sm.c:5926:6: style: The scope of the variable 'cnt' can be reduced. [variableScope]
 int cnt;
     ^
common/usbc/usb_pe_drp_sm.c:5927:6: style: The scope of the variable 'ext' can be reduced. [variableScope]
 int ext;
     ^
common/usbc/usb_pe_drp_sm.c:5928:6: style: The scope of the variable 'rev' can be reduced. [variableScope]
 int rev;
     ^
common/usbc/usb_pe_drp_sm.c:6052:6: style: The scope of the variable 'type' can be reduced. [variableScope]
 int type;
     ^
common/usbc/usb_pe_drp_sm.c:6053:6: style: The scope of the variable 'cnt' can be reduced. [variableScope]
 int cnt;
     ^
common/usbc/usb_pe_drp_sm.c:6054:6: style: The scope of the variable 'ext' can be reduced. [variableScope]
 int ext;
     ^
common/usbc/usb_pe_drp_sm.c:5469:19: style: Checking if unsigned expression 'usb4_payload' is less than zero. [unsignedLessThanZero]
 if (usb4_payload < 0) {
                  ^
common/usbc/usb_pe_drp_sm.c:702:11: style: struct member 'policy_engine::vconn_on_timer' is never used. [unusedStructMember]
 uint64_t vconn_on_timer;
          ^
common/usbc/usb_pe_drp_sm.c:720:11: style: struct member 'policy_engine::chunking_not_supported_timer' is never used. [unusedStructMember]
 uint64_t chunking_not_supported_timer;
          ^
common/usbc/usb_pe_drp_sm.c:1367:19: style: Variable 'mode' is assigned a value that is never used. [unreadVariable]
 const char *mode = "";
                  ^
common/usbc/usb_pe_drp_sm.c:1371:8: style: Variable 'mode' is assigned a value that is never used. [unreadVariable]
  mode = " FRS-MODE";
       ^
common/usbc/usb_pe_drp_sm.c:3534:0: information: Skipping configuration 'CONFIG_BATTERY;CONFIG_USB_PD_EXTENDED_MESSAGES' since the value of 'CONFIG_BATTERY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!IS_ENABLED(CONFIG_BATTERY))
^
common/usbc/usb_pe_drp_sm.c:3625:0: information: Skipping configuration 'CONFIG_BATTERY;CONFIG_USB_PD_EXTENDED_MESSAGES' since the value of 'CONFIG_BATTERY' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!IS_ENABLED(CONFIG_BATTERY))
^
common/usbc/usb_pe_drp_sm.c:1291:0: information: Skipping configuration 'CONFIG_BATTERY;CONFIG_USB_PD_EXTENDED_MESSAGES' since the value of 'CONFIG_USB_PD_EXTENDED_MESSAGES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_EXTENDED_MESSAGES) &&
^
common/usbc/usb_pe_drp_sm.c:2195:0: information: Skipping configuration 'CONFIG_BATTERY;CONFIG_USB_PD_EXTENDED_MESSAGES' since the value of 'CONFIG_USB_PD_EXTENDED_MESSAGES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   !IS_ENABLED(CONFIG_USB_PD_EXTENDED_MESSAGES) &&
^
common/usbc/usb_pe_drp_sm.c:2980:0: information: Skipping configuration 'CONFIG_CHARGE_MANAGER' since the value of 'CONFIG_CHARGE_MANAGER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_CHARGE_MANAGER))
^
common/usbc/usb_pe_drp_sm.c:3280:0: information: Skipping configuration 'CONFIG_CHARGE_MANAGER' since the value of 'CONFIG_CHARGE_MANAGER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_CHARGE_MANAGER))
^
common/usbc/usb_pe_drp_sm.c:2980:0: information: Skipping configuration 'CONFIG_CHARGE_MANAGER;CONFIG_USB_PD_ALT_MODE_DFP' since the value of 'CONFIG_CHARGE_MANAGER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_CHARGE_MANAGER))
^
common/usbc/usb_pe_drp_sm.c:3280:0: information: Skipping configuration 'CONFIG_CHARGE_MANAGER;CONFIG_USB_PD_ALT_MODE_DFP' since the value of 'CONFIG_CHARGE_MANAGER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_CHARGE_MANAGER))
^
common/usbc/usb_pe_drp_sm.c:548:0: information: Skipping configuration 'CONFIG_COMMON_RUNTIME;CONFIG_USB_PD_DEBUG_LEVEL' since the value of 'CONFIG_USB_PD_DEBUG_LEVEL' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const enum debug_level pe_debug_level = CONFIG_USB_PD_DEBUG_LEVEL;
^
common/usbc/usb_pe_drp_sm.c:1064:0: information: Skipping configuration 'CONFIG_USBC_VCONN' since the value of 'CONFIG_USBC_VCONN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USBC_VCONN)) {
^
common/usbc/usb_pe_drp_sm.c:1163:0: information: Skipping configuration 'CONFIG_USBC_VCONN' since the value of 'CONFIG_USBC_VCONN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   (IS_ENABLED(CONFIG_USBC_VCONN) &&
^
common/usbc/usb_pe_drp_sm.c:1296:0: information: Skipping configuration 'CONFIG_USBC_VCONN' since the value of 'CONFIG_USBC_VCONN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 } else if (IS_ENABLED(CONFIG_USBC_VCONN) &&
^
common/usbc/usb_pe_drp_sm.c:2325:0: information: Skipping configuration 'CONFIG_USBC_VCONN' since the value of 'CONFIG_USBC_VCONN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (IS_ENABLED(CONFIG_USBC_VCONN))
^
common/usbc/usb_pe_drp_sm.c:3115:0: information: Skipping configuration 'CONFIG_USBC_VCONN' since the value of 'CONFIG_USBC_VCONN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (IS_ENABLED(CONFIG_USBC_VCONN))
^
common/usbc/usb_pe_drp_sm.c:548:0: information: Skipping configuration 'CONFIG_USB_PD_DEBUG_LEVEL' since the value of 'CONFIG_USB_PD_DEBUG_LEVEL' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const enum debug_level pe_debug_level = CONFIG_USB_PD_DEBUG_LEVEL;
^
common/usbc/usb_pe_drp_sm.c:1291:0: information: Skipping configuration 'CONFIG_USB_PD_EXTENDED_MESSAGES' since the value of 'CONFIG_USB_PD_EXTENDED_MESSAGES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_EXTENDED_MESSAGES) &&
^
common/usbc/usb_pe_drp_sm.c:2195:0: information: Skipping configuration 'CONFIG_USB_PD_EXTENDED_MESSAGES' since the value of 'CONFIG_USB_PD_EXTENDED_MESSAGES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   !IS_ENABLED(CONFIG_USB_PD_EXTENDED_MESSAGES) &&
^
common/usbc/usb_prl_sm.c:233:11: style: struct member 'rx_chunked::chunk_sender_response_timer' is never used. [unusedStructMember]
 uint64_t chunk_sender_response_timer;
          ^
common/usbc/usb_prl_sm.c:243:11: style: struct member 'tx_chunked::chunk_sender_request_timer' is never used. [unusedStructMember]
 uint64_t chunk_sender_request_timer;
          ^
common/usbc/usb_prl_sm.c:299:11: style: struct member 'pd_message::chunk_number_expected' is never used. [unusedStructMember]
 uint32_t chunk_number_expected;
          ^
common/usbc/usb_prl_sm.c:121:0: information: Skipping configuration 'CONFIG_USB_PD_DEBUG_LEVEL' since the value of 'CONFIG_USB_PD_DEBUG_LEVEL' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const enum debug_level prl_debug_level = CONFIG_USB_PD_DEBUG_LEVEL;
^
common/usbc/usb_prl_sm.c:1042:0: information: Skipping configuration 'CONFIG_USB_PD_EXTENDED_MESSAGES' since the value of 'CONFIG_USB_PD_EXTENDED_MESSAGES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_USB_PD_EXTENDED_MESSAGES))
^
common/usbc/usb_prl_sm.c:1061:0: information: Skipping configuration 'CONFIG_USB_PD_EXTENDED_MESSAGES' since the value of 'CONFIG_USB_PD_EXTENDED_MESSAGES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_USB_PD_EXTENDED_MESSAGES)) {
^
common/usbc/usb_prl_sm.c:1297:0: information: Skipping configuration 'CONFIG_USB_PD_EXTENDED_MESSAGES' since the value of 'CONFIG_USB_PD_EXTENDED_MESSAGES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_EXTENDED_MESSAGES)) {
^
common/usbc/usb_prl_sm.c:1976:0: information: Skipping configuration 'CONFIG_USB_PD_EXTENDED_MESSAGES' since the value of 'CONFIG_USB_PD_EXTENDED_MESSAGES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_EXTENDED_MESSAGES) &&
^
common/usbc/usb_prl_sm.c:2030:0: information: Skipping configuration 'CONFIG_USB_PD_EXTENDED_MESSAGES' since the value of 'CONFIG_USB_PD_EXTENDED_MESSAGES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_USB_PD_EXTENDED_MESSAGES)) {
^
common/usbc/usb_prl_sm.c:2074:0: information: Skipping configuration 'CONFIG_USB_PD_EXTENDED_MESSAGES' since the value of 'CONFIG_USB_PD_EXTENDED_MESSAGES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_EXTENDED_MESSAGES)) {
^
common/usbc/usb_prl_sm.c:1042:0: information: Skipping configuration 'CONFIG_USB_PD_EXTENDED_MESSAGES;TEST_BUILD' since the value of 'CONFIG_USB_PD_EXTENDED_MESSAGES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_USB_PD_EXTENDED_MESSAGES))
^
common/usbc/usb_prl_sm.c:1061:0: information: Skipping configuration 'CONFIG_USB_PD_EXTENDED_MESSAGES;TEST_BUILD' since the value of 'CONFIG_USB_PD_EXTENDED_MESSAGES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_USB_PD_EXTENDED_MESSAGES)) {
^
common/usbc/usb_prl_sm.c:1297:0: information: Skipping configuration 'CONFIG_USB_PD_EXTENDED_MESSAGES;TEST_BUILD' since the value of 'CONFIG_USB_PD_EXTENDED_MESSAGES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_EXTENDED_MESSAGES)) {
^
common/usbc/usb_prl_sm.c:1976:0: information: Skipping configuration 'CONFIG_USB_PD_EXTENDED_MESSAGES;TEST_BUILD' since the value of 'CONFIG_USB_PD_EXTENDED_MESSAGES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_EXTENDED_MESSAGES) &&
^
common/usbc/usb_prl_sm.c:2030:0: information: Skipping configuration 'CONFIG_USB_PD_EXTENDED_MESSAGES;TEST_BUILD' since the value of 'CONFIG_USB_PD_EXTENDED_MESSAGES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_USB_PD_EXTENDED_MESSAGES)) {
^
common/usbc/usb_prl_sm.c:2074:0: information: Skipping configuration 'CONFIG_USB_PD_EXTENDED_MESSAGES;TEST_BUILD' since the value of 'CONFIG_USB_PD_EXTENDED_MESSAGES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_EXTENDED_MESSAGES)) {
^
common/usbc/usb_prl_sm.c:496:0: information: Skipping configuration 'CONFIG_USB_PD_REV30' since the value of 'CONFIG_USB_PD_REV30' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_REV30))
^
common/usbc/usb_prl_sm.c:755:0: information: Skipping configuration 'CONFIG_USB_PD_REV30' since the value of 'CONFIG_USB_PD_REV30' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_REV30))
^
common/usbc/usb_prl_sm.c:765:0: information: Skipping configuration 'CONFIG_USB_PD_REV30' since the value of 'CONFIG_USB_PD_REV30' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return IS_ENABLED(CONFIG_USB_PD_REV30) &&
^
common/usbc/usb_prl_sm.c:793:0: information: Skipping configuration 'CONFIG_USB_PD_REV30' since the value of 'CONFIG_USB_PD_REV30' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_REV30) && !pe_in_local_ams(port)) {
^
common/usbc/usb_prl_sm.c:807:0: information: Skipping configuration 'CONFIG_USB_PD_REV30' since the value of 'CONFIG_USB_PD_REV30' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_REV30) && is_sop_rev30(port) &&
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:1727:2: style:inconclusive: Found duplicate branches for 'if' and 'else'. [duplicateBranch]
 if (rv == EC_SUCCESS)
 ^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:1729:2: note: Found duplicate branches for 'if' and 'else'.
 else
 ^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:1727:2: note: Found duplicate branches for 'if' and 'else'.
 if (rv == EC_SUCCESS)
 ^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:1716:6: style: The scope of the variable 'task' can be reduced. [variableScope]
 int task, waiting_tasks;
     ^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:423:11: style: struct member 'type_c::low_power_exit_time' is never used. [unusedStructMember]
 uint64_t low_power_exit_time;
          ^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:427:6: style: struct member 'type_c::tasks_preventing_lpm' is never used. [unusedStructMember]
 int tasks_preventing_lpm;
     ^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:280:0: information: Skipping configuration 'CONFIG_COMMON_RUNTIME;CONFIG_USB_PD_DEBUG_LEVEL' since the value of 'CONFIG_USB_PD_DEBUG_LEVEL' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const enum debug_level tc_debug_level = CONFIG_USB_PD_DEBUG_LEVEL;
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:1498:0: information: Skipping configuration 'CONFIG_POWER_COMMON' since the value of 'CONFIG_POWER_COMMON' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_POWER_COMMON)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:1638:0: information: Skipping configuration 'CONFIG_POWER_COMMON' since the value of 'CONFIG_POWER_COMMON' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_POWER_COMMON) &&
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:1707:0: information: Skipping configuration 'CONFIG_USBC_VCONN' since the value of 'CONFIG_USBC_VCONN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USBC_VCONN))
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2730:0: information: Skipping configuration 'CONFIG_USBC_VCONN' since the value of 'CONFIG_USBC_VCONN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USBC_VCONN) &&
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2737:0: information: Skipping configuration 'CONFIG_USBC_VCONN' since the value of 'CONFIG_USBC_VCONN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_USBC_VCONN))
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:3368:0: information: Skipping configuration 'CONFIG_USBC_VCONN' since the value of 'CONFIG_USBC_VCONN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USBC_VCONN))
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:3383:0: information: Skipping configuration 'CONFIG_USBC_VCONN' since the value of 'CONFIG_USBC_VCONN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USBC_VCONN))
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:1707:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USBC_VCONN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USBC_VCONN))
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2687:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USBC_VCONN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_USBC_VCONN) &&
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2694:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USBC_VCONN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (IS_ENABLED(CONFIG_USBC_VCONN))
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2869:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USBC_VCONN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_USBC_VCONN) &&
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:3368:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USBC_VCONN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USBC_VCONN))
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:3383:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USBC_VCONN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USBC_VCONN))
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:518:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USB_PE_SM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PE_SM)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:526:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USB_PE_SM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PE_SM)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:540:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USB_PE_SM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PE_SM)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:553:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USB_PE_SM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PE_SM)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:562:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USB_PE_SM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PE_SM)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:1019:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USB_PE_SM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PE_SM))
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:1429:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USB_PE_SM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return IS_ENABLED(CONFIG_USB_PE_SM) && tc_get_pd_enabled(port);
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2006:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USB_PE_SM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PE_SM)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2021:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USB_PE_SM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PE_SM)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2113:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USB_PE_SM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_USB_PE_SM) &&
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2161:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USB_PE_SM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_USB_PE_SM) &&
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2240:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USB_PE_SM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PE_SM))
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2494:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USB_PE_SM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PE_SM)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2506:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USB_PE_SM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PE_SM)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2801:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USB_PE_SM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_USB_PE_SM))
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:3505:0: information: Skipping configuration 'CONFIG_USBC_VCONN;CONFIG_USB_PE_SM' since the value of 'CONFIG_USB_PE_SM' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_USB_PE_SM))
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:1508:0: information: Skipping configuration 'CONFIG_USB_PD_ALT_MODE;CONFIG_USB_PD_ALT_MODE_DFP' since the value of 'CONFIG_USB_PD_ALT_MODE_DFP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_USB_PD_ALT_MODE_DFP)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2114:0: information: Skipping configuration 'CONFIG_USB_PD_ALT_MODE;CONFIG_USB_PD_ALT_MODE_DFP' since the value of 'CONFIG_USB_PD_ALT_MODE_DFP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    IS_ENABLED(CONFIG_USB_PD_ALT_MODE_DFP)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2162:0: information: Skipping configuration 'CONFIG_USB_PD_ALT_MODE;CONFIG_USB_PD_ALT_MODE_DFP' since the value of 'CONFIG_USB_PD_ALT_MODE_DFP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    IS_ENABLED(CONFIG_USB_PD_ALT_MODE_DFP)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2802:0: information: Skipping configuration 'CONFIG_USB_PD_ALT_MODE;CONFIG_USB_PD_ALT_MODE_DFP' since the value of 'CONFIG_USB_PD_ALT_MODE_DFP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (IS_ENABLED(CONFIG_USB_PD_ALT_MODE_DFP)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:1508:0: information: Skipping configuration 'CONFIG_USB_PD_ALT_MODE_DFP' since the value of 'CONFIG_USB_PD_ALT_MODE_DFP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_USB_PD_ALT_MODE_DFP)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2114:0: information: Skipping configuration 'CONFIG_USB_PD_ALT_MODE_DFP' since the value of 'CONFIG_USB_PD_ALT_MODE_DFP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    IS_ENABLED(CONFIG_USB_PD_ALT_MODE_DFP)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2162:0: information: Skipping configuration 'CONFIG_USB_PD_ALT_MODE_DFP' since the value of 'CONFIG_USB_PD_ALT_MODE_DFP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    IS_ENABLED(CONFIG_USB_PD_ALT_MODE_DFP)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2802:0: information: Skipping configuration 'CONFIG_USB_PD_ALT_MODE_DFP' since the value of 'CONFIG_USB_PD_ALT_MODE_DFP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (IS_ENABLED(CONFIG_USB_PD_ALT_MODE_DFP)) {
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:280:0: information: Skipping configuration 'CONFIG_USB_PD_DEBUG_LEVEL' since the value of 'CONFIG_USB_PD_DEBUG_LEVEL' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const enum debug_level tc_debug_level = CONFIG_USB_PD_DEBUG_LEVEL;
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2037:0: information: Skipping configuration 'CONFIG_USB_PD_DUAL_ROLE_AUTO_TOGGLE' since the value of 'CONFIG_USB_PD_DUAL_ROLE_AUTO_TOGGLE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_DUAL_ROLE_AUTO_TOGGLE) &&
^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2544:0: information: Skipping configuration 'CONFIG_USB_PD_DUAL_ROLE_AUTO_TOGGLE' since the value of 'CONFIG_USB_PD_DUAL_ROLE_AUTO_TOGGLE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 else if (IS_ENABLED(CONFIG_USB_PD_DUAL_ROLE_AUTO_TOGGLE) &&
^
common/usbc/usb_tc_vpd_sm.c:44:10: style: struct member 'type_c::ct_cc' is never used. [unusedStructMember]
 uint8_t ct_cc;
         ^
common/util.c:147:15: error: The address of local variable 'nptr' is accessed at non-zero index. [objectIndex]
  *c = (*nptr)[1];
              ^
common/util.c:174:29: note: Address of variable taken here.
 base = find_base(base, &c, &nptr);
                            ^
common/util.c:174:29: note: Calling function 'find_base', 3rd argument '&nptr' value is lifetime=nptr
 base = find_base(base, &c, &nptr);
                            ^
common/util.c:147:15: note: The address of local variable 'nptr' is accessed at non-zero index.
  *c = (*nptr)[1];
              ^
common/util.c:147:15: error: The address of local variable 'nptr' is accessed at non-zero index. [objectIndex]
  *c = (*nptr)[1];
              ^
common/util.c:210:29: note: Address of variable taken here.
 base = find_base(base, &c, &nptr);
                            ^
common/util.c:210:29: note: Calling function 'find_base', 3rd argument '&nptr' value is lifetime=nptr
 base = find_base(base, &c, &nptr);
                            ^
common/util.c:147:15: note: The address of local variable 'nptr' is accessed at non-zero index.
  *c = (*nptr)[1];
              ^
common/util.c:128:12: style: Redundant initialization for 'c'. The initialized value is overwritten before it is read. [redundantInitialization]
 while ((c = *nptr++) && isspace(c))
           ^
common/util.c:126:9: note: c is initialized
 char c = '\0';
        ^
common/util.c:128:12: note: c is overwritten
 while ((c = *nptr++) && isspace(c))
           ^
common/util.c:164:12: style: Redundant initialization for 'c'. The initialized value is overwritten before it is read. [redundantInitialization]
 while ((c = *nptr++) && isspace(c))
           ^
common/util.c:162:8: note: c is initialized
 int c = '\0';
       ^
common/util.c:164:12: note: c is overwritten
 while ((c = *nptr++) && isspace(c))
           ^
common/util.c:199:12: style: Redundant initialization for 'c'. The initialized value is overwritten before it is read. [redundantInitialization]
 while ((c = *nptr++) && isspace(c))
           ^
common/util.c:197:8: note: c is initialized
 int c = '\0';
       ^
common/util.c:199:12: note: c is overwritten
 while ((c = *nptr++) && isspace(c))
           ^
common/util.c:70:6: style: The scope of the variable 'diff' can be reduced. [variableScope]
 int diff;
     ^
common/util.c:83:6: style: The scope of the variable 'diff' can be reduced. [variableScope]
 int diff;
     ^
common/util.c:255:6: style: The scope of the variable 'diff' can be reduced. [variableScope]
 int diff = 0;
     ^
common/util.c:255:11: style: Variable 'diff' is assigned a value that is never used. [unreadVariable]
 int diff = 0;
          ^
common/vboot/efs2.c:130:11: style: Local variable 'preamble' shadows outer variable [shadowVariable]
  uint8_t preamble[CR50_UART_RX_BUFFER_SIZE];
          ^
common/vboot/efs2.c:130:11: note: Shadowed declaration
  uint8_t preamble[CR50_UART_RX_BUFFER_SIZE];
          ^
common/vboot/efs2.c:130:11: note: Shadow variable
  uint8_t preamble[CR50_UART_RX_BUFFER_SIZE];
          ^
common/vboot/efs2.c:131:11: style: Local variable 'packet' shadows outer variable [shadowVariable]
  uint8_t packet[CR50_COMM_MAX_REQUEST_SIZE];
          ^
common/vboot/efs2.c:131:11: note: Shadowed declaration
  uint8_t packet[CR50_COMM_MAX_REQUEST_SIZE];
          ^
common/vboot/efs2.c:131:11: note: Shadow variable
  uint8_t packet[CR50_COMM_MAX_REQUEST_SIZE];
          ^
common/vboot/vboot.c:207:50: style: Condition 'has_matrix_keyboard()' is always false [knownConditionTrueFalse]
  if (battery_is_present() || has_matrix_keyboard()) {
                                                 ^
common/vboot_hash.c:28:10: style: struct member 'vboot_hash_tag::hash' is never used. [unusedStructMember]
 uint8_t hash[SHA256_DIGEST_SIZE];
         ^
common/wireless.c:56:0: information: Skipping configuration 'CONFIG_WLAN_POWER_ACTIVE_LOW;WIRELESS_GPIO_WLAN_POWER' since the value of 'WIRELESS_GPIO_WLAN_POWER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(WIRELESS_GPIO_WLAN_POWER,
^
common/wireless.c:86:0: information: Skipping configuration 'CONFIG_WLAN_POWER_ACTIVE_LOW;WIRELESS_GPIO_WLAN_POWER' since the value of 'WIRELESS_GPIO_WLAN_POWER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!gpio_get_level(WIRELESS_GPIO_WLAN_POWER))
^
common/wireless.c:47:0: information: Skipping configuration 'WIRELESS_GPIO_BLUETOOTH' since the value of 'WIRELESS_GPIO_BLUETOOTH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(WIRELESS_GPIO_BLUETOOTH,
^
common/wireless.c:78:0: information: Skipping configuration 'WIRELESS_GPIO_BLUETOOTH' since the value of 'WIRELESS_GPIO_BLUETOOTH' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (gpio_get_level(WIRELESS_GPIO_BLUETOOTH))
^
common/wireless.c:37:0: information: Skipping configuration 'WIRELESS_GPIO_WLAN' since the value of 'WIRELESS_GPIO_WLAN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(WIRELESS_GPIO_WLAN,
^
common/wireless.c:68:0: information: Skipping configuration 'WIRELESS_GPIO_WLAN' since the value of 'WIRELESS_GPIO_WLAN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (gpio_get_level(WIRELESS_GPIO_WLAN))
^
common/wireless.c:53:0: information: Skipping configuration 'WIRELESS_GPIO_WLAN_POWER' since the value of 'WIRELESS_GPIO_WLAN_POWER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(WIRELESS_GPIO_WLAN_POWER,
^
common/wireless.c:84:0: information: Skipping configuration 'WIRELESS_GPIO_WLAN_POWER' since the value of 'WIRELESS_GPIO_WLAN_POWER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (gpio_get_level(WIRELESS_GPIO_WLAN_POWER))
^
common/wireless.c:42:0: information: Skipping configuration 'WIRELESS_GPIO_WWAN' since the value of 'WIRELESS_GPIO_WWAN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(WIRELESS_GPIO_WWAN,
^
common/wireless.c:73:0: information: Skipping configuration 'WIRELESS_GPIO_WWAN' since the value of 'WIRELESS_GPIO_WWAN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (gpio_get_level(WIRELESS_GPIO_WWAN))
^
core/cortex-m/mpu.c:405:0: information: Skipping configuration 'CONFIG_CHIP_UNCACHED_REGION' since the value of 'CONFIG_CHIP_UNCACHED_REGION' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   CONCAT2(_region_start_, CONFIG_CHIP_UNCACHED_REGION),
^
core/cortex-m/mpu.c:406:0: information: Skipping configuration 'CONFIG_CHIP_UNCACHED_REGION' since the value of 'CONFIG_CHIP_UNCACHED_REGION' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   CONCAT2(_region_size_, CONFIG_CHIP_UNCACHED_REGION),
^
core/cortex-m/mpu.c:395:0: information: Skipping configuration 'CONFIG_ROLLBACK_MPU_PROTECT' since the value of 'CONFIG_ROLLBACK_MPU_PROTECT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_ROLLBACK_MPU_PROTECT)) {
^
core/cortex-m/panic.c:370:17: error: There is an unknown macro here somewhere. Configuration is required. If STRINGIFY is a macro then please configure it. [unknownMacro]
 __asm__("mov " STRINGIFY(SOFTWARE_PANIC_INFO_REG) ", %0\n"
                ^
core/cortex-m/task.c:406:6: style: The scope of the variable 'ret' can be reduced. [variableScope]
 int ret __attribute__((unused));
     ^
core/cortex-m/task.c:898:11: error: Uninitialized variable: value [uninitvar]
 } while (value);
          ^
core/cortex-m/task.c:876:6: note: Assuming condition is false
 if (!task_start_called())
     ^
core/cortex-m/task.c:898:11: note: Uninitialized variable: value
 } while (value);
          ^
core/cortex-m/task.c:158:0: information: Skipping configuration 'CONFIG_TASK_RESET_LIST' since the value of 'CONFIG_TASK_RESET_LIST' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 CONFIG_TASK_RESET_LIST
^
core/cortex-m0/__builtin.c:15:30: style: Opposite expression on both sides of '&'. [oppositeExpression]
 return 32 - __builtin_clz(x & -x);
                             ^
core/cortex-m0/panic.c:175:17: error: There is an unknown macro here somewhere. Configuration is required. If STRINGIFY is a macro then please configure it. [unknownMacro]
 __asm__("mov " STRINGIFY(SOFTWARE_PANIC_INFO_REG) ", %0\n"
                ^
core/cortex-m0/task.c:327:6: style: The scope of the variable 'ret' can be reduced. [variableScope]
 int ret __attribute__((unused));
     ^
core/host/stack_trace.c:39:8: style: The scope of the variable 'file' can be reduced. [variableScope]
 FILE *file;
       ^
core/host/task.c:328:9: style: The scope of the variable 'ok' can be reduced. [variableScope]
 int i, ok;
        ^
core/host/task.c:418:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
core/minute-ia/interrupts.c:266:11: style: The scope of the variable 'vec' can be reduced. [variableScope]
 uint32_t vec;
          ^
core/minute-ia/interrupts.c:345:11: style: The scope of the variable 'ioapic_redtbl' can be reduced. [variableScope]
 uint32_t ioapic_redtbl, vec;
          ^
core/minute-ia/interrupts.c:345:26: style: The scope of the variable 'vec' can be reduced. [variableScope]
 uint32_t ioapic_redtbl, vec;
                         ^
core/minute-ia/interrupts.c:346:6: style: The scope of the variable 'irq' can be reduced. [variableScope]
 int irq, max_irq_entries;
     ^
core/minute-ia/interrupts.c:346:11: style: The scope of the variable 'max_irq_entries' can be reduced. [variableScope]
 int irq, max_irq_entries;
          ^
core/minute-ia/interrupts.c:396:12: error: There is an unknown macro here somewhere. Configuration is required. If STRINGIFY is a macro then please configure it. [unknownMacro]
  "push $" STRINGIFY(CONFIG_IRQ_COUNT) "\n"
           ^
core/minute-ia/panic.c:96:11: style:inconclusive: Function 'exception_panic' argument 2 names different: declaration 'errorcode' definition 'error_code'. [funcArgNamesDifferent]
 uint32_t error_code,
          ^
core/minute-ia/mia_panic_internal.h:14:11: note: Function 'exception_panic' argument 2 names different: declaration 'errorcode' definition 'error_code'.
 uint32_t errorcode,
          ^
core/minute-ia/panic.c:96:11: note: Function 'exception_panic' argument 2 names different: declaration 'errorcode' definition 'error_code'.
 uint32_t error_code,
          ^
core/minute-ia/task.c:339:12: style: Redundant initialization for 'receiver'. The initialized value is overwritten before it is read. [redundantInitialization]
  receiver = current_task;
           ^
core/minute-ia/task.c:336:18: note: receiver is initialized
 task_ *receiver = __task_id_to_ptr(tskid);
                 ^
core/minute-ia/task.c:339:12: note: receiver is overwritten
  receiver = current_task;
           ^
core/minute-ia/atomic.h:32:21: style: The comparison '_old_value == old_value' is always true because '_old_value' and 'old_value' represent the same value. [knownConditionTrueFalse]
 return (_old_value == old_value);
                    ^
core/minute-ia/atomic.h:25:24: note: '_old_value' is assigned value 'old_value' here.
 uint32_t _old_value = old_value;
                       ^
core/minute-ia/atomic.h:32:21: note: The comparison '_old_value == old_value' is always true because '_old_value' and 'old_value' represent the same value.
 return (_old_value == old_value);
                    ^
core/minute-ia/task.c:488:14: style: The comparison 'old_val == 1' is always true. [knownConditionTrueFalse]
 if (old_val == 1)
             ^
core/minute-ia/task.c:480:21: note: 'old_val' is assigned value '1' here.
 uint32_t old_val = 1, val = 0;
                    ^
core/minute-ia/task.c:488:14: note: The comparison 'old_val == 1' is always true.
 if (old_val == 1)
             ^
core/minute-ia/task.c:310:6: style: The scope of the variable 'ret' can be reduced. [variableScope]
 int ret __attribute__((unused));
     ^
core/minute-ia/task.c:508:0: information: Skipping configuration 'CONFIG_FPU' since the value of 'CONFIG_FPU' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_FPU))
^
core/minute-ia/task.c:526:0: information: Skipping configuration 'CONFIG_FPU' since the value of 'CONFIG_FPU' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_FPU)) {
^
core/minute-ia/task.c:644:0: information: Skipping configuration 'CONFIG_FPU' since the value of 'CONFIG_FPU' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_FPU)) {
^
core/minute-ia/task.c:242:0: information: Skipping configuration 'CONFIG_TASK_PROFILING' since the value of 'CONFIG_TASK_PROFILING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_TASK_PROFILING) &&
^
core/minute-ia/task.c:256:0: information: Skipping configuration 'CONFIG_TASK_PROFILING' since the value of 'CONFIG_TASK_PROFILING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_TASK_PROFILING))
^
core/minute-ia/task.c:548:0: information: Skipping configuration 'CONFIG_TASK_PROFILING' since the value of 'CONFIG_TASK_PROFILING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_TASK_PROFILING)) {
^
core/minute-ia/task.c:681:0: information: Skipping configuration 'CONFIG_TASK_PROFILING' since the value of 'CONFIG_TASK_PROFILING' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_TASK_PROFILING))
^
core/nds32/__builtin.c:15:30: style: Opposite expression on both sides of '&'. [oppositeExpression]
 return 32 - __builtin_clz(x & -x);
                             ^
core/nds32/math.c:64:18: style: Same expression on both sides of '/'. [duplicateExpression]
  return (x - x) / (x - x);
                 ^
core/nds32/math.c:49:23: style: The scope of the variable 't' can be reduced. [variableScope]
 int32_t ix, s, q, m, t, i;
                      ^
core/nds32/math.c:49:26: style: The scope of the variable 'i' can be reduced. [variableScope]
 int32_t ix, s, q, m, t, i;
                         ^
core/nds32/panic.c:98:11: style: The scope of the variable 'warning_ipc' can be reduced. [variableScope]
 uint32_t warning_ipc;
          ^
core/nds32/task.c:396:6: style: The scope of the variable 'ret' can be reduced. [variableScope]
 int ret;
     ^
core/riscv-rv32i/__builtin.c:15:30: style: Opposite expression on both sides of '&'. [oppositeExpression]
 return 32 - __builtin_clz(x & -x);
                             ^
core/riscv-rv32i/panic.c:61:11: style: The scope of the variable 'warning_mepc' can be reduced. [variableScope]
 uint32_t warning_mepc;
          ^
core/riscv-rv32i/task.c:389:6: style: The scope of the variable 'ret' can be reduced. [variableScope]
 int ret;
     ^
driver/accel_bma2x2.c:130:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
 int i, ret;
        ^
driver/accel_bma2x2.c:149:14: style: The scope of the variable 'ret' can be reduced. [variableScope]
 int i, val, ret;
             ^
driver/accel_kionix.c:630:6: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
 ret = raw_read8(s->port, s->i2c_spi_addr_flags, reg, &val);
     ^
driver/accel_kionix.c:621:7: note: ret is assigned
  ret = raw_read8(s->port, s->i2c_spi_addr_flags, reg, &val);
      ^
driver/accel_kionix.c:630:6: note: ret is overwritten
 ret = raw_read8(s->port, s->i2c_spi_addr_flags, reg, &val);
     ^
driver/accel_kionix.c:447:6: style: The scope of the variable 'orientation' can be reduced. [variableScope]
 int orientation, raw_orientation;
     ^
driver/accel_lis2ds.c:29:1: error: There is an unknown macro here somewhere. Configuration is required. If STATIC_IF is a macro then please configure it. [unknownMacro]
STATIC_IF(CONFIG_ACCEL_FIFO) volatile uint32_t last_interrupt_timestamp;
^
driver/accel_lis2dw12.c:435:6: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
 ret = st_write_data_with_mask(s, LIS2DW12_ACC_ODR_ADDR,
     ^
driver/accel_lis2dw12.c:429:7: note: ret is assigned
  ret = set_power_mode(s, LIS2DW12_HIGH_PERF, 0);
      ^
driver/accel_lis2dw12.c:435:6: note: ret is overwritten
 ret = st_write_data_with_mask(s, LIS2DW12_ACC_ODR_ADDR,
     ^
driver/accel_lis2dw12.c:435:6: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
 ret = st_write_data_with_mask(s, LIS2DW12_ACC_ODR_ADDR,
     ^
driver/accel_lis2dw12.c:431:7: note: ret is assigned
  ret = set_power_mode(s, LIS2DW12_LOW_POWER,
      ^
driver/accel_lis2dw12.c:435:6: note: ret is overwritten
 ret = st_write_data_with_mask(s, LIS2DW12_ACC_ODR_ADDR,
     ^
driver/accel_lis2dw12.c:51:6: style: The scope of the variable 'ret' can be reduced. [variableScope]
 int ret, left, length, i;
     ^
driver/accel_lis2dw12.c:572:0: information: Skipping configuration 'CONFIG_ACCEL_INTERRUPTS;CONFIG_ACCEL_LIS2DW_AS_BASE' since the value of 'CONFIG_ACCEL_INTERRUPTS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_ACCEL_INTERRUPTS)) {
^
driver/accelgyro_bmi160.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
driver/accelgyro_bmi160.c:30:1: error: There is an unknown macro here somewhere. Configuration is required. If STATIC_IF is a macro then please configure it. [unknownMacro]
STATIC_IF(CONFIG_ACCEL_FIFO) volatile uint32_t last_interrupt_timestamp;
^
driver/accelgyro_bmi260.c:32:1: error: There is an unknown macro here somewhere. Configuration is required. If STATIC_IF is a macro then please configure it. [unknownMacro]
STATIC_IF(CONFIG_ACCEL_FIFO) volatile uint32_t last_interrupt_timestamp;
^
driver/accelgyro_bmi_common.c:375:27: error: The address of local variable 'bp' is accessed at non-zero index. [objectIndex]
  v[0] = ((int16_t)((input[1] << 8) | input[0]));
                          ^
driver/accelgyro_bmi_common.c:522:43: note: Address of variable taken here.
   if (bmi_decode_header(s, hdr, last_ts, &bp, ep))
                                          ^
driver/accelgyro_bmi_common.c:522:43: note: Calling function 'bmi_decode_header', 4th argument '&bp' value is lifetime=bp
   if (bmi_decode_header(s, hdr, last_ts, &bp, ep))
                                          ^
driver/accelgyro_bmi_common.c:397:18: note: Assuming condition is Assuming condition is false
  if (*bp + size > ep) {
                 ^
driver/accelgyro_bmi_common.c:411:25: note: Calling function 'bmi_normalize', 3rd argument '*bp' value is lifetime=bp
    bmi_normalize(s, v, *bp);
                        ^
driver/accelgyro_bmi_common.c:375:27: note: The address of local variable 'bp' is accessed at non-zero index.
  v[0] = ((int16_t)((input[1] << 8) | input[0]));
                          ^
driver/accelgyro_bmi_common.c:376:27: error: The address of local variable 'bp' is accessed at non-zero index. [objectIndex]
  v[1] = ((int16_t)((input[3] << 8) | input[2]));
                          ^
driver/accelgyro_bmi_common.c:522:43: note: Address of variable taken here.
   if (bmi_decode_header(s, hdr, last_ts, &bp, ep))
                                          ^
driver/accelgyro_bmi_common.c:522:43: note: Calling function 'bmi_decode_header', 4th argument '&bp' value is lifetime=bp
   if (bmi_decode_header(s, hdr, last_ts, &bp, ep))
                                          ^
driver/accelgyro_bmi_common.c:397:18: note: Assuming condition is Assuming condition is false
  if (*bp + size > ep) {
                 ^
driver/accelgyro_bmi_common.c:411:25: note: Calling function 'bmi_normalize', 3rd argument '*bp' value is lifetime=bp
    bmi_normalize(s, v, *bp);
                        ^
driver/accelgyro_bmi_common.c:376:27: note: The address of local variable 'bp' is accessed at non-zero index.
  v[1] = ((int16_t)((input[3] << 8) | input[2]));
                          ^
driver/accelgyro_bmi_common.c:377:27: error: The address of local variable 'bp' is accessed at non-zero index. [objectIndex]
  v[2] = ((int16_t)((input[5] << 8) | input[4]));
                          ^
driver/accelgyro_bmi_common.c:522:43: note: Address of variable taken here.
   if (bmi_decode_header(s, hdr, last_ts, &bp, ep))
                                          ^
driver/accelgyro_bmi_common.c:522:43: note: Calling function 'bmi_decode_header', 4th argument '&bp' value is lifetime=bp
   if (bmi_decode_header(s, hdr, last_ts, &bp, ep))
                                          ^
driver/accelgyro_bmi_common.c:397:18: note: Assuming condition is Assuming condition is false
  if (*bp + size > ep) {
                 ^
driver/accelgyro_bmi_common.c:411:25: note: Calling function 'bmi_normalize', 3rd argument '*bp' value is lifetime=bp
    bmi_normalize(s, v, *bp);
                        ^
driver/accelgyro_bmi_common.c:377:27: note: The address of local variable 'bp' is accessed at non-zero index.
  v[2] = ((int16_t)((input[5] << 8) | input[4]));
                          ^
driver/accelgyro_bmi_common.c:736:9: warning: Identical condition and return expression 'ret', return value is always 0 [identicalConditionAfterEarlyExit]
 return ret;
        ^
driver/accelgyro_bmi_common.c:728:6: note: If condition 'ret' is true, the function will return/exit
 if (ret)
     ^
driver/accelgyro_bmi_common.c:736:9: note: Returning identical expression 'ret'
 return ret;
        ^
driver/accelgyro_bmi_common.c:867:9: style: The scope of the variable 'val' can be reduced. [variableScope]
 int i, val;
        ^
driver/accelgyro_bmi_common.c:887:9: style: The scope of the variable 'val' can be reduced. [variableScope]
 int i, val;
        ^
driver/accelgyro_icm426xx.c:29:1: error: There is an unknown macro here somewhere. Configuration is required. If STATIC_IF is a macro then please configure it. [unknownMacro]
STATIC_IF(CONFIG_ACCEL_FIFO) volatile uint32_t last_interrupt_timestamp;
^
driver/accelgyro_icm_common.c:82:21: style: Variable 'addr' is assigned a value that is never used. [unreadVariable]
 const uint8_t addr = ICM426XX_REG_GET_ADDR(reg);
                    ^
driver/accelgyro_icm_common.c:114:21: style: Variable 'addr' is assigned a value that is never used. [unreadVariable]
 const uint8_t addr = ICM426XX_REG_GET_ADDR(reg);
                    ^
driver/accelgyro_icm_common.c:144:21: style: Variable 'addr' is assigned a value that is never used. [unreadVariable]
 const uint8_t addr = ICM426XX_REG_GET_ADDR(reg);
                    ^
driver/accelgyro_icm_common.c:181:21: style: Variable 'addr' is assigned a value that is never used. [unreadVariable]
 const uint8_t addr = ICM426XX_REG_GET_ADDR(reg);
                    ^
driver/accelgyro_icm_common.c:219:21: style: Variable 'addr' is assigned a value that is never used. [unreadVariable]
 const uint8_t addr = ICM426XX_REG_GET_ADDR(reg);
                    ^
driver/accelgyro_icm_common.c:246:21: style: Variable 'addr' is assigned a value that is never used. [unreadVariable]
 const uint8_t addr = ICM426XX_REG_GET_ADDR(reg);
                    ^
driver/accelgyro_lsm6dsm.c:295:51: style: The if condition is the same as the previous if condition [duplicateCondition]
 if (fifo_state->current.total_samples_in_pattern == 0) {
                                                  ^
driver/accelgyro_lsm6dsm.c:292:51: note: First condition
 if (fifo_state->current.total_samples_in_pattern == 0)
                                                  ^
driver/accelgyro_lsm6dsm.c:295:51: note: Second condition
 if (fifo_state->current.total_samples_in_pattern == 0) {
                                                  ^
driver/accelgyro_lsm6dsm.c:266:6: style: Variable 'err' is reassigned a value before the old one has been used. [redundantAssignment]
 err = st_raw_write8(accel->port, accel->i2c_spi_addr_flags,
     ^
driver/accelgyro_lsm6dsm.c:206:6: note: err is assigned
 err = st_raw_write8(accel->port, accel->i2c_spi_addr_flags,
     ^
driver/accelgyro_lsm6dsm.c:266:6: note: err is overwritten
 err = st_raw_write8(accel->port, accel->i2c_spi_addr_flags,
     ^
driver/accelgyro_lsm6dsm.c:379:6: style: The scope of the variable 'err' can be reduced. [variableScope]
 int err, left, length;
     ^
driver/accelgyro_lsm6dsm.c:725:28: style: Variable 'reg_val' is assigned a value that is never used. [unreadVariable]
 uint8_t ctrl_reg, reg_val = 0;
                           ^
driver/accelgyro_lsm6dso.c:24:1: error: There is an unknown macro here somewhere. Configuration is required. If STATIC_IF is a macro then please configure it. [unknownMacro]
STATIC_IF(CONFIG_ACCEL_FIFO) volatile uint32_t last_interrupt_timestamp;
^
driver/als_si114x.c:296:7: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
  ret = EC_RES_IN_PROGRESS;
      ^
driver/als_si114x.c:290:7: note: ret is assigned
  ret = raw_write8(s->port, s->i2c_spi_addr_flags,
      ^
driver/als_si114x.c:296:7: note: ret is overwritten
  ret = EC_RES_IN_PROGRESS;
      ^
driver/als_tcs3400.c:21:1: error: There is an unknown macro here somewhere. Configuration is required. If STATIC_IF is a macro then please configure it. [unknownMacro]
STATIC_IF(CONFIG_ACCEL_FIFO) volatile uint32_t last_interrupt_timestamp;
^
driver/battery/bq27541.c:336:6: style: The scope of the variable 'v' can be reduced. [variableScope]
 int v;
     ^
driver/battery/bq27541.c:296:11: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int val, rv;
          ^
driver/battery/bq27621_g1.c:390:9: warning: Identical condition and return expression 'rv', return value is always 0 [identicalConditionAfterEarlyExit]
 return rv;
        ^
driver/battery/bq27621_g1.c:385:6: note: If condition 'rv' is true, the function will return/exit
 if (rv)
     ^
driver/battery/bq27621_g1.c:390:9: note: Returning identical expression 'rv'
 return rv;
        ^
driver/battery/bq27621_g1.c:237:5: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
 rv = bq27621_enter_config_update();
    ^
driver/battery/bq27621_g1.c:231:5: note: rv is assigned
 rv |= bq27621_read(REG_CTRL, &status);
    ^
driver/battery/bq27621_g1.c:237:5: note: rv is overwritten
 rv = bq27621_enter_config_update();
    ^
driver/battery/bq27621_g1.c:260:5: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
 rv = bq27621_write8(REGISTERS_BLOCK_OP_CONFIG_B, param);
    ^
driver/battery/bq27621_g1.c:255:5: note: rv is assigned
 rv = bq27621_read8(REGISTERS_BLOCK_OP_CONFIG_B, &param);
    ^
driver/battery/bq27621_g1.c:260:5: note: rv is overwritten
 rv = bq27621_write8(REGISTERS_BLOCK_OP_CONFIG_B, param);
    ^
driver/battery/bq27621_g1.c:265:5: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
 rv = bq27621_write8(REG_BLOCK_DATA_CHECKSUM, checksum);
    ^
driver/battery/bq27621_g1.c:260:5: note: rv is assigned
 rv = bq27621_write8(REGISTERS_BLOCK_OP_CONFIG_B, param);
    ^
driver/battery/bq27621_g1.c:265:5: note: rv is overwritten
 rv = bq27621_write8(REG_BLOCK_DATA_CHECKSUM, checksum);
    ^
driver/battery/bq27621_g1.c:405:6: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
  rv = bq27621_write(REG_CTRL, CONTROL_RESET);
     ^
driver/battery/bq27621_g1.c:406:7: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
   rv |= bq27621_init();
      ^
driver/battery/bq27621_g1.c:482:5: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
 rv = bq27621_write(REG_CTRL, CONTROL_CHEM_ID);
    ^
driver/battery/bq27621_g1.c:483:5: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
 rv |= bq27621_read(REG_CTRL, &param);
    ^
driver/battery/bq4050.c:24:9: style: The scope of the variable 'res' can be reduced. [variableScope]
 int i, res, cell_voltage;
        ^
driver/battery/max17055.c:292:27: style: Condition 'fake_state_of_charge<0' is always true [knownConditionTrueFalse]
     fake_state_of_charge < 0)
                          ^
driver/battery/max17055.c:295:50: style: Condition 'fake_state_of_charge>=0' is always false [knownConditionTrueFalse]
 batt_new.state_of_charge = fake_state_of_charge >= 0 ?
                                                 ^
driver/battery/smart.c:349:27: style: Condition 'fake_state_of_charge<0' is always true [knownConditionTrueFalse]
 if (fake_state_of_charge < 0)
                          ^
driver/battery/smart.c:369:24: style: Condition 'fake_temperature<0' is always true [knownConditionTrueFalse]
   && fake_temperature < 0)
                       ^
driver/battery/smart.c:373:23: style: Condition 'fake_temperature>=0' is always false [knownConditionTrueFalse]
 if (fake_temperature >= 0)
                      ^
driver/battery/smart.c:377:30: style: Condition 'fake_state_of_charge<0' is always true [knownConditionTrueFalse]
     && fake_state_of_charge < 0)
                             ^
driver/battery/smart.c:443:0: information: Skipping configuration 'CONFIG_BATTERY_DEAD_UNTIL_VALUE;CONFIG_BATTERY_REQUESTS_NIL_WHEN_DEAD' since the value of 'CONFIG_BATTERY_DEAD_UNTIL_VALUE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   batt_new.state_of_charge < CONFIG_BATTERY_DEAD_UNTIL_VALUE)))
^
driver/battery/smart.c:463:0: information: Skipping configuration 'CONFIG_CMD_BATTFAKE' since the value of 'CONFIG_CMD_BATTFAKE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_CMD_BATTFAKE))
^
driver/battery/smart.c:665:7: style: The scope of the variable 'chemistry' can be reduced. [variableScope]
 char chemistry[sizeof(CONFIG_BATTERY_DEVICE_CHEMISTRY) + 1];
      ^
driver/battery/smart.c:666:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
driver/bc12/max14637.c:157:63: warning: Either the condition 'port>=0' is redundant or the array 'max14637_config[0]' is accessed at index -1, which is out of bounds. [negativeIndex]
 const struct max14637_config_t * const cfg = &max14637_config[port];
                                                              ^
driver/bc12/max14637.c:159:14: note: Assuming that condition 'port>=0' is not redundant
 ASSERT(port >= 0 && port < CONFIG_USB_PD_PORT_MAX_COUNT);
             ^
driver/bc12/max14637.c:157:63: note: Negative array index
 const struct max14637_config_t * const cfg = &max14637_config[port];
                                                              ^
driver/bc12/max14637.c:60:12: style: Boolean result is used in bitwise operation. Clarify expression with parentheses. [clarifyCondition]
  !!enable ^ !!(cfg->flags & MAX14637_FLAGS_ENABLE_ACTIVE_LOW));
           ^
driver/bc12/max14637.c:156:11: style: The scope of the variable 'evt' can be reduced. [variableScope]
 uint32_t evt;
          ^
driver/bc12/max14637.c:43:44: style: Boolean result is used in bitwise operation. Clarify expression with parentheses. [clarifyCondition]
 return !!gpio_get_level(cfg->chg_det_pin) ^
                                           ^
driver/bc12/pi3usb9201.c:226:0: information: Skipping configuration 'CONFIG_POWER_PP5000_CONTROL;HAS_TASK_CHIPSET' since the value of 'CONFIG_POWER_PP5000_CONTROL' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_POWER_PP5000_CONTROL) &&
^
driver/bc12/pi3usb9201.c:227:0: information: Skipping configuration 'CONFIG_POWER_PP5000_CONTROL;HAS_TASK_CHIPSET' since the value of 'HAS_TASK_CHIPSET' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     IS_ENABLED(HAS_TASK_CHIPSET) &&
^
driver/charger/bd9995x.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
driver/charger/bd9995x.c:830:7: style: The scope of the variable 'rv' can be reduced. [variableScope]
  int rv;
      ^
driver/charger/bq24773.c:101:6: error: Uninitialized variable: rv [uninitvar]
 if (rv)
     ^
driver/charger/bq24773.c:102:10: error: Uninitialized variable: rv [uninitvar]
  return rv;
         ^
driver/charger/bq24773.c:94:6: style: Unused variable: reg [unusedVariable]
 int reg;
     ^
driver/charger/isl923x.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
driver/charger/isl923x.c:317:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
driver/charger/isl9241.c:212:37: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  mode & CHARGE_FLAG_INHIBIT_CHARGE ?
                                    ^
driver/charger/rt946x.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 19 configurations. Use --force to check all configurations. [toomanyconfigs]

^
driver/charger/rt946x.c:349:0: information: Skipping configuration 'CONFIG_CHARGER_MT6370' since the value of 'CONFIG_CHARGER_MT6370' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!IS_ENABLED(CONFIG_CHARGER_MT6370))
^
driver/charger/rt946x.c:845:0: information: Skipping configuration 'CONFIG_CHARGER_MT6370' since the value of 'CONFIG_CHARGER_MT6370' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_CHARGER_MT6370))
^
driver/charger/rt946x.c:863:0: information: Skipping configuration 'CONFIG_CHARGER_MT6370' since the value of 'CONFIG_CHARGER_MT6370' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     IS_ENABLED(CONFIG_CHARGER_MT6370)) {
^
driver/charger/rt946x.c:349:0: information: Skipping configuration 'CONFIG_CHARGER_MT6370;CONFIG_CHARGER_MT6370' since the value of 'CONFIG_CHARGER_MT6370' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!IS_ENABLED(CONFIG_CHARGER_MT6370))
^
driver/charger/rt946x.c:845:0: information: Skipping configuration 'CONFIG_CHARGER_MT6370;CONFIG_CHARGER_MT6370' since the value of 'CONFIG_CHARGER_MT6370' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_CHARGER_MT6370))
^
driver/charger/rt946x.c:863:0: information: Skipping configuration 'CONFIG_CHARGER_MT6370;CONFIG_CHARGER_MT6370' since the value of 'CONFIG_CHARGER_MT6370' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     IS_ENABLED(CONFIG_CHARGER_MT6370)) {
^
driver/charger/rt946x.c:349:0: information: Skipping configuration 'CONFIG_CHARGER_MT6370;CONFIG_CHARGER_RT9467' since the value of 'CONFIG_CHARGER_MT6370' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!IS_ENABLED(CONFIG_CHARGER_MT6370))
^
driver/charger/rt946x.c:845:0: information: Skipping configuration 'CONFIG_CHARGER_MT6370;CONFIG_CHARGER_RT9467' since the value of 'CONFIG_CHARGER_MT6370' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_CHARGER_MT6370))
^
driver/charger/rt946x.c:863:0: information: Skipping configuration 'CONFIG_CHARGER_MT6370;CONFIG_CHARGER_RT9467' since the value of 'CONFIG_CHARGER_MT6370' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     IS_ENABLED(CONFIG_CHARGER_MT6370)) {
^
driver/charger/rt946x.c:349:0: information: Skipping configuration 'CONFIG_CHARGER_MT6370;CONFIG_CHARGER_RT9467;CONFIG_CHARGER_MT6370_BC12_GPIO' since the value of 'CONFIG_CHARGER_MT6370' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!IS_ENABLED(CONFIG_CHARGER_MT6370))
^
driver/charger/rt946x.c:845:0: information: Skipping configuration 'CONFIG_CHARGER_MT6370;CONFIG_CHARGER_RT9467;CONFIG_CHARGER_MT6370_BC12_GPIO' since the value of 'CONFIG_CHARGER_MT6370' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_CHARGER_MT6370))
^
driver/charger/rt946x.c:863:0: information: Skipping configuration 'CONFIG_CHARGER_MT6370;CONFIG_CHARGER_RT9467;CONFIG_CHARGER_MT6370_BC12_GPIO' since the value of 'CONFIG_CHARGER_MT6370' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     IS_ENABLED(CONFIG_CHARGER_MT6370)) {
^
driver/charger/rt946x.c:349:0: information: Skipping configuration 'CONFIG_CHARGER_MT6370;HAS_TASK_USB_CHG' since the value of 'CONFIG_CHARGER_MT6370' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!IS_ENABLED(CONFIG_CHARGER_MT6370))
^
driver/charger/rt946x.c:845:0: information: Skipping configuration 'CONFIG_CHARGER_MT6370;HAS_TASK_USB_CHG' since the value of 'CONFIG_CHARGER_MT6370' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_CHARGER_MT6370))
^
driver/charger/rt946x.c:863:0: information: Skipping configuration 'CONFIG_CHARGER_MT6370;HAS_TASK_USB_CHG' since the value of 'CONFIG_CHARGER_MT6370' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     IS_ENABLED(CONFIG_CHARGER_MT6370)) {
^
driver/charger/rt946x.c:1540:0: information: Skipping configuration 'CONFIG_CHARGER_MT6370;HAS_TASK_USB_CHG' since the value of 'CONFIG_CHARGER_MT6370' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (IS_ENABLED(CONFIG_CHARGER_MT6370)) {
^
driver/charger/rt946x.c:862:0: information: Skipping configuration 'CONFIG_CHARGER_RT9466' since the value of 'CONFIG_CHARGER_RT9466' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_CHARGER_RT9466) ||
^
driver/charger/rt946x.c:862:0: information: Skipping configuration 'CONFIG_CHARGER_RT9466;CONFIG_CHARGER_RT9467' since the value of 'CONFIG_CHARGER_RT9466' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_CHARGER_RT9466) ||
^
driver/charger/rt946x.c:862:0: information: Skipping configuration 'CONFIG_CHARGER_RT9466;CONFIG_CHARGER_RT9467;CONFIG_CHARGER_RT9467' since the value of 'CONFIG_CHARGER_RT9466' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_CHARGER_RT9466) ||
^
driver/charger/rt946x.c:862:0: information: Skipping configuration 'CONFIG_CHARGER_RT9466;CONFIG_CHARGER_RT9467;HAS_TASK_USB_CHG' since the value of 'CONFIG_CHARGER_RT9466' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_CHARGER_RT9466) ||
^
driver/charger/rt946x.c:447:2: style:inconclusive: Consecutive return, break, continue, goto or throw statements are unnecessary. [duplicateBreak]
 return 0;
 ^
driver/charger/sm5803.c:147:5: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
 rv = i2c_update8(chg_chips[chgnum].i2c_port,
    ^
driver/charger/sm5803.c:140:7: note: rv is assigned
   rv = chg_write8(chgnum, 0x5C, 0x7A);
      ^
driver/charger/sm5803.c:147:5: note: rv is overwritten
 rv = i2c_update8(chg_chips[chgnum].i2c_port,
    ^
driver/charger/sm5803.c:286:7: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
   rv = sm5803_flow2_update(chgnum,
      ^
driver/charger/sm5803.c:284:8: note: rv is assigned
    rv |= main_write8(chgnum, 0x1F, 0);
       ^
driver/charger/sm5803.c:286:7: note: rv is overwritten
   rv = sm5803_flow2_update(chgnum,
      ^
driver/charger/sm5803.c:300:8: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
    rv = chg_read8(CHARGER_PRIMARY,
       ^
driver/charger/sm5803.c:294:8: note: rv is assigned
    rv |= main_write8(CHARGER_PRIMARY, 0x1F, 0x0);
       ^
driver/charger/sm5803.c:300:8: note: rv is overwritten
    rv = chg_read8(CHARGER_PRIMARY,
       ^
driver/charger/sm5803.c:322:7: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
   rv = chg_read8(CHARGER_PRIMARY, SM5803_REG_FLOW3,
      ^
driver/charger/sm5803.c:318:7: note: rv is assigned
   rv |= sm5803_flow1_update(CHARGER_PRIMARY,
      ^
driver/charger/sm5803.c:322:7: note: rv is overwritten
   rv = chg_read8(CHARGER_PRIMARY, SM5803_REG_FLOW3,
      ^
driver/charger/sm5803.c:877:5: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
 rv = main_read8(chgnum, SM5803_REG_INT2_REQ, &int_reg);
    ^
driver/charger/sm5803.c:863:6: note: rv is assigned
  rv = main_read8(chgnum, SM5803_REG_STATUS1, &meas_reg);
     ^
driver/charger/sm5803.c:877:5: note: rv is overwritten
 rv = main_read8(chgnum, SM5803_REG_INT2_REQ, &int_reg);
    ^
driver/charger/sm5803.c:908:5: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
 rv = main_read8(chgnum, SM5803_REG_INT3_REQ, &int_reg);
    ^
driver/charger/sm5803.c:890:6: note: rv is assigned
  rv = meas_read8(chgnum, SM5803_REG_TINT_MEAS_MSB, &meas_reg);
     ^
driver/charger/sm5803.c:908:5: note: rv is overwritten
 rv = main_read8(chgnum, SM5803_REG_INT3_REQ, &int_reg);
    ^
driver/charger/sm5803.c:1243:5: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
 rv = chg_write8(chgnum, SM5803_REG_VPWR_MSB, (reg >> 3));
    ^
driver/charger/sm5803.c:1240:5: note: rv is assigned
 rv |= chg_write8(chgnum, SM5803_REG_DISCH_CONF5, reg);
    ^
driver/charger/sm5803.c:1243:5: note: rv is overwritten
 rv = chg_write8(chgnum, SM5803_REG_VPWR_MSB, (reg >> 3));
    ^
driver/charger/sm5803.c:1271:6: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
  rv = chg_read8(chgnum, SM5803_REG_DISCH_CONF5, &reg);
     ^
driver/charger/sm5803.c:1264:6: note: rv is assigned
  rv = chg_write8(chgnum, SM5803_REG_ANA_EN1, reg);
     ^
driver/charger/sm5803.c:1271:6: note: rv is overwritten
  rv = chg_read8(chgnum, SM5803_REG_DISCH_CONF5, &reg);
     ^
driver/charger/sm5803.c:346:6: style: The scope of the variable 'pre_term' can be reduced. [variableScope]
 int pre_term;
     ^
driver/charger/sm5803.c:347:6: style: The scope of the variable 'cells' can be reduced. [variableScope]
 int cells;
     ^
driver/charger/sm5803.c:850:14: style: The scope of the variable 'throttled' can be reduced. [variableScope]
 static bool throttled;
             ^
driver/charger/sm5803.c:852:6: style: The scope of the variable 'act_chg' can be reduced. [variableScope]
 int act_chg, val;
     ^
driver/charger/sm5803.c:1077:13: style: The scope of the variable 'attempt_bfet_enable' can be reduced. [variableScope]
 static int attempt_bfet_enable;
            ^
driver/charger/sm5803.c:117:15: style: Local variable 'dev_id' shadows outer variable [shadowVariable]
 int reg, rv, dev_id;
              ^
driver/charger/sm5803.c:32:12: note: Shadowed declaration
static int dev_id = UNKNOWN_DEV_ID;
           ^
driver/charger/sm5803.c:117:15: note: Shadow variable
 int reg, rv, dev_id;
              ^
driver/charger/sm5803.c:1190:10: style: Variable 'control' is assigned a value that is never used. [unreadVariable]
 control = reg;
         ^
driver/charger/sm5803.c:1193:10: style: Variable 'control' is assigned a value that is never used. [unreadVariable]
 control |= reg << 8;
         ^
driver/charger/sm5803.c:1196:10: style: Variable 'control' is assigned a value that is never used. [unreadVariable]
 control |= reg << 16;
         ^
driver/charger/sy21612.c:193:14: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int i, val, rv;
             ^
driver/fingerprint/fpc/libfp/fpc_sensor_pal.c:39:57: style:inconclusive: Function 'fpc_pal_spi_writeread' argument 2 names different: declaration 'tx_buffer' definition 'tx_buf'. [funcArgNamesDifferent]
int fpc_pal_spi_writeread(fpc_device_t device, uint8_t *tx_buf, uint8_t *rx_buf,
                                                        ^
driver/fingerprint/fpc/libfp/fpc_sensor_pal.h:48:57: note: Function 'fpc_pal_spi_writeread' argument 2 names different: declaration 'tx_buffer' definition 'tx_buf'.
int fpc_pal_spi_writeread(fpc_device_t device, uint8_t *tx_buffer,
                                                        ^
driver/fingerprint/fpc/libfp/fpc_sensor_pal.c:39:57: note: Function 'fpc_pal_spi_writeread' argument 2 names different: declaration 'tx_buffer' definition 'tx_buf'.
int fpc_pal_spi_writeread(fpc_device_t device, uint8_t *tx_buf, uint8_t *rx_buf,
                                                        ^
driver/fingerprint/fpc/libfp/fpc_sensor_pal.c:39:74: style:inconclusive: Function 'fpc_pal_spi_writeread' argument 3 names different: declaration 'rx_buffer' definition 'rx_buf'. [funcArgNamesDifferent]
int fpc_pal_spi_writeread(fpc_device_t device, uint8_t *tx_buf, uint8_t *rx_buf,
                                                                         ^
driver/fingerprint/fpc/libfp/fpc_sensor_pal.h:49:15: note: Function 'fpc_pal_spi_writeread' argument 3 names different: declaration 'rx_buffer' definition 'rx_buf'.
     uint8_t *rx_buffer, uint32_t size);
              ^
driver/fingerprint/fpc/libfp/fpc_sensor_pal.c:39:74: note: Function 'fpc_pal_spi_writeread' argument 3 names different: declaration 'rx_buffer' definition 'rx_buf'.
int fpc_pal_spi_writeread(fpc_device_t device, uint8_t *tx_buf, uint8_t *rx_buf,
                                                                         ^
driver/ioexpander/it8801.c:295:39: style: Boolean result is used in bitwise operation. Clarify expression with parentheses. [clarifyCondition]
 if (!!(it8801_gpio_sov[port] & mask) ^ value) {
                                      ^
driver/ioexpander/it8801.c:47:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
 int i, ret, val;
        ^
driver/led/ds2413.c:166:0: error: #endif without #if [preprocessorErrorDirective]
#endif
^
driver/led/lm3509.c:39:30: error: Array 'lm3509_brightness[32]' accessed at index 62, which is out of bounds. [arrayIndexOutOfBounds]
  int low = lm3509_brightness[i - 1];
                             ^
driver/led/lm3509.c:40:31: error: Array 'lm3509_brightness[32]' accessed at index 63, which is out of bounds. [arrayIndexOutOfBounds]
  int high = lm3509_brightness[i];
                              ^
driver/mag_bmm150.c:95:6: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
 ret = raw_mag_read8(s->port, s->i2c_spi_addr_flags,
     ^
driver/mag_bmm150.c:91:6: note: ret is assigned
 ret = raw_mag_write8(s->port, s->i2c_spi_addr_flags,
     ^
driver/mag_bmm150.c:95:6: note: ret is overwritten
 ret = raw_mag_read8(s->port, s->i2c_spi_addr_flags,
     ^
driver/mag_bmm150.c:141:6: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
 ret = raw_mag_read8(s->port, s->i2c_spi_addr_flags,
     ^
driver/mag_bmm150.c:139:6: note: ret is assigned
 ret = raw_mag_read8(s->port, s->i2c_spi_addr_flags,
     ^
driver/mag_bmm150.c:141:6: note: ret is overwritten
 ret = raw_mag_read8(s->port, s->i2c_spi_addr_flags,
     ^
driver/mag_bmm150.c:146:6: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
 ret = raw_mag_write8(s->port, s->i2c_spi_addr_flags,
     ^
driver/mag_bmm150.c:141:6: note: ret is assigned
 ret = raw_mag_read8(s->port, s->i2c_spi_addr_flags,
     ^
driver/mag_bmm150.c:146:6: note: ret is overwritten
 ret = raw_mag_write8(s->port, s->i2c_spi_addr_flags,
     ^
driver/mcdp28x0.c:166:9: warning: Identical condition and return expression 'rv', return value is always 0 [identicalConditionAfterEarlyExit]
 return rv;
        ^
driver/mcdp28x0.c:160:6: note: If condition 'rv' is true, the function will return/exit
 if (rv)
     ^
driver/mcdp28x0.c:166:9: note: Returning identical expression 'rv'
 return rv;
        ^
driver/mcdp28x0.c:196:9: warning: Identical condition and return expression 'rv', return value is always 0 [identicalConditionAfterEarlyExit]
 return rv;
        ^
driver/mcdp28x0.c:188:6: note: If condition 'rv' is true, the function will return/exit
 if (rv)
     ^
driver/mcdp28x0.c:196:9: note: Returning identical expression 'rv'
 return rv;
        ^
driver/ppc/nx20p348x.c:142:0: information: Skipping configuration 'CONFIG_USBC_PPC_NX20P3481' since the value of 'CONFIG_USBC_PPC_NX20P3481' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USBC_PPC_NX20P3481))
^
driver/ppc/nx20p348x.c:178:0: information: Skipping configuration 'CONFIG_USBC_PPC_NX20P3481' since the value of 'CONFIG_USBC_PPC_NX20P3481' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USBC_PPC_NX20P3481))
^
driver/ppc/nx20p348x.c:204:0: information: Skipping configuration 'CONFIG_USBC_PPC_NX20P3481' since the value of 'CONFIG_USBC_PPC_NX20P3481' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USBC_PPC_NX20P3481)) {
^
driver/ppc/nx20p348x.c:142:0: information: Skipping configuration 'CONFIG_USBC_PPC_NX20P3481;CONFIG_USBC_PPC_NX20P3483' since the value of 'CONFIG_USBC_PPC_NX20P3481' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USBC_PPC_NX20P3481))
^
driver/ppc/nx20p348x.c:178:0: information: Skipping configuration 'CONFIG_USBC_PPC_NX20P3481;CONFIG_USBC_PPC_NX20P3483' since the value of 'CONFIG_USBC_PPC_NX20P3481' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USBC_PPC_NX20P3481))
^
driver/ppc/nx20p348x.c:204:0: information: Skipping configuration 'CONFIG_USBC_PPC_NX20P3481;CONFIG_USBC_PPC_NX20P3483' since the value of 'CONFIG_USBC_PPC_NX20P3481' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USBC_PPC_NX20P3481)) {
^
driver/ppc/nx20p348x.c:144:0: information: Skipping configuration 'CONFIG_USBC_PPC_NX20P3481;CONFIG_USBC_PPC_NX20P3483' since the value of 'CONFIG_USBC_PPC_NX20P3483' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 else if (IS_ENABLED(CONFIG_USBC_PPC_NX20P3483))
^
driver/ppc/nx20p348x.c:180:0: information: Skipping configuration 'CONFIG_USBC_PPC_NX20P3481;CONFIG_USBC_PPC_NX20P3483' since the value of 'CONFIG_USBC_PPC_NX20P3483' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 else if (IS_ENABLED(CONFIG_USBC_PPC_NX20P3483))
^
driver/ppc/sn5s330.c:659:15: style: Condition 'attempt>1' is always false [knownConditionTrueFalse]
  if (attempt > 1)
              ^
driver/ppc/sn5s330.c:644:16: note: Assignment 'attempt=0', assigned value is 0
 int attempt = 0;
               ^
driver/ppc/sn5s330.c:657:3: note: attempt is incremented', new value is 1
  attempt++;
  ^
driver/ppc/sn5s330.c:659:15: note: Condition 'attempt>1' is always false
  if (attempt > 1)
              ^
driver/ppc/sn5s330.c:191:0: information: Skipping configuration 'CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT' since the value of 'CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 switch (CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT) {
^
driver/ppc/syv682x.c:71:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
driver/ppc/syv682x.c:435:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
driver/ppc/syv682x.c:421:53: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  regval |= flags[port] & SYV682X_FLAGS_CC_POLARITY ?
                                                    ^
driver/ppc/syv682x.c:200:0: information: Skipping configuration 'CONFIG_USBC_PPC_VCONN;CONFIG_USBC_VCONN;CONFIG_USB_PD_FRS_PPC' since the value of 'CONFIG_USB_PD_FRS_PPC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_FRS_PPC) &&
^
driver/ppc/syv682x.c:200:0: information: Skipping configuration 'CONFIG_USB_PD_FRS_PPC' since the value of 'CONFIG_USB_PD_FRS_PPC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_FRS_PPC) &&
^
driver/ppc/syv682x.c:638:0: information: Skipping configuration 'CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT' since the value of 'CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 initial_current_limit = CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT;
^
driver/regulator_ir357x.c:177:10: style: The scope of the variable 'val' can be reduced. [variableScope]
 uint8_t val;
         ^
driver/retimer/bb_retimer.c:321:10: style: The scope of the variable 'dp_pin_mode' can be reduced. [variableScope]
 uint8_t dp_pin_mode;
         ^
driver/retimer/bb_retimer.c:177:24: style: Variable 'cable_resp.raw_value' is assigned a value that is never used. [unreadVariable]
  cable_resp.raw_value =
                       ^
driver/retimer/bb_retimer.c:179:22: style: Variable 'dev_resp.raw_value' is assigned a value that is never used. [unreadVariable]
  dev_resp.raw_value = pd_get_tbt_mode_vdo(port, TCPC_TX_SOP);
                     ^
driver/retimer/bb_retimer.c:479:27: style: The scope of the variable 'val' can be reduced. [variableScope]
 int rv, port, reg, data, val;
                          ^
driver/retimer/ps8802.c:268:9: warning: Identical condition and return expression 'rv', return value is always 0 [identicalConditionAfterEarlyExit]
 return rv;
        ^
driver/retimer/ps8802.c:258:6: note: If condition 'rv' is true, the function will return/exit
 if (rv)
     ^
driver/retimer/ps8802.c:268:9: note: Returning identical expression 'rv'
 return rv;
        ^
driver/stm_mems_common.c:15:20: style:inconclusive: Function 'st_raw_read_n' argument 2 names different: declaration 'i2c_spi_addr_flags' definition 'i2c_addr_flags'. [funcArgNamesDifferent]
    const uint16_t i2c_addr_flags,
                   ^
driver/stm_mems_common.h:60:20: note: Function 'st_raw_read_n' argument 2 names different: declaration 'i2c_spi_addr_flags' definition 'i2c_addr_flags'.
    const uint16_t i2c_spi_addr_flags,
                   ^
driver/stm_mems_common.c:15:20: note: Function 'st_raw_read_n' argument 2 names different: declaration 'i2c_spi_addr_flags' definition 'i2c_addr_flags'.
    const uint16_t i2c_addr_flags,
                   ^
driver/stm_mems_common.c:27:19: style:inconclusive: Function 'st_raw_read_n_noinc' argument 2 names different: declaration 'i2c_spi_addr_flags' definition 'i2c_addr_flags'. [funcArgNamesDifferent]
   const uint16_t i2c_addr_flags,
                  ^
driver/stm_mems_common.h:67:19: note: Function 'st_raw_read_n_noinc' argument 2 names different: declaration 'i2c_spi_addr_flags' definition 'i2c_addr_flags'.
   const uint16_t i2c_spi_addr_flags,
                  ^
driver/stm_mems_common.c:27:19: note: Function 'st_raw_read_n_noinc' argument 2 names different: declaration 'i2c_spi_addr_flags' definition 'i2c_addr_flags'.
   const uint16_t i2c_addr_flags,
                  ^
driver/tcpm/anx7447.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
driver/tcpm/anx7447.c:374:5: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
 rv = tcpc_read(port, ANX7447_REG_ANALOG_CTRL_10, &reg);
    ^
driver/tcpm/anx7447.c:371:5: note: rv is assigned
 rv = tcpc_write(port, ANX7447_REG_ANALOG_CTRL_8, reg);
    ^
driver/tcpm/anx7447.c:374:5: note: rv is overwritten
 rv = tcpc_read(port, ANX7447_REG_ANALOG_CTRL_10, &reg);
    ^
driver/tcpm/anx7447.c:38:6: style: struct member 'anx_usb_mux::state' is never used. [unusedStructMember]
 int state;
     ^
driver/tcpm/anx7447.c:292:27: style: Variable 'me' is assigned a value that is never used. [unreadVariable]
 const struct usb_mux *me = &usb_muxes[port];
                          ^
driver/tcpm/anx7447.c:161:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
driver/tcpm/anx74xx.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
driver/tcpm/anx74xx.c:943:7: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
  ret = tcpc_write(port, ANX74XX_REG_TX_BIST_CTRL,
      ^
driver/tcpm/anx74xx.c:941:7: note: ret is assigned
  ret = tcpc_write(port, ANX74XX_REG_TX_BIST_CTRL, reg);
      ^
driver/tcpm/anx74xx.c:943:7: note: ret is overwritten
  ret = tcpc_write(port, ANX74XX_REG_TX_BIST_CTRL,
      ^
driver/tcpm/anx74xx.c:947:7: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
  ret = tcpc_write(port, ANX74XX_REG_TX_BIST_CTRL,
      ^
driver/tcpm/anx74xx.c:943:7: note: ret is assigned
  ret = tcpc_write(port, ANX74XX_REG_TX_BIST_CTRL,
      ^
driver/tcpm/anx74xx.c:947:7: note: ret is overwritten
  ret = tcpc_write(port, ANX74XX_REG_TX_BIST_CTRL,
      ^
driver/tcpm/anx74xx.c:949:7: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
  ret = tcpc_write(port, ANX74XX_REG_TX_BIST_CTRL,
      ^
driver/tcpm/anx74xx.c:947:7: note: ret is assigned
  ret = tcpc_write(port, ANX74XX_REG_TX_BIST_CTRL,
      ^
driver/tcpm/anx74xx.c:949:7: note: ret is overwritten
  ret = tcpc_write(port, ANX74XX_REG_TX_BIST_CTRL,
      ^
driver/tcpm/anx74xx.c:951:7: style: Variable 'ret' is reassigned a value before the old one has been used. [redundantAssignment]
  ret = tcpc_write(port, ANX74XX_REG_TX_BIST_CTRL, 0);
      ^
driver/tcpm/anx74xx.c:949:7: note: ret is assigned
  ret = tcpc_write(port, ANX74XX_REG_TX_BIST_CTRL,
      ^
driver/tcpm/anx74xx.c:951:7: note: ret is overwritten
  ret = tcpc_write(port, ANX74XX_REG_TX_BIST_CTRL, 0);
      ^
driver/tcpm/anx74xx.c:524:6: style: The scope of the variable 'num_retry' can be reduced. [variableScope]
 int num_retry = 0, i = 0;
     ^
driver/tcpm/anx74xx.c:524:21: style: The scope of the variable 'i' can be reduced. [variableScope]
 int num_retry = 0, i = 0;
                    ^
driver/tcpm/anx74xx.c:1074:63: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
 reg = tcpc_config[port].flags & TCPC_FLAGS_ALERT_ACTIVE_HIGH ?
                                                              ^
driver/tcpm/anx74xx.c:658:9: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
 int rv = EC_SUCCESS;
        ^
driver/tcpm/anx74xx.c:662:5: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
 rv |= tcpc_read(port, ANX74XX_REG_CC_STATUS, &reg);
    ^
driver/tcpm/anx74xx.c:778:27: style: Variable 'me' is assigned a value that is never used. [unreadVariable]
 const struct usb_mux *me = &usb_muxes[port];
                          ^
driver/tcpm/anx74xx.c:777:11: style: Unused variable: mux_state [unusedVariable]
 int reg, mux_state, rv = EC_SUCCESS;
          ^
driver/tcpm/anx7688.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
driver/tcpm/fusb302.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
driver/tcpm/fusb302.c:340:6: style: Variable 'reg' is assigned a value that is never used. [unreadVariable]
 reg = FUSB302_TKN_TXON;
     ^
driver/tcpm/fusb307.c:31:5: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
 rv = tcpci_set_role_ctrl(port, 1, TYPEC_RP_USB, TYPEC_CC_RD);
    ^
driver/tcpm/fusb307.c:29:5: note: rv is assigned
 rv = tcpci_tcpm_init(port);
    ^
driver/tcpm/fusb307.c:31:5: note: rv is overwritten
 rv = tcpci_set_role_ctrl(port, 1, TYPEC_RP_USB, TYPEC_CC_RD);
    ^
driver/tcpm/it83xx.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations. [toomanyconfigs]

^
driver/tcpm/it83xx.c:184:11: style: The scope of the variable 'evt' can be reduced. [variableScope]
 uint32_t evt;
          ^
driver/tcpm/it83xx.c:164:0: information: Skipping configuration 'CONFIG_USB_PD_DECODE_SOP' since the value of 'CONFIG_USB_PD_DECODE_SOP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_DECODE_SOP)) {
^
driver/tcpm/it83xx.c:572:0: information: Skipping configuration 'CONFIG_USB_PD_DECODE_SOP' since the value of 'CONFIG_USB_PD_DECODE_SOP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (IS_ENABLED(CONFIG_USB_PD_DECODE_SOP))
^
driver/tcpm/it83xx.c:585:0: information: Skipping configuration 'CONFIG_USB_PD_DECODE_SOP' since the value of 'CONFIG_USB_PD_DECODE_SOP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
   if (IS_ENABLED(CONFIG_USB_PD_DECODE_SOP))
^
driver/tcpm/it8xxx2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
driver/tcpm/it8xxx2.c:196:11: style: The scope of the variable 'evt' can be reduced. [variableScope]
 uint32_t evt;
          ^
driver/tcpm/it8xxx2.c:823:0: information: Skipping configuration 'IT83XX_INTC_PLUG_IN_OUT_SUPPORT' since the value of 'IT83XX_INTC_PLUG_IN_OUT_SUPPORT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(IT83XX_INTC_PLUG_IN_OUT_SUPPORT))
^
driver/tcpm/mt6370.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
driver/tcpm/mt6370.c:50:5: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
 rv = tcpci_tcpm_init(port);
    ^
driver/tcpm/mt6370.c:35:5: note: rv is assigned
 rv = tcpc_read(port, MT6370_REG_IDLE_CTRL, &val);
    ^
driver/tcpm/mt6370.c:50:5: note: rv is overwritten
 rv = tcpci_tcpm_init(port);
    ^
driver/tcpm/mt6370.c:135:5: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
 rv = mt6370_init_cc_params(port, (int)mt6370_polarity ? *cc1 : *cc2);
    ^
driver/tcpm/mt6370.c:120:5: note: rv is assigned
 rv = tcpc_read(port, TCPC_REG_ROLE_CTRL, &role);
    ^
driver/tcpm/mt6370.c:135:5: note: rv is overwritten
 rv = mt6370_init_cc_params(port, (int)mt6370_polarity ? *cc1 : *cc2);
    ^
driver/tcpm/nct38xx.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
driver/tcpm/nct38xx.c:164:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
driver/tcpm/ps8xxx.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations. [toomanyconfigs]

^
driver/tcpm/ps8xxx.c:0:0: information: This file is not analyzed. Cppcheck failed to extract a valid configuration. Use -v for more details. [noValidConfiguration]

^
driver/tcpm/raa489000.c:73:6: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
  rv = tcpc_write16(port, RAA489000_TCPC_SETTING1, regval);
     ^
driver/tcpm/raa489000.c:71:6: note: rv is assigned
  rv = tcpc_read16(port, RAA489000_TCPC_SETTING1, &regval);
     ^
driver/tcpm/raa489000.c:73:6: note: rv is overwritten
  rv = tcpc_write16(port, RAA489000_TCPC_SETTING1, regval);
     ^
driver/tcpm/raa489000.c:162:5: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
 rv = tcpc_write16(port, RAA489000_TCPC_SETTING1, regval);
    ^
driver/tcpm/raa489000.c:151:5: note: rv is assigned
 rv = tcpc_read16(port, RAA489000_TCPC_SETTING1, &regval);
    ^
driver/tcpm/raa489000.c:162:5: note: rv is overwritten
 rv = tcpc_write16(port, RAA489000_TCPC_SETTING1, regval);
    ^
driver/tcpm/rt1715.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
driver/tcpm/stub.c:101:60: style:inconclusive: Function 'tcpm_dequeue_message' argument 3 names different: declaration 'header' definition 'head'. [funcArgNamesDifferent]
int tcpm_dequeue_message(int port, uint32_t *payload, int *head)
                                                           ^
driver/tcpm/tcpm.h:495:60: note: Function 'tcpm_dequeue_message' argument 3 names different: declaration 'header' definition 'head'.
int tcpm_dequeue_message(int port, uint32_t *payload, int *header);
                                                           ^
driver/tcpm/stub.c:101:60: note: Function 'tcpm_dequeue_message' argument 3 names different: declaration 'header' definition 'head'.
int tcpm_dequeue_message(int port, uint32_t *payload, int *head)
                                                           ^
driver/tcpm/stub.c:155:65: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  pd_transmit_complete(port, status & TCPC_REG_ALERT_TX_SUCCESS ?
                                                                ^
driver/tcpm/tcpci.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
driver/tcpm/tcpci.c:490:9: warning: Identical condition and return expression 'rv', return value is always 0 [identicalConditionAfterEarlyExit]
 return rv;
        ^
driver/tcpm/tcpci.c:434:6: note: If condition 'rv' is true, the function will return/exit
 if (rv)
     ^
driver/tcpm/tcpci.c:490:9: note: Returning identical expression 'rv'
 return rv;
        ^
driver/tcpm/tcpci.c:1172:64: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
  pd_transmit_complete(port, alert & TCPC_REG_ALERT_TX_SUCCESS ?
                                                               ^
driver/tcpm/tcpci.c:28:0: information: Skipping configuration 'CONFIG_USB_PD_DECODE_SOP' since the value of 'CONFIG_USB_PD_DECODE_SOP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
STATIC_IF(CONFIG_USB_PD_DECODE_SOP)
^
driver/tcpm/tcpci.c:30:0: information: Skipping configuration 'CONFIG_USB_PD_DECODE_SOP' since the value of 'CONFIG_USB_PD_DECODE_SOP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
STATIC_IF(CONFIG_USB_PD_DECODE_SOP)
^
driver/tcpm/tcpci.c:650:0: information: Skipping configuration 'CONFIG_USB_PD_DECODE_SOP' since the value of 'CONFIG_USB_PD_DECODE_SOP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_DECODE_SOP)) {
^
driver/tcpm/tcpci.c:689:0: information: Skipping configuration 'CONFIG_USB_PD_DECODE_SOP' since the value of 'CONFIG_USB_PD_DECODE_SOP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_DECODE_SOP)) {
^
driver/tcpm/tcpci.c:698:0: information: Skipping configuration 'CONFIG_USB_PD_DECODE_SOP' since the value of 'CONFIG_USB_PD_DECODE_SOP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_USB_PD_DECODE_SOP) &&
^
driver/tcpm/tcpci.c:816:0: information: Skipping configuration 'CONFIG_USB_PD_DECODE_SOP' since the value of 'CONFIG_USB_PD_DECODE_SOP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_DECODE_SOP)) {
^
driver/tcpm/tcpci.c:826:0: information: Skipping configuration 'CONFIG_USB_PD_DECODE_SOP' since the value of 'CONFIG_USB_PD_DECODE_SOP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_DECODE_SOP)) {
^
driver/tcpm/tcpci.c:1209:0: information: Skipping configuration 'CONFIG_USB_PD_DUAL_ROLE;CONFIG_USB_PD_DUAL_ROLE_AUTO_TOGGLE' since the value of 'CONFIG_USB_PD_DUAL_ROLE_AUTO_TOGGLE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
  if (IS_ENABLED(CONFIG_USB_PD_DUAL_ROLE_AUTO_TOGGLE)) {
^
driver/tcpm/tcpci.c:325:0: information: Skipping configuration 'CONFIG_USB_PD_FRS_TCPC' since the value of 'CONFIG_USB_PD_FRS_TCPC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_FRS_TCPC))
^
driver/tcpm/tcpci.c:331:0: information: Skipping configuration 'CONFIG_USB_PD_FRS_TCPC' since the value of 'CONFIG_USB_PD_FRS_TCPC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_FRS_TCPC)) {
^
driver/tcpm/tcpci.c:1250:0: information: Skipping configuration 'CONFIG_USB_PD_FRS_TCPC' since the value of 'CONFIG_USB_PD_FRS_TCPC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_USB_PD_FRS_TCPC)
^
driver/tcpm/tusb422.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
driver/temp_sensor/adt7481.c:269:8: style: The scope of the variable 'power' can be reduced. [variableScope]
 char *power;
       ^
driver/temp_sensor/adt7481.c:29:0: information: Skipping configuration 'CONFIG_TEMP_SENSOR_POWER_GPIO' since the value of 'CONFIG_TEMP_SENSOR_POWER_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return gpio_get_level(CONFIG_TEMP_SENSOR_POWER_GPIO);
^
driver/temp_sensor/adt7481.c:348:0: information: Skipping configuration 'CONFIG_TEMP_SENSOR_POWER_GPIO' since the value of 'CONFIG_TEMP_SENSOR_POWER_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(CONFIG_TEMP_SENSOR_POWER_GPIO, power_on);
^
driver/temp_sensor/g753.c:71:6: style: Condition '!has_power()' is always false [knownConditionTrueFalse]
 if (!has_power())
     ^
driver/temp_sensor/g753.c:87:6: style: Condition '!has_power()' is always false [knownConditionTrueFalse]
 if (!has_power())
     ^
driver/temp_sensor/g753.c:116:6: style: Condition '!has_power()' is always false [knownConditionTrueFalse]
 if (!has_power()) {
     ^
driver/temp_sensor/g753.c:143:6: style: Condition '!has_power()' is always false [knownConditionTrueFalse]
 if (!has_power()) {
     ^
driver/temp_sensor/g753.c:26:0: information: Skipping configuration 'CONFIG_TEMP_SENSOR_POWER_GPIO' since the value of 'CONFIG_TEMP_SENSOR_POWER_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return gpio_get_level(CONFIG_TEMP_SENSOR_POWER_GPIO);
^
driver/temp_sensor/g78x.c:75:6: style: Condition '!has_power()' is always false [knownConditionTrueFalse]
 if (!has_power())
     ^
driver/temp_sensor/g78x.c:99:6: style: Condition '!has_power()' is always false [knownConditionTrueFalse]
 if (!has_power())
     ^
driver/temp_sensor/g78x.c:143:6: style: Condition '!has_power()' is always false [knownConditionTrueFalse]
 if (!has_power()) {
     ^
driver/temp_sensor/g78x.c:189:6: style: Condition '!has_power()' is always false [knownConditionTrueFalse]
 if (!has_power()) {
     ^
driver/temp_sensor/g78x.c:30:0: information: Skipping configuration 'CONFIG_TEMP_SENSOR_POWER_GPIO' since the value of 'CONFIG_TEMP_SENSOR_POWER_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return gpio_get_level(CONFIG_TEMP_SENSOR_POWER_GPIO);
^
driver/temp_sensor/thermistor.c:81:0: information: Skipping configuration 'CONFIG_STEINHART_HART_3V0_22K6_47K_4050B;CONFIG_STEINHART_HART_3V3_13K7_47K_4050B;CONFIG_STEINHART_HART_3V3_30K9_47K_4050B;CONFIG_STEINHART_HART_3V3_51K1_47K_4050B;CONFIG_STEINHART_HART_6V0_51K1_47K_4050B;CONFIG_TEMP_SENSOR_POWER_GPIO' since the value of 'CONFIG_TEMP_SENSOR_POWER_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (!gpio_get_level(CONFIG_TEMP_SENSOR_POWER_GPIO))
^
driver/temp_sensor/tmp006.c:398:5: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
 rv = i2c_read16(TMP006_PORT(addr_flags),
    ^
driver/temp_sensor/tmp006.c:393:5: note: rv is assigned
 rv = i2c_read16(TMP006_PORT(addr_flags),
    ^
driver/temp_sensor/tmp006.c:398:5: note: rv is overwritten
 rv = i2c_read16(TMP006_PORT(addr_flags),
    ^
driver/temp_sensor/tmp006.c:403:5: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
 rv = i2c_read16(TMP006_PORT(addr_flags),
    ^
driver/temp_sensor/tmp006.c:398:5: note: rv is assigned
 rv = i2c_read16(TMP006_PORT(addr_flags),
    ^
driver/temp_sensor/tmp006.c:403:5: note: rv is overwritten
 rv = i2c_read16(TMP006_PORT(addr_flags),
    ^
driver/temp_sensor/tmp006.c:410:5: style: Variable 'rv' is reassigned a value before the old one has been used. [redundantAssignment]
 rv = i2c_read16(TMP006_PORT(addr_flags),
    ^
driver/temp_sensor/tmp006.c:403:5: note: rv is assigned
 rv = i2c_read16(TMP006_PORT(addr_flags),
    ^
driver/temp_sensor/tmp006.c:410:5: note: rv is overwritten
 rv = i2c_read16(TMP006_PORT(addr_flags),
    ^
driver/temp_sensor/tmp006.c:423:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv, rv1;
     ^
driver/temp_sensor/tmp006.c:410:5: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
 rv = i2c_read16(TMP006_PORT(addr_flags),
    ^
driver/temp_sensor/tmp006.c:79:0: information: Skipping configuration 'CONFIG_TEMP_SENSOR_POWER_GPIO' since the value of 'CONFIG_TEMP_SENSOR_POWER_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return gpio_get_level(CONFIG_TEMP_SENSOR_POWER_GPIO);
^
driver/temp_sensor/tmp411.c:247:8: style: The scope of the variable 'power' can be reduced. [variableScope]
 char *power;
       ^
driver/temp_sensor/tmp411.c:28:0: information: Skipping configuration 'CONFIG_TEMP_SENSOR_POWER_GPIO' since the value of 'CONFIG_TEMP_SENSOR_POWER_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return gpio_get_level(CONFIG_TEMP_SENSOR_POWER_GPIO);
^
driver/temp_sensor/tmp411.c:326:0: information: Skipping configuration 'CONFIG_TEMP_SENSOR_POWER_GPIO' since the value of 'CONFIG_TEMP_SENSOR_POWER_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(CONFIG_TEMP_SENSOR_POWER_GPIO, power_on);
^
driver/temp_sensor/tmp432.c:312:8: style: The scope of the variable 'power' can be reduced. [variableScope]
 char *power;
       ^
driver/temp_sensor/tmp432.c:32:0: information: Skipping configuration 'CONFIG_TEMP_SENSOR_POWER_GPIO' since the value of 'CONFIG_TEMP_SENSOR_POWER_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 return gpio_get_level(CONFIG_TEMP_SENSOR_POWER_GPIO);
^
driver/temp_sensor/tmp432.c:395:0: information: Skipping configuration 'CONFIG_TEMP_SENSOR_POWER_GPIO' since the value of 'CONFIG_TEMP_SENSOR_POWER_GPIO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 gpio_set_level(CONFIG_TEMP_SENSOR_POWER_GPIO, power_on);
^
driver/touchpad_elan.c:683:6: style: The scope of the variable 'ret' can be reduced. [variableScope]
 int ret;
     ^
driver/touchpad_elan.c:734:11: style: The scope of the variable 'event' can be reduced. [variableScope]
 uint32_t event;
          ^
driver/touchpad_elan.c:496:16: style: The scope of the variable 'page_count' can be reduced. [variableScope]
 int addr, rv, page_count;
               ^
driver/touchpad_elan.c:596:16: style: Local variable 'offset' shadows outer variable [shadowVariable]
  unsigned int offset = param[1];
               ^
driver/touchpad_elan.c:577:15: note: Shadowed declaration
 unsigned int offset;
              ^
driver/touchpad_elan.c:596:16: note: Shadow variable
  unsigned int offset = param[1];
               ^
driver/touchpad_st.c:449:9: warning: Identical condition and return expression 'ret', return value is always 0 [identicalConditionAfterEarlyExit]
 return ret;
        ^
driver/touchpad_st.c:444:6: note: If condition 'ret' is true, the function will return/exit
 if (ret)
     ^
driver/touchpad_st.c:449:9: note: Returning identical expression 'ret'
 return ret;
        ^
driver/touchpad_st.c:551:9: warning: Identical condition and return expression 'ret', return value is always 0 [identicalConditionAfterEarlyExit]
 return ret;
        ^
driver/touchpad_st.c:526:6: note: If condition 'ret' is true, the function will return/exit
 if (ret)
     ^
driver/touchpad_st.c:551:9: note: Returning identical expression 'ret'
 return ret;
        ^
driver/touchpad_st.c:794:9: style: The scope of the variable 'num_events' can be reduced. [variableScope]
 int i, num_events, retry = 100;
        ^
driver/touchpad_st.c:1420:11: style: The scope of the variable 'event' can be reduced. [variableScope]
 uint32_t event;
          ^
driver/touchpad_st.c:1379:11: style: Local variable 'dump_info' shadows outer variable [shadowVariable]
 uint32_t dump_info[2];
          ^
driver/touchpad_st.c:114:12: note: Shadowed declaration
  uint32_t dump_info[32];
           ^
driver/touchpad_st.c:1379:11: note: Shadow variable
 uint32_t dump_info[2];
          ^
driver/touchpad_st.c:1383:11: style: Local variable 'dump_memory' shadows outer function [shadowFunction]
 uint32_t dump_memory[16];
          ^
driver/touchpad_st.c:589:13: note: Shadowed declaration
static void dump_memory(void)
            ^
driver/touchpad_st.c:1383:11: note: Shadow variable
 uint32_t dump_memory[16];
          ^
driver/touchpad_st.c:1545:7: style: The scope of the variable 'debug_line' can be reduced. [variableScope]
 char debug_line[ST_TOUCH_COLS + 5];
      ^
driver/touchpad_st.c:1546:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i, j, index;
     ^
driver/touchpad_st.c:1546:9: style: The scope of the variable 'j' can be reduced. [variableScope]
 int i, j, index;
        ^
driver/touchpad_st.c:1546:12: style: The scope of the variable 'index' can be reduced. [variableScope]
 int i, j, index;
           ^
driver/touchpad_st.c:1547:6: style: The scope of the variable 'v' can be reduced. [variableScope]
 int v;
     ^
driver/touchpad_st.c:1697:9: style: The scope of the variable 'offset' can be reduced. [variableScope]
 size_t offset = 0;
        ^
driver/touchpad_st.c:1698:6: style: The scope of the variable 'ret' can be reduced. [variableScope]
 int ret, buffer_id = -1;
     ^
driver/touchpad_st.c:1005:11: style: The scope of the variable 'addr' can be reduced. [variableScope]
 uint32_t addr, index, chunk_size;
          ^
driver/touchpad_st.c:1005:17: style: The scope of the variable 'index' can be reduced. [variableScope]
 uint32_t addr, index, chunk_size;
                ^
driver/touchpad_st.c:1006:11: style: The scope of the variable 'flash_buffer_size' can be reduced. [variableScope]
 uint32_t flash_buffer_size;
          ^
driver/usb_mux/amd_fp5.c:130:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
driver/usb_mux/anx7440.c:48:6: style: The scope of the variable 'res' can be reduced. [variableScope]
 int res;
     ^
driver/usb_mux/ps8740.c:109:28: style:inconclusive: Function 'ps8740_tune_usb_eq' argument 1 names different: declaration 'i2c_addr' definition 'port'. [funcArgNamesDifferent]
int ps8740_tune_usb_eq(int port, uint8_t tx, uint8_t rx)
                           ^
driver/usb_mux/ps8740.h:87:28: note: Function 'ps8740_tune_usb_eq' argument 1 names different: declaration 'i2c_addr' definition 'port'.
int ps8740_tune_usb_eq(int i2c_addr, uint8_t tx, uint8_t rx);
                           ^
driver/usb_mux/ps8740.c:109:28: note: Function 'ps8740_tune_usb_eq' argument 1 names different: declaration 'i2c_addr' definition 'port'.
int ps8740_tune_usb_eq(int port, uint8_t tx, uint8_t rx)
                           ^
driver/usb_mux/ps8743.c:118:28: style:inconclusive: Function 'ps8743_tune_usb_eq' argument 1 names different: declaration 'i2c_addr' definition 'port'. [funcArgNamesDifferent]
int ps8743_tune_usb_eq(int port, uint8_t tx, uint8_t rx)
                           ^
driver/usb_mux/ps8743.h:78:28: note: Function 'ps8743_tune_usb_eq' argument 1 names different: declaration 'i2c_addr' definition 'port'.
int ps8743_tune_usb_eq(int i2c_addr, uint8_t tx, uint8_t rx);
                           ^
driver/usb_mux/ps8743.c:118:28: note: Function 'ps8743_tune_usb_eq' argument 1 names different: declaration 'i2c_addr' definition 'port'.
int ps8743_tune_usb_eq(int port, uint8_t tx, uint8_t rx)
                           ^
extra/ftdi_hostcmd/test_cmds.c:600:13: style: The if condition is the same as the previous if condition [duplicateCondition]
 if (optind < argc)
            ^
extra/ftdi_hostcmd/test_cmds.c:598:13: note: First condition
 if (optind < argc)
            ^
extra/ftdi_hostcmd/test_cmds.c:600:13: note: Second condition
 if (optind < argc)
            ^
extra/ftdi_hostcmd/test_cmds.c:116:3: portability: %zd in format string (no. 1) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  printf("Request too large (%zd > %zd)\n",
  ^
extra/ftdi_hostcmd/test_cmds.c:116:3: portability: %zd in format string (no. 2) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  printf("Request too large (%zd > %zd)\n",
  ^
extra/ftdi_hostcmd/test_cmds.c:256:3: portability: %zd in format string (no. 2) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  printf("response data_len %d is > %zd\n",
  ^
extra/ftdi_hostcmd/test_cmds.c:131:35: warning: Possible null pointer dereference: data [nullPointer]
 memcpy(txbuf + sizeof(*request), data, data_len);
                                  ^
extra/ftdi_hostcmd/test_cmds.c:356:10: note: Calling function 'send_cmd', 3rd argument '0' value is 0
         0, 0,
         ^
extra/ftdi_hostcmd/test_cmds.c:310:38: note: Calling function 'prepare_request', 3rd argument 'outbuf' value is 0
 len = prepare_request(cmd, version, outbuf, outsize);
                                     ^
extra/ftdi_hostcmd/test_cmds.c:115:16: note: Assuming condition is Assuming condition is false
 if (total_len > sizeof(txbuf)) {
               ^
extra/ftdi_hostcmd/test_cmds.c:131:35: note: Null pointer dereference
 memcpy(txbuf + sizeof(*request), data, data_len);
                                  ^
extra/ftdi_hostcmd/test_cmds.c:311:10: style: Checking if unsigned expression 'len' is less than zero. [unsignedLessThanZero]
 if (len < 0)
         ^
extra/ftdi_hostcmd/test_cmds.c:374:35: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
  if (info.protocol_versions & (1 << i))
                                  ^
extra/ftdi_hostcmd/test_cmds.c:374:35: error: Signed integer overflow for expression '1<<i'. [integerOverflow]
  if (info.protocol_versions & (1 << i))
                                  ^
extra/i2c_pseudo/i2c-pseudo.c:3089:8: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
 ret = snprintf(buf, PAGE_SIZE, "%u\n", count);
       ^
extra/i2c_pseudo/i2c-pseudo.c:2767:14: style: Variable 'size_holder' is reassigned a value before the old one has been used. [redundantAssignment]
 size_holder = pdata->cmd_size + remaining;
             ^
extra/i2c_pseudo/i2c-pseudo.c:2758:14: note: size_holder is assigned
 size_holder = min_t(size_t,
             ^
extra/i2c_pseudo/i2c-pseudo.c:2767:14: note: size_holder is overwritten
 size_holder = pdata->cmd_size + remaining;
             ^
extra/i2c_pseudo/i2c-pseudo.c:1080:31: style: The scope of the variable 'mxfer_reply' can be reduced. [variableScope]
 struct i2cp_cmd_mxfer_reply *mxfer_reply;
                              ^
extra/i2c_pseudo/i2c-pseudo.c:2750:13: style: The scope of the variable 'ret' can be reduced. [variableScope]
 ssize_t i, ret, size_holder;
            ^
extra/i2c_pseudo/i2c-pseudo.c:900:36: style: Checking if unsigned expression 'mxfer_rsp->buf_start_plus_one' is less than zero. [unsignedLessThanZero]
 if (mxfer_rsp->buf_start_plus_one <= 0) {
                                   ^
extra/i2c_pseudo/i2c-pseudo.c:1837:27: style: Checking if unsigned expression 'cmd_data->timeout_ms' is less than zero. [unsignedLessThanZero]
 if (cmd_data->timeout_ms < I2CP_TIMEOUT_MS_MIN ||
                          ^
extra/i2c_pseudo/i2c-pseudo.c:2688:49: style: Checking if unsigned expression 'pdata->cmd_size' is less than zero. [unsignedLessThanZero]
 if (!found_deliminator_char || pdata->cmd_size <= 0)
                                                ^
extra/i2c_pseudo/i2c-pseudo.c:3140:17: style: Checking if unsigned expression 'i2cp_limit' is less than zero. [unsignedLessThanZero]
 if (i2cp_limit < I2CP_ADAPTERS_MIN || i2cp_limit > I2CP_ADAPTERS_MAX) {
                ^
extra/lightbar/windows.c:125:11: style: The scope of the variable 'copyleds' can be reduced. [variableScope]
 uint16_t copyleds[NUM_LEDS][3];
          ^
extra/lightbar/windows.c:202:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
extra/rma_reset/rma_reset.c:699:47: warning: Either the condition 'acode<0' is redundant or there is possible null pointer dereference: acode. [nullPointerRedundantCheck]
   fwrite(authcode, 1, RMA_AUTHCODE_BUF_SIZE, acode);
                                              ^
extra/rma_reset/rma_reset.c:697:14: note: Assuming that condition 'acode<0' is not redundant
   if (acode < 0)
             ^
extra/rma_reset/rma_reset.c:699:47: note: Null pointer dereference
   fwrite(authcode, 1, RMA_AUTHCODE_BUF_SIZE, acode);
                                              ^
extra/rma_reset/rma_reset.c:700:11: warning: Either the condition 'acode<0' is redundant or there is possible null pointer dereference: acode. [nullPointerRedundantCheck]
   fclose(acode);
          ^
extra/rma_reset/rma_reset.c:697:14: note: Assuming that condition 'acode<0' is not redundant
   if (acode < 0)
             ^
extra/rma_reset/rma_reset.c:700:11: note: Null pointer dereference
   fclose(acode);
          ^
extra/rma_reset/rma_reset.c:697:14: style: A pointer can not be negative so it is either pointless or an error to check if it is. [pointerLessThanZero]
   if (acode < 0)
             ^
extra/rma_reset/rma_reset.c:553:7: style: Variable 'len' is assigned a value that is never used. [unreadVariable]
  len = 20;
      ^
extra/sps_errs/prog.c:117:3: portability: %zd in format string (no. 1) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  printf("Request too large (%zd > %zd)\n",
  ^
extra/sps_errs/prog.c:117:3: portability: %zd in format string (no. 2) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  printf("Request too large (%zd > %zd)\n",
  ^
extra/sps_errs/prog.c:183:3: portability: %zd in format string (no. 1) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  printf("len %zd => %zd\n", len, bytes_left);
  ^
extra/sps_errs/prog.c:183:3: portability: %zd in format string (no. 2) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  printf("len %zd => %zd\n", len, bytes_left);
  ^
extra/sps_errs/prog.c:273:3: portability: %zd in format string (no. 1) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  printf("len %zd => %zd\n", len, bytes_left);
  ^
extra/sps_errs/prog.c:273:3: portability: %zd in format string (no. 2) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  printf("len %zd => %zd\n", len, bytes_left);
  ^
extra/sps_errs/prog.c:297:3: portability: %zd in format string (no. 2) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  printf("HEY: response data_len %d is > %zd\n",
  ^
extra/sps_errs/prog.c:308:3: portability: %zd in format string (no. 1) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  printf("len %zd => %zd\n", len, bytes_left);
  ^
extra/sps_errs/prog.c:308:3: portability: %zd in format string (no. 2) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  printf("len %zd => %zd\n", len, bytes_left);
  ^
extra/sps_errs/prog.c:335:2: portability: %zd in format string (no. 1) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
 printf("sent %zd bytes\n", bytes_sent);
 ^
extra/sps_errs/prog.c:416:4: portability: %zd in format string (no. 1) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
   printf("stopping after %zd bytes\n", stop_after);
   ^
extra/sps_errs/prog.c:172:10: style: Checking if unsigned expression 'len' is less than zero. [unsignedLessThanZero]
 if (len < 0)
         ^
extra/touchpad_updater/touchpad_updater.c:299:6: style: The scope of the variable 'tx_ready' can be reduced. [variableScope]
 int tx_ready;
     ^
extra/touchpad_updater/touchpad_updater.c:300:6: style: The scope of the variable 'remains' can be reduced. [variableScope]
 int remains;
     ^
extra/touchpad_updater/touchpad_updater.c:540:25: style: The scope of the variable 'block_checksum' can be reduced. [variableScope]
 uint16_t checksum = 0, block_checksum;
                        ^
extra/touchpad_updater/touchpad_updater.c:541:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
extra/touchpad_updater/touchpad_updater.c:189:6: style: Local variable 'iface_num' shadows outer variable [shadowVariable]
 int iface_num = -1;
     ^
extra/touchpad_updater/touchpad_updater.c:154:12: note: Shadowed declaration
static int iface_num = -1;
           ^
extra/touchpad_updater/touchpad_updater.c:189:6: note: Shadow variable
 int iface_num = -1;
     ^
extra/usb_console/usb_console.c:63:6: style: The scope of the variable 'r' can be reduced. [variableScope]
 int r;
     ^
extra/usb_console/usb_console.c:119:6: style: The scope of the variable 'n' can be reduced. [variableScope]
 int n;
     ^
extra/usb_updater/desc_parser.c:199:4: portability: %zd in format string (no. 1) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
   fprintf(stderr,
   ^
extra/usb_updater/desc_parser.c:199:4: portability: %zd in format string (no. 2) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
   fprintf(stderr,
   ^
extra/usb_updater/desc_parser.c:210:5: portability: %zd in format string (no. 1) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
    fprintf(stderr,
    ^
extra/usb_updater/desc_parser.c:268:3: portability: %zd in format string (no. 1) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  fprintf(stderr, "Failed to allocate %zd bytes\n",
  ^
extra/usb_updater/desc_parser.c:350:7: style: Unused variable: next_line [unusedVariable]
 char next_line[1000]; /* Should be enough for the largest descriptor. */
      ^
extra/usb_updater/usb_updater2.c:791:53: warning: The address of local variable 'start_resp' might be accessed at non-zero index. [objectIndex]
   fprintf(stderr, " %02x", ((uint8_t *)&start_resp)[i]);
                                                    ^
extra/usb_updater/usb_updater2.c:791:41: note: Address of variable taken here.
   fprintf(stderr, " %02x", ((uint8_t *)&start_resp)[i]);
                                        ^
extra/usb_updater/usb_updater2.c:791:53: note: The address of local variable 'start_resp' might be accessed at non-zero index.
   fprintf(stderr, " %02x", ((uint8_t *)&start_resp)[i]);
                                                    ^
extra/usb_updater/usb_updater2.c:583:4: portability: %zd in format string (no. 1) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
   fprintf(stderr,
   ^
extra/usb_updater/usb_updater2.c:789:3: portability: %zd in format string (no. 1) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  fprintf(stderr, "Unexpected response size %zd: ", rxed_size);
  ^
extra/usb_updater/usb_updater2.c:816:3: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
  fprintf(stderr, "Target reporting error %d\n", error_code);
  ^
extra/usb_updater/usb_updater2.c:861:3: portability: %zd in format string (no. 2) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  printf("%s: failed to allocate %zd bytes\n",
  ^
extra/usb_updater/usb_updater2.c:1115:4: portability: %zd in format string (no. 1) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
   printf("read %zd(%#zx) bytes from %s\n",
   ^
extra/usb_updater/usb_updater2.c:1170:3: portability: %zd in format string (no. 1) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  printf("read %zd(%#zx) bytes from %s\n",
  ^
extra/usb_updater/usb_updater2.c:755:9: style: The scope of the variable 'i' can be reduced. [variableScope]
 size_t i;
        ^
extra/usb_updater/usb_updater2.c:764:12: style: union member 'Anonymous1::legacy_resp' is never used. [unusedStructMember]
  uint32_t legacy_resp;
           ^
extra/usb_updater/usb_updater2.c:1007:23: style: Variable 'response_size' is assigned a value that is never used. [unreadVariable]
 size_t response_size = 64;
                      ^
fuzz/usb_pd_fuzz.c:99:12: warning: Possible null pointer dereference: m [nullPointer]
 *header = m->header;
           ^
fuzz/usb_pd_fuzz.c:97:7: note: Assignment 'm=NULL', assigned value is 0
  m = NULL;
      ^
fuzz/usb_pd_fuzz.c:99:12: note: Null pointer dereference
 *header = m->header;
           ^
fuzz/usb_pd_fuzz.c:105:18: warning: Possible null pointer dereference: m [nullPointer]
 memcpy(payload, m->payload, sizeof(m->payload));
                 ^
fuzz/usb_pd_fuzz.c:97:7: note: Assignment 'm=NULL', assigned value is 0
  m = NULL;
      ^
fuzz/usb_pd_fuzz.c:105:18: note: Null pointer dereference
 memcpy(payload, m->payload, sizeof(m->payload));
                 ^
power/common.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations. [toomanyconfigs]

^
power/common.c:640:11: style: The scope of the variable 'this_in_signals' can be reduced. [variableScope]
 uint32_t this_in_signals;
          ^
power/common.c:896:29: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    mask, in_signals & mask ? 1 : 0, s->name);
                            ^
power/icelake.c:108:0: information: Skipping configuration 'CONFIG_CHIPSET_JASPERLAKE' since the value of 'CONFIG_CHIPSET_JASPERLAKE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(CONFIG_CHIPSET_JASPERLAKE))
^
power/intel_x86.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
power/mt817x.c:290:10: style: Condition 'asserted' is always true [knownConditionTrueFalse]
  while (asserted && !gpio_get_level(GPIO_5V_POWER_GOOD) &&
         ^
power/mt817x.c:286:6: note: Assuming that condition 'asserted' is not redundant
 if (asserted) {
     ^
power/mt817x.c:290:10: note: Condition 'asserted' is always true
  while (asserted && !gpio_get_level(GPIO_5V_POWER_GOOD) &&
         ^
power/sc7180.c:186:6: style: The scope of the variable 'delay' can be reduced. [variableScope]
 int delay;
     ^
power/skylake.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
power/skylake.c:168:7: style: Condition '!board_has_working_reset_flags()' is always false [knownConditionTrueFalse]
  if (!board_has_working_reset_flags()) {
      ^
test/cbi.c:215:38: error: Expression 'I2C_PORT_EEPROM,I2C_ADDR_EEPROM_FLAGS,offsetof(struct cbi_header,crc),++crc' depends on order of evaluation of side effects [unknownEvaluationOrder]
     offsetof(struct cbi_header, crc), ++crc);
                                     ^
test/crc32.c:44:26: warning: The address of local variable 'input' might be accessed at non-zero index. [objectIndex]
  crc32_ctx_hash8(&crc, p[i]);
                         ^
test/crc32.c:36:39: note: Address of variable taken here.
 const uint8_t *p = (const uint8_t *) &input;
                                      ^
test/crc32.c:44:26: note: The address of local variable 'input' might be accessed at non-zero index.
  crc32_ctx_hash8(&crc, p[i]);
                         ^
test/flash.c:267:6: style: Unused variable: i [unusedVariable]
 int i;
     ^
test/flash_write_protect.c:30:6: style: Condition '!wp' is always false [knownConditionTrueFalse]
 if (!wp) {
     ^
test/flash_write_protect.c:23:14: note: Assignment 'wp=1', assigned value is 1
        wp = 1;
             ^
test/flash_write_protect.c:30:6: note: Condition '!wp' is always false
 if (!wp) {
     ^
test/fpsensor_state.c:136:26: style: The comparison 'output_mode == 0' is always true. [knownConditionTrueFalse]
 TEST_ASSERT(output_mode == 0);
                         ^
test/fpsensor_state.c:122:25: note: 'output_mode' is assigned value '0' here.
 uint32_t output_mode = 0;
                        ^
test/fpsensor_state.c:136:26: note: The comparison 'output_mode == 0' is always true.
 TEST_ASSERT(output_mode == 0);
                         ^
test/kb_mkbp.c:75:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
test/kb_mkbp.c:108:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
test/kb_scan.c:146:6: style: The scope of the variable 'retry' can be reduced. [variableScope]
 int retry = KEYDOWN_RETRY;
     ^
test/math_util.c:35:8: style: The scope of the variable 'a' can be reduced. [variableScope]
 float a, b;
       ^
test/math_util.c:35:11: style: The scope of the variable 'b' can be reduced. [variableScope]
 float a, b;
          ^
test/motion_common.c:40:2: style:inconclusive: Consecutive return, break, continue, goto or throw statements are unnecessary. [duplicateBreak]
 return 0;
 ^
test/sbs_charging_v2.c:458:13: style: The scope of the variable 'tmp' can be reduced. [variableScope]
 int i, rv, tmp;
            ^
test/sbs_charging_v2.c:556:8: style: Variable 'state' is assigned a value that is never used. [unreadVariable]
 state = wait_charging_state();
       ^
test/static_if.c:14:1: error: There is an unknown macro here somewhere. Configuration is required. If STATIC_IF is a macro then please configure it. [unknownMacro]
STATIC_IF(CONFIG_UNDEFINED) int this_var_is_extern;
^
test/static_if_error.c:25:0: information: Skipping configuration 'TEST_MACRO' since the value of 'TEST_MACRO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
TEST_MACRO(CONFIG_FOO) __maybe_unused int foo;
^
test/thermal.c:492:10: style: The scope of the variable 'new_temp' can be reduced. [variableScope]
 uint8_t new_temp;
         ^
test/usb_pd.c:96:11: style: Expression is always true because 'else if' condition is opposite to previous condition at line 93. [multiCondition]
 else if (!pd_port[port].host_mode)
          ^
test/usb_pd.c:93:24: note: first condition
 else if (pd_port[port].host_mode)
                       ^
test/usb_pd.c:96:11: note: else if condition is opposite to first condition
 else if (!pd_port[port].host_mode)
          ^
test/usb_pd.c:332:0: information: Skipping configuration 'CONFIG_USB_PD_REV30;CONFIG_USB_PID' since the value of 'CONFIG_USB_PID' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 uint16_t expected_cap_pid = CONFIG_USB_PID;
^
test/usb_prl_noextended.c:346:6: style: The scope of the variable 'byte_len' can be reduced. [variableScope]
 int byte_len;
     ^
test/usb_prl_noextended.c:347:6: style: The scope of the variable 'nw' can be reduced. [variableScope]
 int nw;
     ^
test/usb_prl_noextended.c:520:6: style: The scope of the variable 'data_obj_in_bytes' can be reduced. [variableScope]
 int data_obj_in_bytes;
     ^
test/usb_prl_noextended.c:521:11: style: The scope of the variable 'td' can be reduced. [variableScope]
 uint32_t td;
          ^
test/usb_prl_noextended.c:589:6: style: The scope of the variable 'nw' can be reduced. [variableScope]
 int nw;
     ^
test/usb_prl_noextended.c:590:6: style: The scope of the variable 'byte_len' can be reduced. [variableScope]
 int byte_len;
     ^
test/usb_prl_noextended.c:592:11: style: The scope of the variable 'td' can be reduced. [variableScope]
 uint32_t td;
          ^
test/usb_prl_noextended.c:1083:6: style: The scope of the variable 'len' can be reduced. [variableScope]
 int len;
     ^
test/usb_prl_old.c:346:6: style: The scope of the variable 'byte_len' can be reduced. [variableScope]
 int byte_len;
     ^
test/usb_prl_old.c:347:6: style: The scope of the variable 'nw' can be reduced. [variableScope]
 int nw;
     ^
test/usb_prl_old.c:520:6: style: The scope of the variable 'data_obj_in_bytes' can be reduced. [variableScope]
 int data_obj_in_bytes;
     ^
test/usb_prl_old.c:521:11: style: The scope of the variable 'td' can be reduced. [variableScope]
 uint32_t td;
          ^
test/usb_prl_old.c:589:6: style: The scope of the variable 'nw' can be reduced. [variableScope]
 int nw;
     ^
test/usb_prl_old.c:590:6: style: The scope of the variable 'byte_len' can be reduced. [variableScope]
 int byte_len;
     ^
test/usb_prl_old.c:592:11: style: The scope of the variable 'td' can be reduced. [variableScope]
 uint32_t td;
          ^
test/usb_prl_old.c:1083:6: style: The scope of the variable 'len' can be reduced. [variableScope]
 int len;
     ^
test/usb_sm_framework_h3.c:581:9: style: Variable 'i' is reassigned a value before the old one has been used. [redundantAssignment]
 for (i = 33; i < SEQUENCE_SIZE; i++)
        ^
test/usb_sm_framework_h3.c:579:44: note: i is assigned
 TEST_EQ(sm[port].seq[i], ENTER_A4, "%d"); ++i;
                                           ^
test/usb_sm_framework_h3.c:581:9: note: i is overwritten
 for (i = 33; i < SEQUENCE_SIZE; i++)
        ^
test/usb_test/device_configuration.c:107:13: style: The if condition is the same as the previous if condition [duplicateCondition]
 if (optind < argc) {
            ^
test/usb_test/device_configuration.c:97:13: note: First condition
 if (optind < argc) {
            ^
test/usb_test/device_configuration.c:107:13: note: Second condition
 if (optind < argc) {
            ^
test/utils_str.c:201:2: warning:inconclusive: The buffer 'dest' may not be null-terminated after the call to strncpy(). [terminateStrncpy]
 strncpy(dest, "testtesttest", 10);
 ^
test/utils_str.c:259:13: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
 TEST_CHECK(snprintf(buffer, sizeof(buffer), "%u", 1234) == 4);
            ^
test/utils_str.c:209:14: warning: Unnecessary comparison of static strings. [staticStringCompare]
 TEST_ASSERT(strncmp("123", "123", 8) == 0);
             ^
test/utils_str.c:210:14: warning: Unnecessary comparison of static strings. [staticStringCompare]
 TEST_ASSERT(strncmp("789", "456", 8) > 0);
             ^
test/utils_str.c:211:14: warning: Unnecessary comparison of static strings. [staticStringCompare]
 TEST_ASSERT(strncmp("abc", "abd", 4) < 0);
             ^
test/utils_str.c:212:14: warning: Unnecessary comparison of static strings. [staticStringCompare]
 TEST_ASSERT(strncmp("abc", "abd", 2) == 0);
             ^
test/utils_str.c:232:14: warning: Unnecessary comparison of static strings. [staticStringCompare]
 TEST_CHECK((strcasecmp("test string", "TEST strIng") == 0) &&
             ^
test/utils_str.c:233:7: warning: Unnecessary comparison of static strings. [staticStringCompare]
     (strcasecmp("test123!@#", "TesT123!@#") == 0) &&
      ^
test/utils_str.c:234:7: warning: Unnecessary comparison of static strings. [staticStringCompare]
     (strcasecmp("lower", "UPPER") != 0));
      ^
test/utils_str.c:239:14: warning: Unnecessary comparison of static strings. [staticStringCompare]
 TEST_CHECK((strncasecmp("test string", "TEST str", 4) == 0) &&
             ^
test/utils_str.c:240:7: warning: Unnecessary comparison of static strings. [staticStringCompare]
     (strncasecmp("test string", "TEST str", 8) == 0) &&
      ^
test/utils_str.c:241:7: warning: Unnecessary comparison of static strings. [staticStringCompare]
     (strncasecmp("test123!@#", "TesT321!@#", 5) != 0) &&
      ^
test/utils_str.c:242:7: warning: Unnecessary comparison of static strings. [staticStringCompare]
     (strncasecmp("test123!@#", "TesT321!@#", 4) == 0) &&
      ^
test/utils_str.c:243:7: warning: Unnecessary comparison of static strings. [staticStringCompare]
     (strncasecmp("1test123!@#", "1TesT321!@#", 5) == 0) &&
      ^
test/utils_str.c:244:7: warning: Unnecessary comparison of static strings. [staticStringCompare]
     (strncasecmp("1test123", "teststr", 0) == 0));
      ^
third_party/boringssl/common/aes-gcm.c:146:10: style: The scope of the variable 'rem' can be reduced. [variableScope]
  size_t rem, nlo, nhi;
         ^
third_party/boringssl/common/aes-gcm.c:201:7: style: The scope of the variable 'cnt' can be reduced. [variableScope]
  int cnt;
      ^
third_party/boringssl/common/aes-gcm.c:202:15: style: The scope of the variable 'nlo' can be reduced. [variableScope]
  size_t rem, nlo, nhi;
              ^
third_party/boringssl/common/aes-gcm.c:202:20: style: The scope of the variable 'nhi' can be reduced. [variableScope]
  size_t rem, nlo, nhi;
                   ^
third_party/boringssl/common/aes-gcm.c:420:20: style: Condition 'pmull_capable()' is always false [knownConditionTrueFalse]
  if (pmull_capable()) {
                   ^
third_party/boringssl/common/aes-gcm.c:427:19: style: Condition 'neon_capable()' is always false [knownConditionTrueFalse]
  if (neon_capable()) {
                  ^
third_party/boringssl/common/aes.c:636:12: style: The scope of the variable 'temp' can be reduced. [variableScope]
  uint32_t temp;
           ^
third_party/incbin/incbin.c:238:22: style: Local variable 'size' shadows outer variable [shadowVariable]
                long size, i;
                     ^
third_party/incbin/incbin.c:207:16: note: Shadowed declaration
        size_t size = 0;
               ^
third_party/incbin/incbin.c:238:22: note: Shadow variable
                long size, i;
                     ^
third_party/incbin/incbin.c:238:28: style: Local variable 'i' shadows outer variable [shadowVariable]
                long size, i;
                           ^
third_party/incbin/incbin.c:106:14: note: Shadowed declaration
    int ret, i, paths, files = 0, style = kCamel;
             ^
third_party/incbin/incbin.c:238:28: note: Shadow variable
                long size, i;
                           ^
third_party/incbin/test/asserts.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
third_party/incbin/test/asserts.c:5:0: information: Skipping configuration 'INCBIN_OUTPUT_SECTION' since the value of 'INCBIN_OUTPUT_SECTION' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
INCBIN(Lorem, "loremipsum.txt");
^
third_party/incbin/test/asserts.c:6:0: information: Skipping configuration 'INCBIN_OUTPUT_SECTION' since the value of 'INCBIN_OUTPUT_SECTION' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
INCBIN(Onebyte, "onebyte.txt");
^
third_party/incbin/test/asserts.c:7:0: information: Skipping configuration 'INCBIN_OUTPUT_SECTION' since the value of 'INCBIN_OUTPUT_SECTION' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
INCBIN(Sevenbytes, "sevenbytes.txt");
^
third_party/incbin/test/asserts.c:5:0: information: Skipping configuration 'INCBIN_OUTPUT_SECTION;__APPLE__' since the value of 'INCBIN_OUTPUT_SECTION' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
INCBIN(Lorem, "loremipsum.txt");
^
third_party/incbin/test/asserts.c:6:0: information: Skipping configuration 'INCBIN_OUTPUT_SECTION;__APPLE__' since the value of 'INCBIN_OUTPUT_SECTION' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
INCBIN(Onebyte, "onebyte.txt");
^
third_party/incbin/test/asserts.c:7:0: information: Skipping configuration 'INCBIN_OUTPUT_SECTION;__APPLE__' since the value of 'INCBIN_OUTPUT_SECTION' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
INCBIN(Sevenbytes, "sevenbytes.txt");
^
third_party/incbin/test/asserts.c:5:0: information: Skipping configuration 'INCBIN_PREFIX' since the value of 'INCBIN_PREFIX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
INCBIN(Lorem, "loremipsum.txt");
^
third_party/incbin/test/asserts.c:6:0: information: Skipping configuration 'INCBIN_PREFIX' since the value of 'INCBIN_PREFIX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
INCBIN(Onebyte, "onebyte.txt");
^
third_party/incbin/test/asserts.c:7:0: information: Skipping configuration 'INCBIN_PREFIX' since the value of 'INCBIN_PREFIX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
INCBIN(Sevenbytes, "sevenbytes.txt");
^
third_party/incbin/test/asserts.c:5:0: information: Skipping configuration 'INCBIN_STYLE' since the value of 'INCBIN_STYLE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
INCBIN(Lorem, "loremipsum.txt");
^
third_party/incbin/test/asserts.c:6:0: information: Skipping configuration 'INCBIN_STYLE' since the value of 'INCBIN_STYLE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
INCBIN(Onebyte, "onebyte.txt");
^
third_party/incbin/test/asserts.c:7:0: information: Skipping configuration 'INCBIN_STYLE' since the value of 'INCBIN_STYLE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
INCBIN(Sevenbytes, "sevenbytes.txt");
^
third_party/sha2/sha256.c:137:4: error: Array 'w[64]' accessed at index 64, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+1);
   ^
third_party/sha2/sha256.c:138:4: error: Array 'w[64]' accessed at index 65, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+2);
   ^
third_party/sha2/sha256.c:139:4: error: Array 'w[64]' accessed at index 66, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+3);
   ^
third_party/sha2/sha256.c:139:4: error: Array 'w[64]' accessed at index 64, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+3);
   ^
third_party/sha2/sha256.c:140:4: error: Array 'w[64]' accessed at index 67, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+4);
   ^
third_party/sha2/sha256.c:140:4: error: Array 'w[64]' accessed at index 65, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+4);
   ^
third_party/sha2/sha256.c:141:4: error: Array 'w[64]' accessed at index 68, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+5);
   ^
third_party/sha2/sha256.c:141:4: error: Array 'w[64]' accessed at index 66, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+5);
   ^
third_party/sha2/sha256.c:142:4: error: Array 'w[64]' accessed at index 69, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+6);
   ^
third_party/sha2/sha256.c:142:4: error: Array 'w[64]' accessed at index 67, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+6);
   ^
third_party/sha2/sha256.c:143:4: error: Array 'w[64]' accessed at index 70, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+7);
   ^
third_party/sha2/sha256.c:143:4: error: Array 'w[64]' accessed at index 68, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_SCR(j+7);
   ^
third_party/sha2/sha256.c:156:4: error: Array 'sha256_k[64]' accessed at index 64, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(7, 0, 1, 2, 3, 4, 5, 6, j+1);
   ^
third_party/sha2/sha256.c:156:4: error: Array 'w[64]' accessed at index 64, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(7, 0, 1, 2, 3, 4, 5, 6, j+1);
   ^
third_party/sha2/sha256.c:157:4: error: Array 'sha256_k[64]' accessed at index 65, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(6, 7, 0, 1, 2, 3, 4, 5, j+2);
   ^
third_party/sha2/sha256.c:157:4: error: Array 'w[64]' accessed at index 65, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(6, 7, 0, 1, 2, 3, 4, 5, j+2);
   ^
third_party/sha2/sha256.c:158:4: error: Array 'sha256_k[64]' accessed at index 66, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(5, 6, 7, 0, 1, 2, 3, 4, j+3);
   ^
third_party/sha2/sha256.c:158:4: error: Array 'w[64]' accessed at index 66, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(5, 6, 7, 0, 1, 2, 3, 4, j+3);
   ^
third_party/sha2/sha256.c:159:4: error: Array 'sha256_k[64]' accessed at index 67, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(4, 5, 6, 7, 0, 1, 2, 3, j+4);
   ^
third_party/sha2/sha256.c:159:4: error: Array 'w[64]' accessed at index 67, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(4, 5, 6, 7, 0, 1, 2, 3, j+4);
   ^
third_party/sha2/sha256.c:160:4: error: Array 'sha256_k[64]' accessed at index 68, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(3, 4, 5, 6, 7, 0, 1, 2, j+5);
   ^
third_party/sha2/sha256.c:160:4: error: Array 'w[64]' accessed at index 68, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(3, 4, 5, 6, 7, 0, 1, 2, j+5);
   ^
third_party/sha2/sha256.c:161:4: error: Array 'sha256_k[64]' accessed at index 69, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(2, 3, 4, 5, 6, 7, 0, 1, j+6);
   ^
third_party/sha2/sha256.c:161:4: error: Array 'w[64]' accessed at index 69, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(2, 3, 4, 5, 6, 7, 0, 1, j+6);
   ^
third_party/sha2/sha256.c:162:4: error: Array 'sha256_k[64]' accessed at index 70, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(1, 2, 3, 4, 5, 6, 7, 0, j+7);
   ^
third_party/sha2/sha256.c:162:4: error: Array 'w[64]' accessed at index 70, which is out of bounds. [arrayIndexOutOfBounds]
   SHA256_EXP(1, 2, 3, 4, 5, 6, 7, 0, j+7);
   ^
util/comm-dev.c:80:3: warning: %d in format string (no. 4) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
  fprintf(stderr, "ioctl %d, errno %d (%s), EC result %d (%s)\n",
  ^
util/comm-dev.c:86:4: warning: %d in format string (no. 4) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   fprintf(stderr,
   ^
util/comm-dev.c:92:3: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
  fprintf(stderr, "EC result %d (%s)\n", s_cmd.result,
  ^
util/comm-dev.c:151:3: warning: %d in format string (no. 4) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
  fprintf(stderr, "ioctl %d, errno %d (%s), EC result %d (%s)\n",
  ^
util/comm-dev.c:157:4: warning: %d in format string (no. 4) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   fprintf(stderr,
   ^
util/comm-dev.c:165:4: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   fprintf(stderr, "EC result %d (%s)\n", s_cmd->result,
   ^
util/comm-dev.c:104:6: style: The scope of the variable 'r' can be reduced. [variableScope]
 int r;
     ^
util/comm-dev.c:179:6: style: The scope of the variable 'r' can be reduced. [variableScope]
 int r;
     ^
util/comm-host.c:147:3: error: Common realloc mistake: 'ec_outbuf' nulled but not freed upon failure [memleakOnRealloc]
  ec_outbuf = realloc(ec_outbuf, ec_max_outsize);
  ^
util/comm-host.c:148:3: error: Common realloc mistake: 'ec_inbuf' nulled but not freed upon failure [memleakOnRealloc]
  ec_inbuf = realloc(ec_inbuf, ec_max_insize);
  ^
util/comm-i2c.c:202:7: style: The scope of the variable 'buffer' can be reduced. [variableScope]
 char buffer[64];
      ^
util/comm-i2c.c:123:0: information: Skipping configuration 'DEBUG' since the value of 'DEBUG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(DEBUG)) {
^
util/comm-i2c.c:152:0: information: Skipping configuration 'DEBUG' since the value of 'DEBUG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 if (IS_ENABLED(DEBUG)) {
^
util/comm-mec_lpc.c:43:11: style: The scope of the variable 'temp' can be reduced. [variableScope]
 uint16_t temp[2];
          ^
util/comm-mec_lpc.c:152:7: style: Variable 'csum' is assigned a value that is never used. [unreadVariable]
 csum = 0;
      ^
util/comm-servo-spi.c:231:27: warning: The address of local variable 'hdr' might be accessed at non-zero index. [objectIndex]
  sum += ((uint8_t *)&hdr)[i];
                          ^
util/comm-servo-spi.c:231:22: note: Address of variable taken here.
  sum += ((uint8_t *)&hdr)[i];
                     ^
util/comm-servo-spi.c:231:27: note: The address of local variable 'hdr' might be accessed at non-zero index.
  sum += ((uint8_t *)&hdr)[i];
                          ^
util/comm-servo-spi.c:220:3: portability: %zd in format string (no. 2) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  fprintf(stderr, "response data_len %d is > %zd\n",
  ^
util/comm-servo-spi.c:83:6: style: The scope of the variable 'rlen' can be reduced. [variableScope]
 int rlen;
     ^
util/ec_flash.c:209:5: style: Redundant initialization for 'rv'. The initialized value is overwritten before it is read. [redundantInitialization]
 rv = ec_command(EC_CMD_FLASH_ERASE, 1, &p, sizeof(p), NULL, 0);
    ^
util/ec_flash.c:203:9: note: rv is initialized
 int rv = FLASH_ERASE_BUSY_RV;
        ^
util/ec_flash.c:209:5: note: rv is overwritten
 rv = ec_command(EC_CMD_FLASH_ERASE, 1, &p, sizeof(p), NULL, 0);
    ^
util/ec_flash.c:23:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
util/ec_flash.c:142:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
util/ec_sb_firmware_update.c:263:3: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
  printf("Load Firmware Image[%s] Error offset:%d size:%d\n",
  ^
util/ec_sb_firmware_update.c:599:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
util/ec_sb_firmware_update.c:765:6: style: Variable 'op' is assigned a value that is never used. [unreadVariable]
  op = OP_UNKNOWN;
     ^
util/ecst.c:435:6: warning: %d in format string (no. 1) requires 'int *' but the argument type is 'unsigned int *'. [invalidScanfArgType_int]
    (sscanf(hdr_args[arg_ind],
     ^
util/ecst.c:448:6: warning: %d in format string (no. 1) requires 'int *' but the argument type is 'unsigned int *'. [invalidScanfArgType_int]
    (sscanf(hdr_args[arg_ind],
     ^
util/ecst.c:462:6: error: Width 20 given in format string (no. 1) is larger than destination buffer 'main_str_temp[20]', use %19s to prevent overflowing it. [invalidScanfFormatWidth]
    (sscanf(hdr_args[arg_ind],
     ^
util/ecst.c:631:6: warning: %d in format string (no. 1) requires 'int *' but the argument type is 'unsigned int *'. [invalidScanfArgType_int]
    (sscanf(hdr_args[arg_ind],
     ^
util/ecst.c:967:6: warning: Repositioning operation performed on a file opened in append mode has no effect. [seekOnAppendedFile]
 if (fseek(dst_file, offset, origin) < 0)
     ^
util/ecst.c:242:6: warning: sscanf() without field width limits can crash with huge input data. [invalidscanf]
    (sscanf(hdr_args[arg_ind],
     ^
util/ecst.c:279:6: warning: sscanf() without field width limits can crash with huge input data. [invalidscanf]
    (sscanf(hdr_args[arg_ind],
     ^
util/ecst.c:351:11: warning: fscanf() without field width limits can crash with huge input data. [invalidscanf]
          fscanf(arg_file_pointer,
          ^
util/ecst.c:643:6: warning: sscanf() without field width limits can crash with huge input data. [invalidscanf]
    (sscanf(hdr_args[arg_ind],
     ^
util/ecst.c:172:8: style: The scope of the variable 'tmp_file' can be reduced. [variableScope]
 FILE *tmp_file;
       ^
util/ecst.c:1997:15: style: The scope of the variable 'bin_file_size_bytes' can be reduced. [variableScope]
 unsigned int bin_file_size_bytes;
              ^
util/ecst.c:2442:15: style: The scope of the variable 'crc' can be reduced. [variableScope]
 unsigned int crc;
              ^
util/ecst.c:1291:32: style:inconclusive: Function 'main_bin' argument 1 names different: declaration 'binary_parameters' definition 'binary_params'. [funcArgNamesDifferent]
int main_bin(struct tbinparams binary_params)
                               ^
util/ecst.h:248:32: note: Function 'main_bin' argument 1 names different: declaration 'binary_parameters' definition 'binary_params'.
int main_bin(struct tbinparams binary_parameters);
                               ^
util/ecst.c:1291:32: note: Function 'main_bin' argument 1 names different: declaration 'binary_parameters' definition 'binary_params'.
int main_bin(struct tbinparams binary_params)
                               ^
util/ecst.c:1838:39: style:inconclusive: Function 'calc_header_crc_bin' argument 1 names different: declaration 'pointer_header_checksum' definition 'p_cksum'. [funcArgNamesDifferent]
int calc_header_crc_bin(unsigned int *p_cksum)
                                      ^
util/ecst.h:259:39: note: Function 'calc_header_crc_bin' argument 1 names different: declaration 'pointer_header_checksum' definition 'p_cksum'.
int calc_header_crc_bin(unsigned int *pointer_header_checksum);
                                      ^
util/ecst.c:1838:39: note: Function 'calc_header_crc_bin' argument 1 names different: declaration 'pointer_header_checksum' definition 'p_cksum'.
int calc_header_crc_bin(unsigned int *p_cksum)
                                      ^
util/ecst.c:782:27: error: Uninitialized struct member: bin_params.anchor [uninitStructMember]
   main_status = main_bin(bin_params);
                          ^
util/ecst.c:782:27: error: Uninitialized struct member: bin_params.ext_anchor [uninitStructMember]
   main_status = main_bin(bin_params);
                          ^
util/ecst.c:782:27: error: Uninitialized struct member: bin_params.err_detec_cnf [uninitStructMember]
   main_status = main_bin(bin_params);
                          ^
util/ecst.c:782:27: error: Uninitialized struct member: bin_params.hdr_crc [uninitStructMember]
   main_status = main_bin(bin_params);
                          ^
util/ecst.c:782:27: error: Uninitialized struct member: bin_params.fw_crc [uninitStructMember]
   main_status = main_bin(bin_params);
                          ^
util/ectool.c:4654:7: style: Condition 'set' is always false [knownConditionTrueFalse]
  if (set) {
      ^
util/ectool.c:4638:12: note: Assignment 'set=0', assigned value is 0
 int set = 0;
           ^
util/ectool.c:4643:11: note: Assuming condition is false
 if (argc < 3) {
          ^
util/ectool.c:4654:7: note: Condition 'set' is always false
  if (set) {
      ^
util/ectool.c:4669:7: style: Condition 'set' is always false [knownConditionTrueFalse]
  if (set) {
      ^
util/ectool.c:4638:12: note: Assignment 'set=0', assigned value is 0
 int set = 0;
           ^
util/ectool.c:4643:11: note: Assuming condition is false
 if (argc < 3) {
          ^
util/ectool.c:4669:7: note: Condition 'set' is always false
  if (set) {
      ^
util/ectool.c:4684:7: style: Condition 'set' is always false [knownConditionTrueFalse]
  if (set) {
      ^
util/ectool.c:4638:12: note: Assignment 'set=0', assigned value is 0
 int set = 0;
           ^
util/ectool.c:4643:11: note: Assuming condition is false
 if (argc < 3) {
          ^
util/ectool.c:4684:7: note: Condition 'set' is always false
  if (set) {
      ^
util/ectool.c:4700:7: style: Condition 'set' is always false [knownConditionTrueFalse]
  if (set) {
      ^
util/ectool.c:4638:12: note: Assignment 'set=0', assigned value is 0
 int set = 0;
           ^
util/ectool.c:4643:11: note: Assuming condition is false
 if (argc < 3) {
          ^
util/ectool.c:4700:7: note: Condition 'set' is always false
  if (set) {
      ^
util/ectool.c:4716:7: style: Condition 'set' is always false [knownConditionTrueFalse]
  if (set) {
      ^
util/ectool.c:4638:12: note: Assignment 'set=0', assigned value is 0
 int set = 0;
           ^
util/ectool.c:4643:11: note: Assuming condition is false
 if (argc < 3) {
          ^
util/ectool.c:4716:7: note: Condition 'set' is always false
  if (set) {
      ^
util/ectool.c:4732:7: style: Condition 'set' is always false [knownConditionTrueFalse]
  if (set) {
      ^
util/ectool.c:4638:12: note: Assignment 'set=0', assigned value is 0
 int set = 0;
           ^
util/ectool.c:4643:11: note: Assuming condition is false
 if (argc < 3) {
          ^
util/ectool.c:4732:7: note: Condition 'set' is always false
  if (set) {
      ^
util/ectool.c:742:3: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
  printf("%s%d sleep line transitions.\n",
  ^
util/ectool.c:2032:3: portability: %zd in format string (no. 2) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  printf("Invalid seed '%s' is %zd bytes long instead of %d.\n",
  ^
util/ectool.c:7081:2: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
 printf("Read from I2C port %d at 0x%x offset 0x%x = 0x%x\n",
 ^
util/ectool.c:7139:2: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
 printf("Wrote 0x%x to I2C port %d at 0x%x offset 0x%x.\n",
 ^
util/ectool.c:7511:5: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    printf("%d (0x%x)       # %s\n", v, v,
    ^
util/ectool.c:7514:5: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
    printf("%d (0x%x)\n", v, v);
    ^
util/ectool.c:7847:2: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
 printf("  Design capacity:        %u mAh\n", val);
 ^
util/ectool.c:7852:2: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
 printf("  Last full charge:       %u mAh\n", val);
 ^
util/ectool.c:7857:2: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
 printf("  Design output voltage   %u mV\n", val);
 ^
util/ectool.c:7862:2: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
 printf("  Cycle count             %u\n", val);
 ^
util/ectool.c:7867:2: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
 printf("  Present voltage         %u mV\n", val);
 ^
util/ectool.c:7872:2: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
 printf("  Present current         %u mA\n", val);
 ^
util/ectool.c:7877:2: warning: %u in format string (no. 1) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
 printf("  Remaining capacity      %u mAh\n", val);
 ^
util/ectool.c:8598:4: warning: %u in format string (no. 2) requires 'unsigned int' but the argument type is 'signed int'. [invalidPrintfArgType_uint]
   fprintf(stderr, "%-12s   %u\n", param->name,
   ^
util/ectool.c:9290:3: warning: %lld in format string (no. 2) requires 'long long' but the argument type is 'unsigned long long'. [invalidPrintfArgType_sint]
  printf("%s.%03lld P%d ", time_str, -milliseconds,
  ^
util/ectool.c:672:11: style: The scope of the variable 'timeout' can be reduced. [variableScope]
 uint32_t timeout, transitions;
          ^
util/ectool.c:672:20: style: The scope of the variable 'transitions' can be reduced. [variableScope]
 uint32_t timeout, transitions;
                   ^
util/ectool.c:1081:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
util/ectool.c:1288:9: style: The scope of the variable 'r_size' can be reduced. [variableScope]
 size_t r_size;
        ^
util/ectool.c:1292:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv = 0;
     ^
util/ectool.c:1567:11: style: The scope of the variable 'val' can be reduced. [variableScope]
 uint32_t val;
          ^
util/ectool.c:1663:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
util/ectool.c:1716:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
util/ectool.c:1906:9: style: The scope of the variable 'stride' can be reduced. [variableScope]
 size_t stride, size;
        ^
util/ectool.c:2366:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i, rv, port;
     ^
util/ectool.c:3135:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
util/ectool.c:3173:12: style: The scope of the variable 'val' can be reduced. [variableScope]
 int i, n, val, rv;
           ^
util/ectool.c:3347:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i, num_fans;
     ^
util/ectool.c:4755:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i, r;
     ^
util/ectool.c:5014:14: style: The scope of the variable 'motion_status_string' can be reduced. [variableScope]
 const char *motion_status_string[2][2] = {
             ^
util/ectool.c:5460:43: style: The scope of the variable 'vector' can be reduced. [variableScope]
   struct ec_response_motion_sensor_data *vector;
                                          ^
util/ectool.c:5742:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
util/ectool.c:5952:6: style: The scope of the variable 'option_ok' can be reduced. [variableScope]
 int option_ok;
     ^
util/ectool.c:6267:17: style: The scope of the variable 'i' can be reduced. [variableScope]
 int num_ports, i, rv;
                ^
util/ectool.c:6562:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
util/ectool.c:7475:11: style: The scope of the variable 'p' can be reduced. [variableScope]
 uint32_t p, v;
          ^
util/ectool.c:7475:14: style: The scope of the variable 'v' can be reduced. [variableScope]
 uint32_t p, v;
             ^
util/ectool.c:7476:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i, r;
     ^
util/ectool.c:8069:7: style: The scope of the variable 'i' can be reduced. [variableScope]
  int i;
      ^
util/ectool.c:9262:6: style: The scope of the variable 'rv' can be reduced. [variableScope]
 int rv;
     ^
util/ectool.c:9263:21: style: The scope of the variable 'milliseconds' can be reduced. [variableScope]
 unsigned long long milliseconds;
                    ^
util/ectool.c:9264:11: style: The scope of the variable 'seconds' can be reduced. [variableScope]
 unsigned seconds;
          ^
util/ectool.c:9854:7: style: The scope of the variable 'val' can be reduced. [variableScope]
 long val;
      ^
util/ectool.c:5677:16: style: Local variable 'i' shadows outer variable [shadowVariable]
   int enable, i;
               ^
util/ectool.c:5002:6: note: Shadowed declaration
 int i, rv, status_only = (argc == 2);
     ^
util/ectool.c:5677:16: note: Shadow variable
   int enable, i;
               ^
util/ectool.c:7891:6: style: Local variable 'cmd_version' shadows outer function [shadowFunction]
 int cmd_version;
     ^
util/ectool.c:1036:5: note: Shadowed declaration
int cmd_version(int argc, char *argv[])
    ^
util/ectool.c:7891:6: note: Shadow variable
 int cmd_version;
     ^
util/ectool.c:2270:26: portability: 'buffer' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
  memcpy(p->data, buffer + offset, tlen);
                         ^
util/ectool.c:2861:6: error: Uninitialized variable: flash_p [uninitvar]
    &flash_p, sizeof(flash_p), &flash_r,
     ^
util/ectool.c:9258:12: style: union member 'Anonymous5::words' is never used. [unusedStructMember]
  uint32_t words[8]; /* space for the payload */
           ^
util/ectool.c:1205:13: style: Variable 'button' is assigned a value that is never used. [unreadVariable]
 int button = KEYBOARD_BUTTON_COUNT;
            ^
util/ectool.c:1292:9: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
 int rv = 0;
        ^
util/ectool.c:9119:6: style: Variable 'rv' is assigned a value that is never used. [unreadVariable]
  rv = ec_command(EC_CMD_PORT80_LAST_BOOT, 0,
     ^
util/ectool_keyscan.c:673:6: style: The if condition is the same as the previous if condition [duplicateCondition]
 if (!err)
     ^
util/ectool_keyscan.c:671:6: note: First condition
 if (!err)
     ^
util/ectool_keyscan.c:673:6: note: Second condition
 if (!err)
     ^
util/ectool_keyscan.c:455:4: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   printf("%2d  %7d:  ", i, item->beat);
   ^
util/gen_emmc_transfer_data.c:69:3: portability: %ld in format string (no. 2) requires 'long' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  fprintf(fout, "\t/* Block %d (%ld) */\n", blk, cnt);
  ^
util/gen_emmc_transfer_data.c:41:11: style: The scope of the variable 'crc16' can be reduced. [variableScope]
 uint16_t crc16;
          ^
util/gen_touchpad_hash.c:54:6: style: The scope of the variable 'rb' can be reduced. [variableScope]
 int rb;
     ^
util/genvif.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 22 configurations. Use --force to check all configurations. [toomanyconfigs]

^
util/genvif.c:927:29: style: Condition 'is_snk()' is always false [knownConditionTrueFalse]
 else if (is_src() && is_snk())
                            ^
util/genvif.c:933:17: style: Condition 'is_snk()' is always false [knownConditionTrueFalse]
 else if (is_snk())
                ^
util/genvif.c:309:4: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   fprintf(stderr, "ERROR: Invalid PDO_TYPE %d.\n", pdo);
   ^
util/genvif.c:329:3: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
  fprintf(stderr, "ERROR: Invalid PDO_TYPE %d.\n", pdo);
  ^
util/genvif.c:828:3: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
  fprintf(vif, "PD_Power_as_Source: %d\r\n", max_power);
  ^
util/genvif.c:831:3: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
  fprintf(vif, "Num_Src_PDOs: %d\r\n", src_pdo_cnt);
  ^
util/genvif.c:808:11: style: The scope of the variable 'max_power' can be reduced. [variableScope]
 uint32_t max_power = 0;
          ^
util/genvif.c:810:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
util/genvif.c:811:10: style: The scope of the variable 'pwr' can be reduced. [variableScope]
 int32_t pwr;
         ^
util/genvif.c:611:0: information: Skipping configuration 'CONFIG_NUM_FIXED_BATTERIES' since the value of 'CONFIG_NUM_FIXED_BATTERIES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 num = CONFIG_NUM_FIXED_BATTERIES;
^
util/genvif.c:887:3: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
  fprintf(vif, "PD_Power_as_Sink: %d\r\n", max_power);
  ^
util/genvif.c:693:0: information: Skipping configuration 'CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT' since the value of 'CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
 rp = CONFIG_USB_PD_MAX_SINGLE_SOURCE_CURRENT;
^
util/genvif.c:361:0: information: Skipping configuration 'CONFIG_USB_PD_MODEL_PART_NUMBER' since the value of 'CONFIG_USB_PD_MODEL_PART_NUMBER' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
     CONFIG_USB_PD_MODEL_PART_NUMBER);
^
util/iteflash.c:399:3: portability: %zd in format string (no. 2) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  fprintf(stderr, "%s: got too few bytes (%zd) in response\n",
  ^
util/iteflash.c:1442:2: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
 printf("Erasing flash...erase size=%d\n", len);
 ^
util/iteflash.c:1541:3: portability: %zd in format string (no. 1) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
  fprintf(stderr, "Cannot allocate %zd bytes\n", size);
  ^
util/iteflash.c:1552:2: portability: %zd in format string (no. 1) requires 'ssize_t' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
 printf("Reading %zd bytes at %#08zx\n", size, offset);
 ^
util/iteflash.c:2139:29: warning: Either the condition 'size' is redundant or there is possible null pointer dereference: size. [nullPointerRedundantCheck]
 conf->range_size = strtoul(size, &size, 16);
                            ^
util/iteflash.c:2140:7: note: Assuming that condition 'size' is not redundant
 if ((size && *size) || !conf->range_size) {
      ^
util/iteflash.c:2139:29: note: Null pointer dereference
 conf->range_size = strtoul(size, &size, 16);
                            ^
util/iteflash.c:1261:7: style: Variable 'res' is reassigned a value before the old one has been used. [redundantAssignment]
  res = i2c_byte_transfer(chnd, I2C_BLOCK_ADDR, buffer, 1, cnt);
      ^
util/iteflash.c:1260:7: note: res is assigned
  res = i2c_write_byte(chnd, 0x10, 0x20);
      ^
util/iteflash.c:1261:7: note: res is overwritten
  res = i2c_byte_transfer(chnd, I2C_BLOCK_ADDR, buffer, 1, cnt);
      ^
util/iteflash.c:169:8: style: The scope of the variable 'holder' can be reduced. [variableScope]
 void *holder;
       ^
util/iteflash.c:206:11: style: The scope of the variable 'extra_int' can be reduced. [variableScope]
 int ret, extra_int;
          ^
util/iteflash.c:1900:6: style: The scope of the variable 'err' can be reduced. [variableScope]
 int err;
     ^
util/iteflash.c:1924:6: style: The scope of the variable 'err' can be reduced. [variableScope]
 int err;
     ^
util/kconfig/conf.c:132:14: style: The scope of the variable 'def' can be reduced. [variableScope]
 const char *def;
             ^
util/kconfig/confdata.c:311:12: warning: The address of local variable 'line' might be accessed at non-zero index. [objectIndex]
 (*lineptr)[slen] = c;
           ^
util/kconfig/confdata.c:326:20: note: Address of variable taken here.
   if (add_byte(c, &line, slen, n) < 0)
                   ^
util/kconfig/confdata.c:326:20: note: Calling function 'add_byte', 2nd argument '&line' value is lifetime=line
   if (add_byte(c, &line, slen, n) < 0)
                   ^
util/kconfig/confdata.c:311:12: note: The address of local variable 'line' might be accessed at non-zero index.
 (*lineptr)[slen] = c;
           ^
util/kconfig/confdata.c:311:12: warning: The address of local variable 'line' might be accessed at non-zero index. [objectIndex]
 (*lineptr)[slen] = c;
           ^
util/kconfig/confdata.c:338:20: note: Address of variable taken here.
   if (add_byte(c, &line, slen, n) < 0)
                   ^
util/kconfig/confdata.c:338:20: note: Calling function 'add_byte', 2nd argument '&line' value is lifetime=line
   if (add_byte(c, &line, slen, n) < 0)
                   ^
util/kconfig/confdata.c:311:12: note: The address of local variable 'line' might be accessed at non-zero index.
 (*lineptr)[slen] = c;
           ^
util/kconfig/confdata.c:131:10: style: The scope of the variable 'ret' can be reduced. [variableScope]
 int fd, ret;
         ^
util/kconfig/confdata.c:617:9: style: The scope of the variable 'l' can be reduced. [variableScope]
 size_t l;
        ^
util/kconfig/confdata.c:689:9: style: The scope of the variable 'l' can be reduced. [variableScope]
 size_t l;
        ^
util/kconfig/confdata.c:770:38: style:inconclusive: Function 'conf_write_defconfig' argument 1 names different: declaration 'name' definition 'filename'. [funcArgNamesDifferent]
int conf_write_defconfig(const char *filename)
                                     ^
util/kconfig/lkc_proto.h:8:38: note: Function 'conf_write_defconfig' argument 1 names different: declaration 'name' definition 'filename'.
int conf_write_defconfig(const char *name);
                                     ^
util/kconfig/confdata.c:770:38: note: Function 'conf_write_defconfig' argument 1 names different: declaration 'name' definition 'filename'.
int conf_write_defconfig(const char *filename)
                                     ^
util/kconfig/expr.c:312:15: style: The scope of the variable 'tmp' can be reduced. [variableScope]
 struct expr *tmp;
              ^
util/kconfig/gconf.c:1327:9: style: Variable 'valid' is reassigned a value before the old one has been used. [redundantAssignment]
  valid = gtk_tree_model_iter_next(model2, child2);
        ^
util/kconfig/gconf.c:1308:12: note: valid is assigned
     valid = TRUE;
           ^
util/kconfig/gconf.c:1327:9: note: valid is overwritten
  valid = gtk_tree_model_iter_next(model2, child2);
        ^
util/kconfig/gconf.c:1219:15: style: The scope of the variable 'ret' can be reduced. [variableScope]
 GtkTreeIter *ret;
              ^
util/kconfig/gconf.c:1163:11: style: Local variable 'color' shadows outer variable [shadowVariable]
 GdkColor color;
          ^
util/kconfig/gconf.c:52:10: note: Shadowed declaration
GdkColor color;
         ^
util/kconfig/gconf.c:1163:11: note: Shadow variable
 GdkColor color;
          ^
util/kconfig/gconf.c:168:9: style: Variable 'widget' is assigned a value that is never used. [unreadVariable]
 widget = glade_xml_get_widget(xml, "toolbar1");
        ^
util/kconfig/lxdialog/textbox.c:75:14: style: Condition 'height>4' is always true [knownConditionTrueFalse]
  if (height > 4)
             ^
util/kconfig/lxdialog/textbox.c:70:13: note: Assuming that condition 'height<8' is not redundant
 if (height < TEXTBOX_HEIGTH_MIN || width < TEXTBOX_WIDTH_MIN)
            ^
util/kconfig/lxdialog/textbox.c:75:14: note: Condition 'height>4' is always true
  if (height > 4)
             ^
util/kconfig/lxdialog/textbox.c:82:13: style: Condition 'width>5' is always true [knownConditionTrueFalse]
  if (width > 5)
            ^
util/kconfig/lxdialog/textbox.c:70:43: note: Assuming that condition 'width<8' is not redundant
 if (height < TEXTBOX_HEIGTH_MIN || width < TEXTBOX_WIDTH_MIN)
                                          ^
util/kconfig/lxdialog/textbox.c:82:13: note: Condition 'width>5' is always true
  if (width > 5)
            ^
util/kconfig/lxdialog/util.c:371:6: style: The scope of the variable 'newl' can be reduced. [variableScope]
 int newl, cur_x, cur_y;
     ^
util/kconfig/lxdialog/util.c:371:12: style: The scope of the variable 'cur_x' can be reduced. [variableScope]
 int newl, cur_x, cur_y;
           ^
util/kconfig/lxdialog/util.c:371:19: style: The scope of the variable 'cur_y' can be reduced. [variableScope]
 int newl, cur_x, cur_y;
                  ^
util/kconfig/lxdialog/util.c:372:18: style: The scope of the variable 'room' can be reduced. [variableScope]
 int prompt_len, room, wlen;
                 ^
util/kconfig/lxdialog/util.c:372:24: style: The scope of the variable 'wlen' can be reduced. [variableScope]
 int prompt_len, room, wlen;
                       ^
util/kconfig/lxdialog/util.c:373:30: style: The scope of the variable 'word' can be reduced. [variableScope]
 char tempstr[MAX_LEN + 1], *word, *sp, *sp2, *newline_separator = 0;
                             ^
util/kconfig/lxdialog/util.c:373:42: style: The scope of the variable 'sp2' can be reduced. [variableScope]
 char tempstr[MAX_LEN + 1], *word, *sp, *sp2, *newline_separator = 0;
                                         ^
util/kconfig/lxdialog/util.c:373:48: style: The scope of the variable 'newline_separator' can be reduced. [variableScope]
 char tempstr[MAX_LEN + 1], *word, *sp, *sp2, *newline_separator = 0;
                                               ^
util/kconfig/lxdialog/util.c:500:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
util/kconfig/lxdialog/util.c:521:23: style: The scope of the variable 'c' can be reduced. [variableScope]
 int i, in_paren = 0, c;
                      ^
util/kconfig/lxdialog/util.c:628:26: style:inconclusive: Function 'item_set_data' argument 1 names different: declaration 'p' definition 'ptr'. [funcArgNamesDifferent]
void item_set_data(void *ptr)
                         ^
util/kconfig/lxdialog/dialog.h:145:26: note: Function 'item_set_data' argument 1 names different: declaration 'p' definition 'ptr'.
void item_set_data(void *p);
                         ^
util/kconfig/lxdialog/util.c:628:26: note: Function 'item_set_data' argument 1 names different: declaration 'p' definition 'ptr'.
void item_set_data(void *ptr)
                         ^
util/kconfig/mconf.c:649:6: style: The scope of the variable 'res' can be reduced. [variableScope]
 int res;
     ^
util/kconfig/mconf.c:428:14: style: Variable 'stpart.text' is assigned a value that is never used. [unreadVariable]
 stpart.text = str_get(&sttext);
             ^
util/kconfig/menu.c:653:8: style: Condition 'sym' is always true [knownConditionTrueFalse]
   if (sym)
       ^
util/kconfig/menu.c:648:6: note: Assuming that condition '!sym' is not redundant
 if (!sym || sym_get_tristate_value(menu->sym) == no)
     ^
util/kconfig/menu.c:653:8: note: Condition 'sym' is always true
   if (sym)
       ^
util/kconfig/menu.c:765:2: warning: Either the condition 'sym' is redundant or there is possible null pointer dereference: sym. [nullPointerRedundantCheck]
 for_all_properties(sym, prop, P_SYMBOL)
 ^
util/kconfig/menu.c:796:6: note: Assuming that condition 'sym' is not redundant
 if (sym && sym->name) {
     ^
util/kconfig/menu.c:812:25: note: Calling function 'get_symbol_prop', 1st argument 'sym' value is 0
 prop = get_symbol_prop(sym);
                        ^
util/kconfig/menu.c:765:2: note: Null pointer dereference
 for_all_properties(sym, prop, P_SYMBOL)
 ^
util/kconfig/menu.c:776:2: warning: Either the condition 'sym' is redundant or there is possible null pointer dereference: sym. [nullPointerRedundantCheck]
 for_all_properties(sym, prop, tok) {
 ^
util/kconfig/menu.c:796:6: note: Assuming that condition 'sym' is not redundant
 if (sym && sym->name) {
     ^
util/kconfig/menu.c:823:26: note: Calling function 'get_symbol_props_str', 2nd argument 'sym' value is 0
 get_symbol_props_str(r, sym, P_SELECT, "  Selects: ");
                         ^
util/kconfig/menu.c:776:2: note: Null pointer dereference
 for_all_properties(sym, prop, tok) {
 ^
util/kconfig/menu.c:809:2: warning: Either the condition 'sym' is redundant or there is possible null pointer dereference: sym. [nullPointerRedundantCheck]
 for_all_prompts(sym, prop)
 ^
util/kconfig/menu.c:796:6: note: Assuming that condition 'sym' is not redundant
 if (sym && sym->name) {
     ^
util/kconfig/menu.c:809:2: note: Null pointer dereference
 for_all_prompts(sym, prop)
 ^
util/kconfig/menu.c:824:6: warning: Either the condition 'sym' is redundant or there is possible null pointer dereference: sym. [nullPointerRedundantCheck]
 if (sym->rev_dep.expr) {
     ^
util/kconfig/menu.c:796:6: note: Assuming that condition 'sym' is not redundant
 if (sym && sym->name) {
     ^
util/kconfig/menu.c:824:6: note: Null pointer dereference
 if (sym->rev_dep.expr) {
     ^
util/kconfig/menu.c:831:6: warning: Either the condition 'sym' is redundant or there is possible null pointer dereference: sym. [nullPointerRedundantCheck]
 if (sym->implied.expr) {
     ^
util/kconfig/menu.c:796:6: note: Assuming that condition 'sym' is not redundant
 if (sym && sym->name) {
     ^
util/kconfig/menu.c:831:6: note: Null pointer dereference
 if (sym->implied.expr) {
     ^
util/kconfig/menu.c:704:9: style: The scope of the variable 'j' can be reduced. [variableScope]
 int i, j;
        ^
util/kconfig/menu.c:182:39: style:inconclusive: Function 'menu_add_visibility' argument 1 names different: declaration 'dep' definition 'expr'. [funcArgNamesDifferent]
void menu_add_visibility(struct expr *expr)
                                      ^
util/kconfig/lkc.h:73:39: note: Function 'menu_add_visibility' argument 1 names different: declaration 'dep' definition 'expr'.
void menu_add_visibility(struct expr *dep);
                                      ^
util/kconfig/menu.c:182:39: note: Function 'menu_add_visibility' argument 1 names different: declaration 'dep' definition 'expr'.
void menu_add_visibility(struct expr *expr)
                                      ^
util/kconfig/nconf.c:757:12: warning: Redundant assignment of 'prompt' to itself. [selfAssignment]
    prompt = prompt;
           ^
util/kconfig/nconf.c:1238:13: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
 int res, i = 0;
            ^
util/kconfig/nconf.gui.c:169:4: style: Variable 'x' is reassigned a value before the old one has been used. [redundantAssignment]
 x = startx + (int)temp;
   ^
util/kconfig/nconf.gui.c:161:5: note: x is assigned
  x = startx;
    ^
util/kconfig/nconf.gui.c:169:4: note: x is overwritten
 x = startx + (int)temp;
   ^
util/kconfig/nconf.gui.c:570:14: style: Redundant initialization for 'total_lines'. The initialized value is overwritten before it is read. [redundantInitialization]
 total_lines = get_line_no(text);
             ^
util/kconfig/nconf.gui.c:555:18: note: total_lines is initialized
 int total_lines = get_line_no(text);
                 ^
util/kconfig/nconf.gui.c:570:14: note: total_lines is overwritten
 total_lines = get_line_no(text);
             ^
util/kconfig/nconf.gui.c:244:8: style: The scope of the variable 'btn' can be reduced. [variableScope]
 char *btn;
       ^
util/kconfig/preprocess.c:400:10: warning: Either the condition 'new_argc>=16' is redundant or the array 'new_argv[16]' is accessed at index 16, which is out of bounds. [arrayIndexOutOfBoundsCond]
 new_argv[new_argc++] = prev;
         ^
util/kconfig/preprocess.c:388:17: note: Assuming that condition 'new_argc>=16' is not redundant
   if (new_argc >= FUNCTION_MAX_ARGS)
                ^
util/kconfig/preprocess.c:390:13: note: new_argc is incremented', new value is 16
   new_argv[new_argc++] = prev;
            ^
util/kconfig/preprocess.c:400:10: note: Array index out of bounds
 new_argv[new_argc++] = prev;
         ^
util/kconfig/preprocess.c:205:25: style: The scope of the variable 'f' can be reduced. [variableScope]
 const struct function *f;
                        ^
util/kconfig/preprocess.c:91:41: style:inconclusive: Function 'env_write_dep' argument 2 names different: declaration 'auto_conf_name' definition 'autoconfig_name'. [funcArgNamesDifferent]
void env_write_dep(FILE *f, const char *autoconfig_name)
                                        ^
util/kconfig/lkc_proto.h:57:41: note: Function 'env_write_dep' argument 2 names different: declaration 'auto_conf_name' definition 'autoconfig_name'.
void env_write_dep(FILE *f, const char *auto_conf_name);
                                        ^
util/kconfig/preprocess.c:91:41: note: Function 'env_write_dep' argument 2 names different: declaration 'auto_conf_name' definition 'autoconfig_name'.
void env_write_dep(FILE *f, const char *autoconfig_name)
                                        ^
util/kconfig/qconf.h:46:2: style: Class 'ConfigList' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
 ConfigList(ConfigView* p, const char *name = 0);
 ^
util/kconfig/qconf.h:196:2: style: Class 'ConfigLineEdit' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
 ConfigLineEdit(ConfigView* parent);
 ^
util/kconfig/qconf.h:212:2: style: Class 'ConfigView' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
 ConfigView(QWidget* parent, const char *name = 0);
 ^
util/kconfig/qconf.h:245:2: style: Class 'ConfigInfoView' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
 ConfigInfoView(QWidget* parent, const char *name = 0);
 ^
util/kconfig/qconf.h:275:2: style: Class 'ConfigSearchWindow' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
 ConfigSearchWindow(ConfigMainWindow* parent, const char *name = 0);
 ^
util/kconfig/qconf.h:50:10: style: C-style pointer casting [cstyleCast]
  return (ConfigView*)Parent::parent();
         ^
util/kconfig/qconf.h:90:10: style: C-style pointer casting [cstyleCast]
  return (ConfigItem *)children().first();
         ^
util/kconfig/qconf.h:148:10: style: C-style pointer casting [cstyleCast]
  return (ConfigList*)Parent::treeWidget();
         ^
util/kconfig/qconf.h:152:10: style: C-style pointer casting [cstyleCast]
  return (ConfigItem *)Parent::child(0);
         ^
util/kconfig/qconf.h:157:25: style: C-style pointer casting [cstyleCast]
  ConfigItem *_parent = (ConfigItem *)parent();
                        ^
util/kconfig/qconf.h:160:10: style: C-style pointer casting [cstyleCast]
   ret = (ConfigItem *)_parent->child(_parent->indexOfChild(this)+1);
         ^
util/kconfig/qconf.h:163:10: style: C-style pointer casting [cstyleCast]
   ret = (ConfigItem *)_treeWidget->topLevelItem(_treeWidget->indexOfTopLevelItem(this)+1);
         ^
util/kconfig/qconf.h:199:10: style: C-style pointer casting [cstyleCast]
  return (ConfigView*)Parent::parent();
         ^
util/kconfig/qconf.cc:227:12: style: C-style pointer casting [cstyleCast]
  for (i = (ConfigItem*)menu->data; i; i = i->nextItem)
           ^
util/kconfig/qconf.cc:241:14: style: C-style pointer casting [cstyleCast]
  nextItem = (ConfigItem*)menu->data;
             ^
util/kconfig/qconf.cc:387:21: style: C-style pointer casting [cstyleCast]
 ConfigItem* item = (ConfigItem*)menu->data;
                    ^
util/kconfig/qconf.cc:405:21: style: C-style pointer casting [cstyleCast]
 ConfigItem* item = (ConfigItem*)selectedItems().first();
                    ^
util/kconfig/qconf.cc:441:10: style: C-style pointer casting [cstyleCast]
  item = (ConfigItem *)topLevelItem(0);
         ^
util/kconfig/qconf.cc:659:9: style: C-style pointer casting [cstyleCast]
 last = (ConfigItem*)parent->topLevelItem(0);
        ^
util/kconfig/qconf.cc:663:39: style: C-style pointer casting [cstyleCast]
  item = last ? last->nextSibling() : (ConfigItem*)parent->topLevelItem(0);
                                      ^
util/kconfig/qconf.cc:697:11: style: C-style pointer casting [cstyleCast]
   last = (ConfigItem*)parent->topLevelItem(0);
          ^
util/kconfig/qconf.cc:724:9: style: C-style pointer casting [cstyleCast]
 item = (ConfigItem*)i;
        ^
util/kconfig/qconf.cc:771:21: style: C-style pointer casting [cstyleCast]
 ConfigItem* item = (ConfigItem*)itemAt(p);
                    ^
util/kconfig/qconf.cc:832:21: style: C-style pointer casting [cstyleCast]
 ConfigItem* item = (ConfigItem*)itemAt(p);
                    ^
util/kconfig/qconf.cc:862:21: style: C-style pointer casting [cstyleCast]
 ConfigItem* item = (ConfigItem *)currentItem();
                    ^
util/kconfig/qconf.cc:1663:9: style: C-style pointer casting [cstyleCast]
 item = (ConfigItem*)menuList->selectedItems().first();
        ^
util/kconfig/qconf.cc:1671:10: style: C-style pointer casting [cstyleCast]
  item = (ConfigItem*)item->parent();
         ^
util/kconfig/qconf.cc:426:15: style: The scope of the variable 'item' can be reduced. [variableScope]
  ConfigItem* item;
              ^
util/kconfig/qconf.cc:549:14: style: The scope of the variable 'item' can be reduced. [variableScope]
 ConfigItem* item;
             ^
util/kconfig/qconf.cc:707:43: style:inconclusive: Function 'keyPressEvent' argument 1 names different: declaration 'e' definition 'ev'. [funcArgNamesDifferent]
void ConfigList::keyPressEvent(QKeyEvent* ev)
                                          ^
util/kconfig/qconf.h:55:32: note: Function 'keyPressEvent' argument 1 names different: declaration 'e' definition 'ev'.
 void keyPressEvent(QKeyEvent *e);
                               ^
util/kconfig/qconf.cc:707:43: note: Function 'keyPressEvent' argument 1 names different: declaration 'e' definition 'ev'.
void ConfigList::keyPressEvent(QKeyEvent* ev)
                                          ^
util/kconfig/qconf.cc:1043:43: style:inconclusive: Function 'setInfo' argument 1 names different: declaration 'menu' definition 'm'. [funcArgNamesDifferent]
void ConfigInfoView::setInfo(struct menu *m)
                                          ^
util/kconfig/qconf.h:249:28: note: Function 'setInfo' argument 1 names different: declaration 'menu' definition 'm'.
 void setInfo(struct menu *menu);
                           ^
util/kconfig/qconf.cc:1043:43: note: Function 'setInfo' argument 1 names different: declaration 'menu' definition 'm'.
void ConfigInfoView::setInfo(struct menu *m)
                                          ^
util/kconfig/qconf.cc:426:15: style: Local variable 'item' shadows outer argument [shadowArgument]
  ConfigItem* item;
              ^
util/kconfig/qconf.cc:418:41: note: Shadowed declaration
void ConfigList::updateList(ConfigItem* item)
                                        ^
util/kconfig/qconf.cc:426:15: note: Shadow variable
  ConfigItem* item;
              ^
util/kconfig/qconf.cc:312:6: style: Unused variable: i [unusedVariable]
 int i;
     ^
util/kconfig/symbol.c:1199:14: style: Variable 'stack.expr' is reassigned a value before the old one has been used. [redundantAssignment]
  stack.expr = NULL;
             ^
util/kconfig/symbol.c:1195:14: note: stack.expr is assigned
  stack.expr = &prop->expr;
             ^
util/kconfig/symbol.c:1199:14: note: stack.expr is overwritten
  stack.expr = NULL;
             ^
util/kconfig/symbol.c:697:17: style: The scope of the variable 'ds' can be reduced. [variableScope]
 struct symbol *ds;
                ^
util/kconfig/symbol.c:1039:23: style: The scope of the variable 'next_sym' can be reduced. [variableScope]
 struct symbol *sym, *next_sym;
                      ^
util/kconfig/symbol.c:1248:19: style: The scope of the variable 'prop' can be reduced. [variableScope]
 struct property *prop;
                  ^
util/kconfig/symbol.c:1279:20: style: The scope of the variable 'propp' can be reduced. [variableScope]
 struct property **propp;
                   ^
util/kconfig/symbol.c:473:61: style:inconclusive: Function 'sym_tristate_within_range' argument 2 names different: declaration 'tri' definition 'val'. [funcArgNamesDifferent]
bool sym_tristate_within_range(struct symbol *sym, tristate val)
                                                            ^
util/kconfig/lkc_proto.h:39:60: note: Function 'sym_tristate_within_range' argument 2 names different: declaration 'tri' definition 'val'.
bool sym_tristate_within_range(struct symbol *sym,tristate tri);
                                                           ^
util/kconfig/symbol.c:473:61: note: Function 'sym_tristate_within_range' argument 2 names different: declaration 'tri' definition 'val'.
bool sym_tristate_within_range(struct symbol *sym, tristate val)
                                                            ^
util/kconfig/symbol.c:494:58: style:inconclusive: Function 'sym_set_tristate_value' argument 2 names different: declaration 'tri' definition 'val'. [funcArgNamesDifferent]
bool sym_set_tristate_value(struct symbol *sym, tristate val)
                                                         ^
util/kconfig/lkc_proto.h:40:57: note: Function 'sym_set_tristate_value' argument 2 names different: declaration 'tri' definition 'val'.
bool sym_set_tristate_value(struct symbol *sym,tristate tri);
                                                        ^
util/kconfig/symbol.c:494:58: note: Function 'sym_set_tristate_value' argument 2 names different: declaration 'tri' definition 'val'.
bool sym_set_tristate_value(struct symbol *sym, tristate val)
                                                         ^
util/kconfig/symbol.c:553:55: style:inconclusive: Function 'sym_string_valid' argument 2 names different: declaration 'newval' definition 'str'. [funcArgNamesDifferent]
bool sym_string_valid(struct symbol *sym, const char *str)
                                                      ^
util/kconfig/lkc_proto.h:42:55: note: Function 'sym_string_valid' argument 2 names different: declaration 'newval' definition 'str'.
bool sym_string_valid(struct symbol *sym, const char *newval);
                                                      ^
util/kconfig/symbol.c:553:55: note: Function 'sym_string_valid' argument 2 names different: declaration 'newval' definition 'str'.
bool sym_string_valid(struct symbol *sym, const char *str)
                                                      ^
util/kconfig/util.c:54:9: style: The scope of the variable 'l' can be reduced. [variableScope]
 size_t l;
        ^
util/lbcc.c:69:1: error: syntax error [syntaxError]
enum lightbyte_opcode {
^
util/stm32mon.c:1329:3: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
  fprintf(stderr, "Cannot allocate %d bytes\n", size);
  ^
util/stm32mon.c:1340:2: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
 printf("Reading %d bytes at 0x%08x\n", size, offset);
 ^
util/stm32mon.c:563:6: style: The scope of the variable 'res' can be reduced. [variableScope]
 int res;
     ^
util/stm32mon.c:765:11: style: The scope of the variable 'chipid' can be reduced. [variableScope]
 uint16_t chipid;
          ^
util/stm32mon.c:766:20: style: The scope of the variable 'def' can be reduced. [variableScope]
 struct stm32_def *def;
                   ^
util/stm32mon.c:841:11: style: The scope of the variable 'i' can be reduced. [variableScope]
 int res, i;
          ^
util/stm32mon.c:899:6: style: The scope of the variable 'res' can be reduced. [variableScope]
 int res;
     ^
util/stm32mon.c:935:11: style: The scope of the variable 'cnt' can be reduced. [variableScope]
 uint32_t cnt;
          ^
util/stm32mon.c:1267:6: style: The scope of the variable 'i' can be reduced. [variableScope]
 int i;
     ^
util/stm32mon.c:490:11: style: Local variable 'mode' shadows outer variable [shadowVariable]
 uint32_t mode = SPI_MODE_0;
          ^
util/stm32mon.c:263:3: note: Shadowed declaration
} mode = MODE_SERIAL;
  ^
util/stm32mon.c:490:11: note: Shadow variable
 uint32_t mode = SPI_MODE_0;
          ^
util/stm32mon.c:1191:11: style: Local variable 'offset' shadows outer variable [shadowVariable]
 uint32_t offset = addr - otp_end_addr;
          ^
util/stm32mon.c:281:10: note: Shadowed declaration
uint32_t offset = 0x08000000, length = 0;
         ^
util/stm32mon.c:1191:11: note: Shadow variable
 uint32_t offset = addr - otp_end_addr;
          ^
util/stm32mon.c:912:11: style: Variable 'addr_be' is assigned a value that is never used. [unreadVariable]
  addr_be = htonl(address);
          ^
util/stm32mon.c:931:10: style: Variable 'res' is assigned a value that is never used. [unreadVariable]
 int res = 0;
         ^
util/stm32mon.c:948:12: style: Variable 'addr_be' is assigned a value that is never used. [unreadVariable]
   addr_be = htonl(address);
           ^
util/stm32mon.c:1024:12: style: Variable 'count_be' is assigned a value that is never used. [unreadVariable]
  count_be = htons(count - 1);
           ^
util/usb_if.c:102:28: style:inconclusive: Function 'usb_findit' argument 1 names different: declaration 'serialno' definition 'serial'. [funcArgNamesDifferent]
int usb_findit(const char *serial, uint16_t vid, uint16_t pid,
                           ^
util/usb_if.h:28:28: note: Function 'usb_findit' argument 1 names different: declaration 'serialno' definition 'serial'.
int usb_findit(const char *serialno, uint16_t vid, uint16_t pid,
                           ^
util/usb_if.c:102:28: note: Function 'usb_findit' argument 1 names different: declaration 'serialno' definition 'serial'.
int usb_findit(const char *serial, uint16_t vid, uint16_t pid,
                           ^
util/uut/main.c:229:4: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   printf("\r[%d%%] %d/%d", percent, total, file_size);
   ^
util/uut/main.c:229:4: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   printf("\r[%d%%] %d/%d", percent, total, file_size);
   ^
util/uut/main.c:229:4: warning: %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   printf("\r[%d%%] %d/%d", percent, total, file_size);
   ^
util/uut/main.c:257:4: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   printf("\r[%d%%] %d/%d", percent, total, file_size);
   ^
util/uut/main.c:257:4: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   printf("\r[%d%%] %d/%d", percent, total, file_size);
   ^
util/uut/main.c:257:4: warning: %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   printf("\r[%d%%] %d/%d", percent, total, file_size);
   ^
util/uut/main.c:313:3: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
  fprintf(stderr, "Cannot allocate %d bytes\n", size);
  ^
util/uut/main.c:415:3: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
  printf("Write file %s at %d with %d bytes\n",
  ^
util/uut/main.c:415:3: warning: %d in format string (no. 3) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
  printf("Write file %s at %d with %d bytes\n",
  ^
util/uut/main.c:430:4: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   printf("Read %d bytes from flash...\n", flash_size);
   ^
util/uut/main.c:556:8: warning: %d in format string (no. 1) requires 'int *' but the argument type is 'unsigned int *'. [invalidScanfArgType_int]
   if (sscanf(optarg, "%du", &baudrate) == 0)
       ^
util/uut/main.c:191:54: style: The scope of the variable 'seg' can be reduced. [variableScope]
 uint32_t addr, chunk_remain, file_seg, flash_index, seg;
                                                     ^
util/uut/main.c:347:7: style: The scope of the variable 'aux_buf' can be reduced. [variableScope]
 char aux_buf[MAX_FILE_NAME_SIZE];
      ^
util/uut/main.c:348:16: style: Variable 'size' is assigned a value that is never used. [unreadVariable]
 uint32_t size = 0;
               ^
util/uut/main.c:349:16: style: Variable 'addr' is assigned a value that is never used. [unreadVariable]
 uint32_t addr = 0;
               ^
util/uut/opr.c:226:2: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
 DISPLAY_MSG(("Writing [%d] bytes in [%d] packets\n", size,
 ^
util/uut/opr.c:226:2: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
 DISPLAY_MSG(("Writing [%d] bytes in [%d] packets\n", size,
 ^
util/uut/opr.c:308:2: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
 DISPLAY_MSG(("Reading [%d] bytes in [%d] packets\n", size,
 ^
util/uut/opr.c:308:2: warning: %d in format string (no. 2) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
 DISPLAY_MSG(("Reading [%d] bytes in [%d] packets\n", size,
 ^
util/uut/opr.c:472:4: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   printf("SR_OK: Baud rate - %d, resp_buf - 0x%x\n",
   ^
util/uut/opr.c:477:4: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   printf("SR_WRONG_DATA: Baud rate - %d, resp_buf - "
   ^
util/uut/opr.c:482:4: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   printf("SR_TIMEOUT: Baud rate - %d, resp_buf - 0x%x\n",
   ^
util/uut/opr.c:488:4: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   printf("SR_ERROR: Baud rate - %d, resp_buf - 0x%x\n",
   ^
util/uut/opr.c:493:4: warning: %d in format string (no. 1) requires 'int' but the argument type is 'unsigned int'. [invalidPrintfArgType_sint]
   printf("Unknown error code: Baud rate - %d, resp_buf - "
   ^
util/uut/opr.c:215:11: style: The scope of the variable 'write_size' can be reduced. [variableScope]
 uint32_t write_size, size_remain;
          ^
util/uut/opr.c:292:11: style: The scope of the variable 'bytes_left' can be reduced. [variableScope]
 uint32_t bytes_left;
          ^
util/uut/opr.c:293:11: style: The scope of the variable 'read_size' can be reduced. [variableScope]
 uint32_t read_size;
          ^
common/usb_pd_protocol.c:1254:32: error: Null pointer dereference: data [ctunullpointer]
 memcpy(&pd[port].vdo_data[1], data,
                               ^
common/usb_pd_protocol.c:2384:15: note: Calling function pd_send_vdm, 4th argument is null
   pd_send_vdm(port, supported_modes[i].svid,
              ^
common/usb_pd_protocol.c:2112:2: note: Calling function queue_vdm, 3rd argument is null
 queue_vdm(port, pd[port].vdo_data, data, count, TCPC_TX_SOP);
 ^
common/usb_pd_protocol.c:1254:32: note: Dereferencing argument data that is null
 memcpy(&pd[port].vdo_data[1], data,
                               ^
util/kconfig/menu.c:765:2: warning: Null pointer dereference: sym [ctunullpointer]
 for_all_properties(sym, prop, P_SYMBOL)
 ^
util/kconfig/menu.c:796:6: note: Assuming that condition 'sym' is not redundant

     ^
util/kconfig/menu.c:812:24: note: Calling function get_symbol_prop, 1st argument is null
 prop = get_symbol_prop(sym);
                       ^
util/kconfig/menu.c:765:2: note: Dereferencing argument sym that is null
 for_all_properties(sym, prop, P_SYMBOL)
 ^
util/kconfig/menu.c:776:2: warning: Null pointer dereference: sym [ctunullpointer]
 for_all_properties(sym, prop, tok) {
 ^
util/kconfig/menu.c:796:6: note: Assuming that condition 'sym' is not redundant

     ^
util/kconfig/menu.c:823:22: note: Calling function get_symbol_props_str, 2nd argument is null
 get_symbol_props_str(r, sym, P_SELECT, "  Selects: ");
                     ^
util/kconfig/menu.c:776:2: note: Dereferencing argument sym that is null
 for_all_properties(sym, prop, tok) {
 ^
common/aes-gcm.c:514:0: style: The function 'CRYPTO_gcm128_aad' is never used. [unusedFunction]

^
driver/fingerprint/fpc/libfp/fpc_sensor_pal.c:57:0: style: The function 'FpcFree' is never used. [unusedFunction]

^
driver/fingerprint/fpc/libfp/fpc_sensor_pal.c:52:0: style: The function 'FpcMalloc' is never used. [unusedFunction]

^
common/hotword_dsp_api.c:27:0: style: The function 'GoogleHotwordDspGetMaximumAudioPreambleMs' is never used. [unusedFunction]

^
common/hotword_dsp_api.c:32:0: style: The function 'GoogleHotwordVersion' is never used. [unusedFunction]

^
core/host/main.c:80:0: style: The function 'LLVMFuzzerTestOneInput' is never used. [unusedFunction]

^
core/cortex-m/llsr.c:17:0: style: The function '__aeabi_llsr' is never used. [unusedFunction]

^
chip/nrf51/i2c.c:31:0: style: The function '__board_i2c_post_init' is never used. [unusedFunction]

^
common/clz.c:17:0: style: The function '__clzsi2' is never used. [unusedFunction]

^
common/ctz.c:20:0: style: The function '__ctzsi2' is never used. [unusedFunction]

^
chip/npcx/system-npcx5.c:65:0: style: The function '__enter_hibernate_in_lpram' is never used. [unusedFunction]

^
core/cortex-m0/__builtin.c:13:0: style: The function '__ffssi2' is never used. [unusedFunction]

^
chip/npcx/system-npcx5.c:128:0: style: The function '__hibernate_npcx_series' is never used. [unusedFunction]

^
chip/ish/hwtimer.c:178:0: style: The function '__hw_clock_event_clear' is never used. [unusedFunction]

^
chip/lm4/hwtimer.c:70:0: style: The function '__hw_clock_source_init' is never used. [unusedFunction]

^
chip/ish/hwtimer.c:215:0: style: The function '__hw_clock_source_init64' is never used. [unusedFunction]

^
chip/ish/hwtimer.c:188:0: style: The function '__hw_clock_source_read64' is never used. [unusedFunction]

^
chip/ish/hwtimer.c:193:0: style: The function '__hw_clock_source_set64' is never used. [unusedFunction]

^
chip/stm32/system.c:40:0: style: The function '__no_hibernate' is never used. [unusedFunction]

^
core/cortex-m0/task.c:202:0: style: The function '__svc_handler' is never used. [unusedFunction]

^
util/kconfig/menu.c:41:0: style: The function '_menu_init' is never used. [unusedFunction]

^
chip/stm32/usb_dwc.c:448:0: style: The function 'accept_out_fifo' is never used. [unusedFunction]

^
chip/stm32/adc-stm32f3.c:68:0: style: The function 'adc_configure_all' is never used. [unusedFunction]

^
chip/npcx/adc.c:164:0: style: The function 'adc_read_data' is never used. [unusedFunction]

^
board/dooly/board.c:248:0: style: The function 'adp_connect_interrupt' is never used. [unusedFunction]

^
board/fizz/board.c:106:0: style: The function 'adp_in' is never used. [unusedFunction]

^
driver/temp_sensor/adt7481.c:70:0: style: The function 'adt7481_get_val' is never used. [unusedFunction]

^
driver/temp_sensor/adt7481.c:139:0: style: The function 'adt7481_set_therm_limit' is never used. [unusedFunction]

^
common/aes.c:742:0: style: The function 'aes_nohw_decrypt' is never used. [unusedFunction]

^
common/aes.c:681:0: style: The function 'aes_nohw_encrypt' is never used. [unusedFunction]

^
common/aes.c:632:0: style: The function 'aes_nohw_set_decrypt_key' is never used. [unusedFunction]

^
common/aes.c:536:0: style: The function 'aes_nohw_set_encrypt_key' is never used. [unusedFunction]

^
common/test_util.c:41:0: style: The function 'after_test' is never used. [unusedFunction]

^
driver/als_al3010.c:14:0: style: The function 'al3010_init' is never used. [unusedFunction]

^
driver/als_al3010.c:30:0: style: The function 'al3010_read_lux' is never used. [unusedFunction]

^
board/pdeval-stm32f072/board.c:24:0: style: The function 'alert_event' is never used. [unusedFunction]

^
board/mchpevb1/board.c:160:0: style: The function 'all_sys_pwrgd_interrupt' is never used. [unusedFunction]

^
common/als.c:37:0: style: The function 'als_task' is never used. [unusedFunction]

^
driver/tcpm/anx7447.c:489:0: style: The function 'anx7447_tcpc_clear_hpd_status' is never used. [unusedFunction]

^
baseboard/grunt/baseboard.c:204:0: style: The function 'anx74xx_cable_det_interrupt' is never used. [unusedFunction]

^
driver/tcpm/anx74xx.c:202:0: style: The function 'anx74xx_tcpc_set_vbus' is never used. [unusedFunction]

^
chip/npcx/apm.c:275:0: style: The function 'apm_adc_config' is never used. [unusedFunction]

^
chip/npcx/apm.c:527:0: style: The function 'apm_auto_gain_cntrl_enable' is never used. [unusedFunction]

^
chip/npcx/apm.c:353:0: style: The function 'apm_digital_mixer_config' is never used. [unusedFunction]

^
chip/npcx/apm.c:342:0: style: The function 'apm_get_adc_i2s_dmic_rate' is never used. [unusedFunction]

^
chip/npcx/apm.c:320:0: style: The function 'apm_get_adc_ram_dmic_rate' is never used. [unusedFunction]

^
chip/npcx/apm.c:418:0: style: The function 'apm_get_vad_dmic_rate' is never used. [unusedFunction]

^
chip/npcx/apm.c:464:0: style: The function 'apm_get_vad_sensitivity' is never used. [unusedFunction]

^
chip/npcx/apm.c:167:0: style: The function 'apm_init' is never used. [unusedFunction]

^
chip/npcx/apm.c:331:0: style: The function 'apm_set_adc_i2s_dmic_config' is never used. [unusedFunction]

^
chip/npcx/apm.c:309:0: style: The function 'apm_set_adc_ram_dmic_config' is never used. [unusedFunction]

^
chip/npcx/apm.c:621:0: style: The function 'apm_set_mode' is never used. [unusedFunction]

^
chip/npcx/apm.c:406:0: style: The function 'apm_set_vad_dmic_rate' is never used. [unusedFunction]

^
chip/npcx/apm.c:430:0: style: The function 'apm_set_vad_input_channel' is never used. [unusedFunction]

^
chip/npcx/apm.c:385:0: style: The function 'apm_vad_adc_wakeup_enable' is never used. [unusedFunction]

^
common/audio_codec.c:125:0: style: The function 'audio_codec_register_shm' is never used. [unusedFunction]

^
common/audio_codec_wov.c:348:0: style: The function 'audio_codec_wov_task' is never used. [unusedFunction]

^
driver/led/oz554.c:101:0: style: The function 'backlight_enable_interrupt' is never used. [unusedFunction]

^
cts/meta/dut.c:38:0: style: The function 'bad_sync_both_test' is never used. [unusedFunction]

^
cts/meta/dut.c:33:0: style: The function 'bad_sync_test' is never used. [unusedFunction]

^
board/cheza/base_detect.c:162:0: style: The function 'base_detect_interrupt' is never used. [unusedFunction]

^
board/nocturne/base_detect.c:348:0: style: The function 'base_pwr_fault_interrupt' is never used. [unusedFunction]

^
baseboard/dedede/baseboard.c:194:0: style: The function 'baseboard_all_sys_pgood_interrupt' is never used. [unusedFunction]

^
baseboard/fwk/battery.c:72:0: style: The function 'battery_charger_notify' is never used. [unusedFunction]

^
baseboard/fwk/battery.c:142:0: style: The function 'battery_customize' is never used. [unusedFunction]

^
driver/battery/max17055.c:336:0: style: The function 'battery_get_avg_current' is never used. [unusedFunction]

^
driver/battery/max17055.c:342:0: style: The function 'battery_get_avg_voltage' is never used. [unusedFunction]

^
common/battery.c:548:0: style: The function 'battery_memmap_refresh' is never used. [unusedFunction]

^
driver/battery/smart.c:199:0: style: The function 'battery_run_time_to_empty' is never used. [unusedFunction]

^
board/host/battery.c:47:0: style: The function 'battery_time_at_rate' is never used. [unusedFunction]

^
board/servo_v4p1/board.c:157:0: style: The function 'bc12_evt' is never used. [unusedFunction]

^
baseboard/volteer/baseboard.c:173:0: style: The function 'bc12_interrupt' is never used. [unusedFunction]

^
common/test_util.c:38:0: style: The function 'before_test' is never used. [unusedFunction]

^
board/samus/extpower.c:420:0: style: The function 'bkboost_det_interrupt' is never used. [unusedFunction]

^
common/btle_ll.c:759:0: style: The function 'bluetooth_ll_task' is never used. [unusedFunction]

^
chip/ish/power_mgt.c:816:0: style: The function 'bme_fall_isr' is never used. [unusedFunction]

^
chip/ish/power_mgt.c:811:0: style: The function 'bme_rise_isr' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:720:0: style: The function 'bmi_enable_fifo' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:794:0: style: The function 'bmi_get_normalized_rate' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:622:0: style: The function 'bmi_get_offset' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:608:0: style: The function 'bmi_get_range' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:692:0: style: The function 'bmi_get_resolution' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:665:0: style: The function 'bmi_get_rms_noise' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:708:0: style: The function 'bmi_get_scale' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:442:0: style: The function 'bmi_load_fifo' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:739:0: style: The function 'bmi_read' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:214:0: style: The function 'bmi_read16' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:264:0: style: The function 'bmi_read32' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:772:0: style: The function 'bmi_read_temp' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:865:0: style: The function 'bmi_set_accel_offset' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:884:0: style: The function 'bmi_set_gyro_offset' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:583:0: style: The function 'bmi_set_range' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:697:0: style: The function 'bmi_set_scale' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:236:0: style: The function 'bmi_write16' is never used. [unusedFunction]

^
driver/accelgyro_bmi_common.c:308:0: style: The function 'bmi_write_n' is never used. [unusedFunction]

^
driver/mag_bmm150.c:83:0: style: The function 'bmm150_init' is never used. [unusedFunction]

^
driver/mag_bmm150.c:250:0: style: The function 'bmm150_set_offset' is never used. [unusedFunction]

^
board/poppy/base_detect_lux.c:200:0: style: The function 'board_base_reset' is never used. [unusedFunction]

^
board/coral/battery.c:672:0: style: The function 'board_battery_initialized' is never used. [unusedFunction]

^
board/nuwani/board.c:185:0: style: The function 'board_bmi160_lsm6dsm_interrupt' is never used. [unusedFunction]

^
test/charge_manager.c:69:0: style: The function 'board_charge_manager_override_timeout' is never used. [unusedFunction]

^
board/coachz/board.c:99:0: style: The function 'board_connect_c0_sbu' is never used. [unusedFunction]

^
board/nami/board.c:1093:0: style: The function 'board_critical_shutdown_check' is never used. [unusedFunction]

^
baseboard/intelrvp/chg_usb_pd.c:132:0: style: The function 'board_dc_jack_interrupt' is never used. [unusedFunction]

^
board/burnet/board.c:211:0: style: The function 'board_discharge_on_ac' is never used. [unusedFunction]

^
board/plankton/board.c:651:0: style: The function 'board_fake_pd_adc_read' is never used. [unusedFunction]

^
board/fennel/board.c:487:0: style: The function 'board_get_battery_i2c' is never used. [unusedFunction]

^
board/careena/board.c:75:0: style: The function 'board_get_ps8xxx_product_id' is never used. [unusedFunction]

^
board/nautilus/board.c:524:0: style: The function 'board_get_ramp_current_limit' is never used. [unusedFunction]

^
baseboard/octopus/baseboard.c:218:0: style: The function 'board_get_vbus_adc' is never used. [unusedFunction]

^
board/helios/board.c:120:0: style: The function 'board_gmr_tablet_switch_isr' is never used. [unusedFunction]

^
board/hammer/board.c:239:0: style: The function 'board_has_keyboard_backlight' is never used. [unusedFunction]

^
board/mchpevb1/board.c:299:0: style: The function 'board_i2c_slave_addrs' is never used. [unusedFunction]

^
board/arcada_ish/board.c:195:0: style: The function 'board_idle_task' is never used. [unusedFunction]

^
board/poppy/base_detect_lux.c:82:0: style: The function 'board_is_base_connected' is never used. [unusedFunction]

^
board/reef_mchp/board.c:778:0: style: The function 'board_is_consuming_full_charge' is never used. [unusedFunction]

^
board/boldar/board.c:111:0: style: The function 'board_is_tbt_usb4_port' is never used. [unusedFunction]

^
board/palkia/keyboard_customization.c:45:0: style: The function 'board_keyboard_drive_col' is never used. [unusedFunction]

^
board/helios/board.c:99:0: style: The function 'board_lid_interrupt' is never used. [unusedFunction]

^
baseboard/zork/variant_trembyle.c:330:0: style: The function 'board_pd_set_frs_enable' is never used. [unusedFunction]

^
board/hx20/board.c:319:0: style: The function 'board_prepare_for_deep_sleep' is never used. [unusedFunction]

^
board/hammer/board.c:309:0: style: The function 'board_read_serial' is never used. [unusedFunction]

^
board/hx20/board.c:342:0: style: The function 'board_resume_from_deep_sleep' is never used. [unusedFunction]

^
board/arcada_ish/board.c:155:0: style: The function 'board_sensor_at_360' is never used. [unusedFunction]

^
board/nami/board.c:1103:0: style: The function 'board_set_battery_level_shutdown' is never used. [unusedFunction]

^
board/berknip/board.c:562:0: style: The function 'board_usbc_port_to_hpd_gpio' is never used. [unusedFunction]

^
board/hammer/board.c:328:0: style: The function 'board_write_serial' is never used. [unusedFunction]

^
board/fusb307bgevb/board.c:136:0: style: The function 'button_down_event' is never used. [unusedFunction]

^
board/fusb307bgevb/board.c:57:0: style: The function 'button_enter_event' is never used. [unusedFunction]

^
common/button.c:233:0: style: The function 'button_reassign_gpio' is never used. [unusedFunction]

^
board/fusb307bgevb/board.c:86:0: style: The function 'button_refresh_event' is never used. [unusedFunction]

^
board/drawcia/board.c:124:0: style: The function 'button_sub_hdmi_hpd_interrupt' is never used. [unusedFunction]

^
board/boten/board.c:59:0: style: The function 'c0_ccsbu_ovp_interrupt' is never used. [unusedFunction]

^
power/cometlake-discrete.c:389:0: style: The function 'c10_gate_interrupt' is never used. [unusedFunction]

^
board/dalboz/board.c:56:0: style: The function 'c1_ppc_interrupt' is never used. [unusedFunction]

^
board/dalboz/board.c:48:0: style: The function 'c1_tcpc_interrupt' is never used. [unusedFunction]

^
core/minute-ia/interrupts.c:422:0: style: The function 'call_irq_service_routine' is never used. [unusedFunction]

^
common/capsense.c:83:0: style: The function 'capsense_interrupt' is never used. [unusedFunction]

^
board/twinkie/board.c:21:0: style: The function 'cc2_event' is never used. [unusedFunction]

^
chip/npcx/cec.c:1016:0: style: The function 'cec_task' is never used. [unusedFunction]

^
common/charge_manager.c:1174:0: style: The function 'charge_manager_get_charger_current' is never used. [unusedFunction]

^
common/charge_manager.c:1166:0: style: The function 'charge_manager_get_selected_charge_port' is never used. [unusedFunction]

^
chip/stm32/charger_detect.c:37:0: style: The function 'charger_detect_get_device_type' is never used. [unusedFunction]

^
common/charger.c:256:0: style: The function 'charger_post_init' is never used. [unusedFunction]

^
baseboard/kukui/battery_max17055.c:121:0: style: The function 'charger_profile_override' is never used. [unusedFunction]

^
baseboard/kukui/battery_max17055.c:263:0: style: The function 'charger_profile_override_get_param' is never used. [unusedFunction]

^
baseboard/kukui/battery_max17055.c:269:0: style: The function 'charger_profile_override_set_param' is never used. [unusedFunction]

^
common/charger.c:304:0: style: The function 'charger_set_mode' is never used. [unusedFunction]

^
board/hx20/board.c:714:0: style: The function 'chassis_control_interrupt' is never used. [unusedFunction]

^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:2938:0: style: The function 'check_drp_connection' is never used. [unusedFunction]

^
common/charge_ramp_sw.c:148:0: style: The function 'chg_ramp_task' is never used. [unusedFunction]

^
board/servo_v4p1/chg_control.c:15:0: style: The function 'chg_reset' is never used. [unusedFunction]

^
chip/it83xx/system.c:195:0: style: The function 'chip_bram_valid' is never used. [unusedFunction]

^
chip/mchp/i2c.c:216:0: style: The function 'chip_i2c_get_ctx_flags' is never used. [unusedFunction]

^
chip/mchp/i2c.c:193:0: style: The function 'chip_i2c_get_slave_data_idx' is never used. [unusedFunction]

^
power/sc7180.c:183:0: style: The function 'chipset_ap_rst_interrupt' is never used. [unusedFunction]

^
power/sc7180.c:266:0: style: The function 'chipset_power_good_interrupt' is never used. [unusedFunction]

^
power/mt8183.c:120:0: style: The function 'chipset_reset_request_interrupt' is never used. [unusedFunction]

^
board/host/chipset.c:60:0: style: The function 'chipset_task' is never used. [unusedFunction]

^
power/sc7180.c:222:0: style: The function 'chipset_warm_reset_interrupt' is never used. [unusedFunction]

^
power/mt8183.c:138:0: style: The function 'chipset_watchdog_interrupt' is never used. [unusedFunction]

^
util/kconfig/qconf.cc:1740:0: style: The function 'closeEvent' is never used. [unusedFunction]

^
util/uut/cmd.c:471:0: style: The function 'cmd_disp_exec_ret' is never used. [unusedFunction]

^
util/uut/cmd.c:411:0: style: The function 'cmd_disp_flash_erase_dev' is never used. [unusedFunction]

^
util/uut/cmd.c:432:0: style: The function 'cmd_disp_flash_erase_sect' is never used. [unusedFunction]

^
util/uut/cmd.c:304:0: style: The function 'cmd_disp_sync' is never used. [unusedFunction]

^
common/util.c:595:0: style: The function 'cond_set' is never used. [unusedFunction]

^
common/util.c:608:0: style: The function 'cond_went' is never used. [unusedFunction]

^
common/console.c:651:0: style: The function 'console_task' is never used. [unusedFunction]

^
chip/mt_scp/memmap.c:107:0: style: The function 'cpu_clean_invalidate_dcache_range' is never used. [unusedFunction]

^
chip/mt_scp/memmap.c:78:0: style: The function 'cpu_invalidate_dcache_range' is never used. [unusedFunction]

^
common/aes-gcm.c:874:0: style: The function 'crypto_gcm_clmul_enabled' is never used. [unusedFunction]

^
board/stm32l476g-eval/board.c:17:0: style: The function 'cts_irq' is never used. [unusedFunction]

^
board/nucleo-f072rb/board.c:24:0: style: The function 'cts_irq1' is never used. [unusedFunction]

^
board/nucleo-f072rb/board.c:25:0: style: The function 'cts_irq2' is never used. [unusedFunction]

^
cts/gpio/dut.c:76:0: style: The function 'cts_task' is never used. [unusedFunction]

^
board/hx20/cypress5525.c:1285:0: style: The function 'cypd_interrupt_handler_task' is never used. [unusedFunction]

^
board/hx20/cypress5525.c:450:0: style: The function 'cypd_reset_source_ports' is never used. [unusedFunction]

^
board/hx20/cypress5525.c:556:0: style: The function 'cypd_set_source_pdo_mask' is never used. [unusedFunction]

^
chip/ish/power_mgt.c:806:0: style: The function 'd3_fall_isr' is never used. [unusedFunction]

^
chip/ish/power_mgt.c:801:0: style: The function 'd3_rise_isr' is never used. [unusedFunction]

^
core/cortex-m/vecttable.c:23:0: style: The function 'default_handler' is never used. [unusedFunction]

^
common/device_state.c:24:0: style: The function 'device_get_state' is never used. [unusedFunction]

^
common/device_state.c:29:0: style: The function 'device_set_state' is never used. [unusedFunction]

^
cts/meta/dut.c:53:0: style: The function 'did_not_start_test' is never used. [unusedFunction]

^
board/kukui_scp/isp_p2_srv.c:61:0: style: The function 'dip_service_task' is never used. [unusedFunction]

^
driver/sensorhub_lsm6dsm.c:83:0: style: The function 'disable_aux_i2c_master' is never used. [unusedFunction]

^
chip/mchp/dma.c:223:0: style: The function 'dma_bytes_done_chan' is never used. [unusedFunction]

^
chip/mchp/dma.c:285:0: style: The function 'dma_cfg_buffers' is never used. [unusedFunction]

^
chip/mchp/dma.c:304:0: style: The function 'dma_cfg_xfr' is never used. [unusedFunction]

^
chip/mchp/dma.c:324:0: style: The function 'dma_clr_chan' is never used. [unusedFunction]

^
chip/mchp/dma.c:43:0: style: The function 'dma_disable_all' is never used. [unusedFunction]

^
chip/stm32/dma-stm32f4.c:267:0: style: The function 'dma_enable_tc_interrupt' is never used. [unusedFunction]

^
chip/it83xx/flash.c:168:0: style: The function 'dma_flash_read_dat' is never used. [unusedFunction]

^
chip/mchp/dma.c:336:0: style: The function 'dma_run' is never used. [unusedFunction]

^
chip/mchp/dma.c:126:0: style: The function 'dma_xfr_prepare_tx' is never used. [unusedFunction]

^
board/servo_v4p1/ioexpanders.c:243:0: style: The function 'dongle_det' is never used. [unusedFunction]

^
board/servo_v4p1/board.c:119:0: style: The function 'dp_evt' is never used. [unusedFunction]

^
board/mchpevb1/board.c:829:0: style: The function 'ds1624_get_val' is never used. [unusedFunction]

^
board/eve/board.c:102:0: style: The function 'dsp_interrupt' is never used. [unusedFunction]

^
driver/temp_sensor/ec_adc.c:43:0: style: The function 'ec_adc_get_val' is never used. [unusedFunction]

^
baseboard/volteer/cbi_ec_fw_config.c:42:0: style: The function 'ec_cfg_has_keyboard_backlight' is never used. [unusedFunction]

^
baseboard/zork/cbi_ec_fw_config.c:38:0: style: The function 'ec_config_get_usb_mb' is never used. [unusedFunction]

^
baseboard/zork/cbi_ec_fw_config.c:56:0: style: The function 'ec_config_has_base_gyro_sensor' is never used. [unusedFunction]

^
baseboard/zork/cbi_ec_fw_config.c:47:0: style: The function 'ec_config_has_lid_accel_sensor' is never used. [unusedFunction]

^
common/ec_ec_comm_slave.c:208:0: style: The function 'ec_ec_comm_slave_task' is never used. [unusedFunction]

^
common/ec_ec_comm_master.c:323:0: style: The function 'ec_ec_master_base_charge_control' is never used. [unusedFunction]

^
common/ec_ec_comm_master.c:243:0: style: The function 'ec_ec_master_base_get_dynamic_info' is never used. [unusedFunction]

^
common/ec_ec_comm_master.c:283:0: style: The function 'ec_ec_master_base_get_static_info' is never used. [unusedFunction]

^
common/ec_ec_comm_master.c:349:0: style: The function 'ec_ec_master_hibernate' is never used. [unusedFunction]

^
util/ec_flash.c:42:0: style: The function 'ec_flash_verify' is never used. [unusedFunction]

^
baseboard/kukui/emmc.c:185:0: style: The function 'emmc_cmd_interrupt' is never used. [unusedFunction]

^
baseboard/kukui/emmc.c:311:0: style: The function 'emmc_task' is never used. [unusedFunction]

^
board/servo_v4p1/ioexpanders.c:258:0: style: The function 'en_pp3300_dp' is never used. [unusedFunction]

^
board/servo_v4p1/ioexpanders.c:253:0: style: The function 'en_pp3300_eth' is never used. [unusedFunction]

^
common/usb_pd_policy.c:173:0: style: The function 'enable_enter_usb4_mode' is never used. [unusedFunction]

^
core/nds32/task.c:364:0: style: The function 'end_irq_handler' is never used. [unusedFunction]

^
chip/stm32/usb_endpoints.c:34:0: style: The function 'ep_evt_undefined' is never used. [unusedFunction]

^
chip/stm32/usb_endpoints.c:29:0: style: The function 'ep_undefined' is never used. [unusedFunction]

^
chip/it83xx/espi.c:437:0: style: The function 'espi_reset_pin_asserted_interrupt' is never used. [unusedFunction]

^
common/usb_pd_protocol.c:2368:0: style: The function 'exit_supported_alt_mode' is never used. [unusedFunction]

^
util/kconfig/preprocess.c:491:0: style: The function 'expand_dollar' is never used. [unusedFunction]

^
util/kconfig/preprocess.c:572:0: style: The function 'expand_one_token' is never used. [unusedFunction]

^
board/samus/extpower.c:74:0: style: The function 'extpower_interrupt' is never used. [unusedFunction]

^
board/samus/extpower.c:386:0: style: The function 'extpower_task' is never used. [unusedFunction]

^
chip/ish/system.c:209:0: style: The function 'fabric_isr' is never used. [unusedFunction]

^
core/nds32/math.c:30:0: style: The function 'fabsf' is never used. [unusedFunction]

^
cts/meta/dut.c:28:0: style: The function 'fail_both_test' is never used. [unusedFunction]

^
cts/meta/dut.c:18:0: style: The function 'fail_dut_test' is never used. [unusedFunction]

^
cts/meta/dut.c:23:0: style: The function 'fail_th_test' is never used. [unusedFunction]

^
chip/it83xx/fan.c:419:0: style: The function 'fan_ext_timer_interrupt' is never used. [unusedFunction]

^
board/kukui_scp/fd.c:64:0: style: The function 'fd_service_task' is never used. [unusedFunction]

^
util/kconfig/util.c:13:0: style: The function 'file_lookup' is never used. [unusedFunction]

^
board/hx20/board.c:1204:0: style: The function 'fingerprint_power_button_interrupt' is never used. [unusedFunction]

^
common/flash.c:186:0: style: The function 'flash_bank_count' is never used. [unusedFunction]

^
common/mock/fp_sensor_mock.c:65:0: style: The function 'fp_enrollment_begin' is never used. [unusedFunction]

^
common/mock/fp_sensor_mock.c:70:0: style: The function 'fp_enrollment_finish' is never used. [unusedFunction]

^
common/mock/fp_sensor_mock.c:75:0: style: The function 'fp_finger_enroll' is never used. [unusedFunction]

^
common/mock/fp_sensor_mock.c:58:0: style: The function 'fp_finger_match' is never used. [unusedFunction]

^
common/mock/fp_sensor_mock.c:80:0: style: The function 'fp_maintenance' is never used. [unusedFunction]

^
common/fpsensor/fpsensor_state.c:92:0: style: The function 'fp_reset_and_clear_context' is never used. [unusedFunction]

^
common/mock/fp_sensor_mock.c:48:0: style: The function 'fp_sensor_acquire_image' is never used. [unusedFunction]

^
common/mock/fp_sensor_mock.c:53:0: style: The function 'fp_sensor_acquire_image_with_mode' is never used. [unusedFunction]

^
common/mock/fp_sensor_mock.c:39:0: style: The function 'fp_sensor_configure_detect' is never used. [unusedFunction]

^
common/mock/fp_sensor_mock.c:43:0: style: The function 'fp_sensor_finger_status' is never used. [unusedFunction]

^
common/mock/fp_sensor_mock.c:29:0: style: The function 'fp_sensor_get_info' is never used. [unusedFunction]

^
common/fpsensor/fpsensor.c:200:0: style: The function 'fp_task' is never used. [unusedFunction]

^
common/fpsensor/fpsensor_state.c:58:0: style: The function 'fp_task_simulate' is never used. [unusedFunction]

^
driver/fingerprint/fpc/bep/fpc_misc.c:33:0: style: The function 'fpc_assert_fail' is never used. [unusedFunction]

^
driver/fingerprint/fpc/bep/fpc_misc.c:27:0: style: The function 'fpc_free' is never used. [unusedFunction]

^
driver/fingerprint/fpc/bep/fpc_misc.c:38:0: style: The function 'fpc_log_var' is never used. [unusedFunction]

^
driver/fingerprint/fpc/bep/fpc_misc.c:14:0: style: The function 'fpc_malloc' is never used. [unusedFunction]

^
driver/fingerprint/fpc/libfp/fpc_sensor_pal.c:30:0: style: The function 'fpc_pal_delay_us' is never used. [unusedFunction]

^
driver/fingerprint/fpc/libfp/fpc_sensor_pal.c:20:0: style: The function 'fpc_pal_log_entry' is never used. [unusedFunction]

^
driver/fingerprint/fpc/libfp/fpc_sensor_pal.c:39:0: style: The function 'fpc_pal_spi_writeread' is never used. [unusedFunction]

^
driver/fingerprint/fpc/libfp/fpc_sensor_pal.c:46:0: style: The function 'fpc_pal_wait_irq' is never used. [unusedFunction]

^
driver/fingerprint/fpc/bep/fpc_sensor_spi.c:71:0: style: The function 'fpc_sensor_spi_check_irq' is never used. [unusedFunction]

^
driver/fingerprint/fpc/bep/fpc_sensor_spi.c:86:0: style: The function 'fpc_sensor_spi_init' is never used. [unusedFunction]

^
driver/fingerprint/fpc/bep/fpc_sensor_spi.c:76:0: style: The function 'fpc_sensor_spi_read_irq' is never used. [unusedFunction]

^
driver/fingerprint/fpc/bep/fpc_sensor_spi.c:81:0: style: The function 'fpc_sensor_spi_reset' is never used. [unusedFunction]

^
driver/fingerprint/fpc/bep/fpc_sensor_spi.c:32:0: style: The function 'fpc_sensor_spi_write_read' is never used. [unusedFunction]

^
driver/fingerprint/fpc/bep/fpc_sensor_spi.c:90:0: style: The function 'fpc_sensor_wfi' is never used. [unusedFunction]

^
driver/fingerprint/fpc/bep/fpc_timebase.c:22:0: style: The function 'fpc_timebase_busy_wait' is never used. [unusedFunction]

^
driver/fingerprint/fpc/bep/fpc_timebase.c:13:0: style: The function 'fpc_timebase_get_tick' is never used. [unusedFunction]

^
driver/fingerprint/fpc/bep/fpc_timebase.c:27:0: style: The function 'fpc_timebase_init' is never used. [unusedFunction]

^
board/hatch_fp/board.c:30:0: style: The function 'fps_event' is never used. [unusedFunction]

^
common/update_fw.c:218:0: style: The function 'fw_update_command_handler' is never used. [unusedFunction]

^
common/update_fw.c:325:0: style: The function 'fw_update_complete' is never used. [unusedFunction]

^
driver/temp_sensor/g78x.c:73:0: style: The function 'g78x_get_val' is never used. [unusedFunction]

^
board/flapjack/board.c:218:0: style: The function 'gauge_interrupt' is never used. [unusedFunction]

^
common/gesture.c:301:0: style: The function 'gesture_calc' is never used. [unusedFunction]

^
baseboard/volteer/cbi_ec_fw_config.c:27:0: style: The function 'get_fw_config' is never used. [unusedFunction]

^
common/host_event_commands.c:789:0: style: The function 'get_lazy_wake_mask' is never used. [unusedFunction]

^
util/export_taskinfo.c:38:0: style: The function 'get_ro_taskinfos' is never used. [unusedFunction]

^
chip/ish/aontaskfw/ish_aontask.c:528:0: style: The function 'get_rtc' is never used. [unusedFunction]

^
chip/stm32/clock-f.c:277:0: style: The function 'get_rtc_alarm' is never used. [unusedFunction]

^
util/export_taskinfo.c:38:0: style: The function 'get_rw_taskinfos' is never used. [unusedFunction]

^
driver/temp_sensor/thermistor.c:195:0: style: The function 'get_temp_6v0_51k1_47k_4050b' is never used. [unusedFunction]

^
common/usb_pd_policy.c:116:0: style: The function 'get_usb_pd_cable_revision' is never used. [unusedFunction]

^
test/fake_usbc.c:165:0: style: The function 'get_usb_pd_mux_cable_type' is never used. [unusedFunction]

^
chip/mchp/gpio.c:214:0: style: The function 'gpio_power_off' is never used. [unusedFunction]

^
chip/mchp/gpio.c:201:0: style: The function 'gpio_power_off_by_mask' is never used. [unusedFunction]

^
common/gpio.c:229:0: style: The function 'gpio_set_wakepin' is never used. [unusedFunction]

^
chip/mchp/gpspi.c:223:0: style: The function 'gpspi_enable' is never used. [unusedFunction]

^
chip/mchp/gpspi.c:93:0: style: The function 'gpspi_transaction_async' is never used. [unusedFunction]

^
chip/mchp/gpspi.c:164:0: style: The function 'gpspi_transaction_flush' is never used. [unusedFunction]

^
chip/mchp/gpspi.c:205:0: style: The function 'gpspi_transaction_wait' is never used. [unusedFunction]

^
board/halvor/board.c:317:0: style: The function 'halvor_bc12_interrupt' is never used. [unusedFunction]

^
board/halvor/board.c:300:0: style: The function 'halvor_ppc_interrupt' is never used. [unusedFunction]

^
board/halvor/board.c:278:0: style: The function 'halvor_tcpc_alert_event' is never used. [unusedFunction]

^
core/minute-ia/interrupts.c:342:0: style: The function 'handle_lapic_lvt_error' is never used. [unusedFunction]

^
cts/meta/dut.c:43:0: style: The function 'hang_test' is never used. [unusedFunction]

^
common/btle_hci_controller.c:286:0: style: The function 'hci_acl_from_host' is never used. [unusedFunction]

^
common/btle_hci_controller.c:273:0: style: The function 'hci_acl_to_host' is never used. [unusedFunction]

^
board/ezkinil/board.c:459:0: style: The function 'hdmi_hpd_interrupt_v2' is never used. [unusedFunction]

^
board/morphius/board.c:740:0: style: The function 'hdmi_hpd_interrupt_v3' is never used. [unusedFunction]

^
driver/touchpad_st.c:1670:0: style: The function 'heatmap_task' is never used. [unusedFunction]

^
chip/ish/heci.c:269:0: style: The function 'heci_get_client_data' is never used. [unusedFunction]

^
chip/ish/heci.c:996:0: style: The function 'heci_rx_task' is never used. [unusedFunction]

^
chip/ish/heci.c:255:0: style: The function 'heci_set_client_data' is never used. [unusedFunction]

^
board/hx20/i2c_hid_mediakeys.c:363:0: style: The function 'hid_handler_task' is never used. [unusedFunction]

^
chip/ish/hid_subsys.c:208:0: style: The function 'hid_subsys_get_device_data' is never used. [unusedFunction]

^
chip/ish/hid_subsys.c:121:0: style: The function 'hid_subsys_register_device' is never used. [unusedFunction]

^
chip/ish/hid_subsys.c:155:0: style: The function 'hid_subsys_send_input_report' is never used. [unusedFunction]

^
chip/ish/hid_subsys.c:195:0: style: The function 'hid_subsys_set_device_data' is never used. [unusedFunction]

^
chip/stm32/usb_hid_touchpad.c:419:0: style: The function 'hid_touchpad_iface_request' is never used. [unusedFunction]

^
common/hooks.c:175:0: style: The function 'hook_task' is never used. [unusedFunction]

^
common/motion_lid.c:500:0: style: The function 'host_cmd_motion_lid' is never used. [unusedFunction]

^
common/host_command.c:440:0: style: The function 'host_command_task' is never used. [unusedFunction]

^
common/host_event_commands.c:357:0: style: The function 'host_is_event_set' is never used. [unusedFunction]

^
board/servo_v4p1/pathsel.c:49:0: style: The function 'host_to_dut' is never used. [unusedFunction]

^
board/coffeecake/board.c:79:0: style: The function 'hpd_event' is never used. [unusedFunction]

^
board/servo_v4/board.c:107:0: style: The function 'hpd_evt' is never used. [unusedFunction]

^
board/servo_v4p1/board.c:152:0: style: The function 'hub_evt' is never used. [unusedFunction]

^
chip/stm32/hwtimer32.c:295:0: style: The function 'hwtimer_reset_watchdog' is never used. [unusedFunction]

^
chip/stm32/hwtimer32.c:258:0: style: The function 'hwtimer_setup_watchdog' is never used. [unusedFunction]

^
board/hx20/i2c_hid_mediakeys.c:318:0: style: The function 'i2c_data_received' is never used. [unusedFunction]

^
common/i2c_master.c:241:0: style: The function 'i2c_prepare_sysjump' is never used. [unusedFunction]

^
board/hx20/i2c_hid_mediakeys.c:326:0: style: The function 'i2c_set_response' is never used. [unusedFunction]

^
driver/accelgyro_icm_common.c:243:0: style: The function 'icm_field_update8' is never used. [unusedFunction]

^
driver/accelgyro_icm_common.c:353:0: style: The function 'icm_fifo_decode_packet' is never used. [unusedFunction]

^
driver/accelgyro_icm_common.c:292:0: style: The function 'icm_get_data_rate' is never used. [unusedFunction]

^
driver/accelgyro_icm_common.c:285:0: style: The function 'icm_get_range' is never used. [unusedFunction]

^
driver/accelgyro_icm_common.c:280:0: style: The function 'icm_get_resolution' is never used. [unusedFunction]

^
driver/accelgyro_icm_common.c:310:0: style: The function 'icm_get_scale' is never used. [unusedFunction]

^
driver/accelgyro_icm_common.c:142:0: style: The function 'icm_read16' is never used. [unusedFunction]

^
driver/accelgyro_icm_common.c:80:0: style: The function 'icm_read8' is never used. [unusedFunction]

^
driver/accelgyro_icm_common.c:216:0: style: The function 'icm_read_n' is never used. [unusedFunction]

^
driver/accelgyro_icm_common.c:299:0: style: The function 'icm_set_scale' is never used. [unusedFunction]

^
driver/accelgyro_icm_common.c:179:0: style: The function 'icm_write16' is never used. [unusedFunction]

^
driver/accelgyro_icm_common.c:112:0: style: The function 'icm_write8' is never used. [unusedFunction]

^
chip/stm32/usb_endpoints.c:40:0: style: The function 'iface_undefined' is never used. [unusedFunction]

^
common/init_rom.c:65:0: style: The function 'init_rom_copy' is never used. [unusedFunction]

^
common/init_rom.c:15:0: style: The function 'init_rom_map' is never used. [unusedFunction]

^
common/init_rom.c:59:0: style: The function 'init_rom_unmap' is never used. [unusedFunction]

^
power/intel_x86.c:488:0: style: The function 'intel_x86_rsmrst_signal_interrupt' is never used. [unusedFunction]

^
driver/ioexpander/it8801.c:193:0: style: The function 'io_expander_it8801_interrupt' is never used. [unusedFunction]

^
common/ioexpander.c:96:0: style: The function 'ioex_disable_interrupt' is never used. [unusedFunction]

^
chip/ish/ipc_heci.c:479:0: style: The function 'ipc_host2ish_combined_isr' is never used. [unusedFunction]

^
chip/ish/ipc_heci.c:694:0: style: The function 'ipc_mng_task' is never used. [unusedFunction]

^
chip/mt8192_scp/ipi_table.c:20:0: style: The function 'ipi_handler_undefined' is never used. [unusedFunction]

^
common/usb_pd_policy.c:143:0: style: The function 'is_sop_prime_ready' is never used. [unusedFunction]

^
chip/ish/dma.c:158:0: style: The function 'ish_dma_disable' is never used. [unusedFunction]

^
chip/ish/dma.c:73:0: style: The function 'ish_dma_init' is never used. [unusedFunction]

^
board/kukui_scp/isp_p1_srv.c:64:0: style: The function 'isp_service_task' is never used. [unusedFunction]

^
common/util.c:52:0: style: The function 'isupper' is never used. [unusedFunction]

^
board/asurada/it5205_sbu.c:63:0: style: The function 'it5205h_sbu_interrupt' is never used. [unusedFunction]

^
driver/tcpm/it83xx.c:54:0: style: The function 'it83xx_Rd_5_1K_only_for_hibernate' is never used. [unusedFunction]

^
driver/tcpm/it8xxx2.c:176:0: style: The function 'it83xx_clear_tx_error_status' is never used. [unusedFunction]

^
driver/tcpm/it8xxx2.c:181:0: style: The function 'it83xx_get_tx_error_status' is never used. [unusedFunction]

^
driver/ioexpander/it8801.c:487:0: style: The function 'it8801_pwm_get_enabled' is never used. [unusedFunction]

^
board/samus/board.c:411:0: style: The function 'jtag_interrupt' is never used. [unusedFunction]

^
common/keyboard_scan.c:1007:0: style: The function 'keyboard_get_keyboard_id' is never used. [unusedFunction]

^
common/keyboard_8042.c:223:0: style: The function 'keyboard_host_write_avaliable' is never used. [unusedFunction]

^
common/keyboard_8042.c:895:0: style: The function 'keyboard_protocol_task' is never used. [unusedFunction]

^
chip/host/keyboard_raw.c:41:0: style: The function 'keyboard_raw_gpio_interrupt' is never used. [unusedFunction]

^
common/keyboard_scan.c:767:0: style: The function 'keyboard_scan_task' is never used. [unusedFunction]

^
common/keyboard_mkbp.c:427:0: style: The function 'keyboard_send_battery_key' is never used. [unusedFunction]

^
common/keyboard_test.c:91:0: style: The function 'keyscan_seq_next_event_delay' is never used. [unusedFunction]

^
common/lb_common.c:281:0: style: The function 'lb_get_brightness' is never used. [unusedFunction]

^
common/lb_common.c:258:0: style: The function 'lb_get_rgb' is never used. [unusedFunction]

^
common/lb_common.c:333:0: style: The function 'lb_hc_cmd_dump' is never used. [unusedFunction]

^
common/lb_common.c:352:0: style: The function 'lb_hc_cmd_reg' is never used. [unusedFunction]

^
common/lb_common.c:306:0: style: The function 'lb_off' is never used. [unusedFunction]

^
common/lb_common.c:316:0: style: The function 'lb_on' is never used. [unusedFunction]

^
board/samus/power_sequence.c:516:0: style: The function 'lb_power' is never used. [unusedFunction]

^
extra/lightbar/main.c:167:0: style: The function 'lb_read_params_from_file' is never used. [unusedFunction]

^
common/lb_common.c:271:0: style: The function 'lb_set_brightness' is never used. [unusedFunction]

^
board/fusb307bgevb/lcd.c:101:0: style: The function 'lcd_disable_backlight' is never used. [unusedFunction]

^
board/fusb307bgevb/lcd.c:89:0: style: The function 'lcd_disable_display' is never used. [unusedFunction]

^
board/fusb307bgevb/lcd.c:107:0: style: The function 'lcd_enable_backlight' is never used. [unusedFunction]

^
board/eve/led.c:592:0: style: The function 'led_task' is never used. [unusedFunction]

^
driver/accel_lis2dw12.c:208:0: style: The function 'lis2dw12_interrupt' is never used. [unusedFunction]

^
driver/accel_lis2dw12.c:216:0: style: The function 'lis2dw12_irq_handler' is never used. [unusedFunction]

^
common/btle_ll.c:75:0: style: The function 'll_set_tx_power' is never used. [unusedFunction]

^
driver/led/lm3630a.c:83:0: style: The function 'lm3630a_poweroff' is never used. [unusedFunction]

^
driver/led/lm3630a.c:23:0: style: The function 'lm3630a_read' is never used. [unusedFunction]

^
cts/mutex/dut.c:63:0: style: The function 'lock_unlock_test' is never used. [unusedFunction]

^
driver/led/lp5562.c:71:0: style: The function 'lp5562_engine_control' is never used. [unusedFunction]

^
driver/led/lp5562.c:43:0: style: The function 'lp5562_engine_load' is never used. [unusedFunction]

^
driver/led/lp5562.c:83:0: style: The function 'lp5562_get_engine_state' is never used. [unusedFunction]

^
driver/led/lp5562.c:110:0: style: The function 'lp5562_get_pc' is never used. [unusedFunction]

^
driver/led/lp5562.c:38:0: style: The function 'lp5562_set_engine' is never used. [unusedFunction]

^
driver/led/lp5562.c:118:0: style: The function 'lp5562_set_pc' is never used. [unusedFunction]

^
chip/lm4/lpc.c:324:0: style: The function 'lpc_comx_put_char' is never used. [unusedFunction]

^
chip/it83xx/lpc.c:748:0: style: The function 'lpc_disable_acpi_interrupts' is never used. [unusedFunction]

^
chip/it83xx/lpc.c:742:0: style: The function 'lpc_enable_acpi_interrupts' is never used. [unusedFunction]

^
common/host_event_commands.c:590:0: style: The function 'lpc_is_active_wm_set_by_host' is never used. [unusedFunction]

^
chip/mchp/lpc.c:639:0: style: The function 'lpc_set_init_done' is never used. [unusedFunction]

^
chip/it83xx/lpc.c:730:0: style: The function 'lpcrst_interrupt' is never used. [unusedFunction]

^
board/hx20/board.c:1139:0: style: The function 'mainboard_power_button_interrupt' is never used. [unusedFunction]

^
board/kukui_scp/mdp_ipi_message.c:61:0: style: The function 'mdp_service_task' is never used. [unusedFunction]

^
chip/mt_scp/memmap.c:293:0: style: The function 'memmap_ap_to_scp_cache' is never used. [unusedFunction]

^
chip/mt_scp/memmap.c:308:0: style: The function 'memmap_scp_cache_to_ap' is never used. [unusedFunction]

^
chip/mt8192_scp/memmap.c:101:0: style: The function 'memmap_scp_to_ap' is never used. [unusedFunction]

^
util/kconfig/menu.c:106:0: style: The function 'menu_add_dep' is never used. [unusedFunction]

^
util/kconfig/menu.c:47:0: style: The function 'menu_add_entry' is never used. [unusedFunction]

^
util/kconfig/menu.c:188:0: style: The function 'menu_add_expr' is never used. [unusedFunction]

^
util/kconfig/menu.c:65:0: style: The function 'menu_add_menu' is never used. [unusedFunction]

^
util/kconfig/menu.c:215:0: style: The function 'menu_add_option_allnoconfig_y' is never used. [unusedFunction]

^
util/kconfig/menu.c:206:0: style: The function 'menu_add_option_defconfig_list' is never used. [unusedFunction]

^
util/kconfig/menu.c:198:0: style: The function 'menu_add_option_modules' is never used. [unusedFunction]

^
util/kconfig/menu.c:177:0: style: The function 'menu_add_prompt' is never used. [unusedFunction]

^
util/kconfig/menu.c:182:0: style: The function 'menu_add_visibility' is never used. [unusedFunction]

^
util/kconfig/menu.c:71:0: style: The function 'menu_end_menu' is never used. [unusedFunction]

^
util/kconfig/menu.c:671:0: style: The function 'menu_get_root_menu' is never used. [unusedFunction]

^
common/keyboard_mkbp.c:199:0: style: The function 'mkbp_clear_fifo' is never used. [unusedFunction]

^
test/vpd_api.c:213:0: style: The function 'mock_get_cc1_rpusb_odh' is never used. [unusedFunction]

^
test/vpd_api.c:243:0: style: The function 'mock_get_cfg_cc1_rp3a0_rd_l' is never used. [unusedFunction]

^
test/vpd_api.c:198:0: style: The function 'mock_get_cfg_cc2_rp3a0_rd_l' is never used. [unusedFunction]

^
test/vpd_api.c:184:0: style: The function 'mock_get_cfg_cc2_rpusb_odh' is never used. [unusedFunction]

^
test/vpd_api.c:109:0: style: The function 'mock_get_ct_cc2_rpusb' is never used. [unusedFunction]

^
test/vpd_api.c:149:0: style: The function 'mock_get_green_led' is never used. [unusedFunction]

^
test/vpd_api.c:144:0: style: The function 'mock_get_red_led' is never used. [unusedFunction]

^
test/vpd_api.c:99:0: style: The function 'mock_get_vconn_pwr_source' is never used. [unusedFunction]

^
test/usb_tcpmv2_tcpci.c:40:0: style: The function 'mock_set_role' is never used. [unusedFunction]

^
common/motion_lid.c:484:0: style: The function 'motion_lid_calc' is never used. [unusedFunction]

^
common/motion_sense.c:863:0: style: The function 'motion_sense_task' is never used. [unusedFunction]

^
baseboard/fwk/ps2mouse.c:464:0: style: The function 'mouse_interrupt_handler_task' is never used. [unusedFunction]

^
board/morphius/board.c:707:0: style: The function 'mst_hpd_interrupt' is never used. [unusedFunction]

^
driver/charger/rt946x.c:251:0: style: The function 'mt6370_pmu_reg_test_bit' is never used. [unusedFunction]

^
test/mutex.c:62:0: style: The function 'mutex_main_task' is never used. [unusedFunction]

^
cts/mutex/dut.c:24:0: style: The function 'mutex_random_task' is never used. [unusedFunction]

^
cts/mutex/dut.c:44:0: style: The function 'mutex_second_task' is never used. [unusedFunction]

^
driver/ioexpander/ioexpander_nct38xx.c:441:0: style: The function 'nct38xx_ioex_handle_alert' is never used. [unusedFunction]

^
driver/tcpm/nct38xx.c:162:0: style: The function 'nct38xx_tcpm_set_snk_ctrl' is never used. [unusedFunction]

^
core/nds32/task.c:292:0: style: The function 'next_sched_task' is never used. [unusedFunction]

^
common/usb_pd_alt_mode_dfp.c:648:0: style: The function 'notify_sysjump_ready' is never used. [unusedFunction]

^
chip/npcx/lct.c:63:0: style: The function 'npcx_lct_config' is never used. [unusedFunction]

^
chip/npcx/lct.c:35:0: style: The function 'npcx_lct_enable_clk' is never used. [unusedFunction]

^
chip/npcx/lct.c:105:0: style: The function 'npcx_lct_is_event_set' is never used. [unusedFunction]

^
chip/npcx/lct.c:22:0: style: The function 'npcx_lct_sel_power_src' is never used. [unusedFunction]

^
common/ocpc.c:112:0: style: The function 'ocpc_config_secondary_charger' is never used. [unusedFunction]

^
common/ocpc.c:433:0: style: The function 'ocpc_init' is never used. [unusedFunction]

^
cts/gpio/dut.c:61:0: style: The function 'od_read_high_test' is never used. [unusedFunction]

^
util/kconfig/qconf.cc:96:0: style: The function 'okRename' is never used. [unusedFunction]

^
util/kconfig/gconf.c:669:0: style: The function 'on_about1_activate' is never used. [unusedFunction]

^
util/kconfig/gconf.c:706:0: style: The function 'on_back_clicked' is never used. [unusedFunction]

^
util/kconfig/gconf.c:763:0: style: The function 'on_collapse_clicked' is never used. [unusedFunction]

^
util/kconfig/gconf.c:769:0: style: The function 'on_expand_clicked' is never used. [unusedFunction]

^
util/kconfig/gconf.c:752:0: style: The function 'on_full_clicked' is never used. [unusedFunction]

^
util/kconfig/gconf.c:638:0: style: The function 'on_introduction1_activate' is never used. [unusedFunction]

^
util/kconfig/gconf.c:687:0: style: The function 'on_license1_activate' is never used. [unusedFunction]

^
util/kconfig/gconf.c:721:0: style: The function 'on_load_clicked' is never used. [unusedFunction]

^
util/kconfig/gconf.c:564:0: style: The function 'on_quit1_activate' is never used. [unusedFunction]

^
util/kconfig/gconf.c:544:0: style: The function 'on_save_as1_activate' is never used. [unusedFunction]

^
util/kconfig/gconf.c:612:0: style: The function 'on_set_option_mode1_activate' is never used. [unusedFunction]

^
util/kconfig/gconf.c:621:0: style: The function 'on_set_option_mode2_activate' is never used. [unusedFunction]

^
util/kconfig/gconf.c:630:0: style: The function 'on_set_option_mode3_activate' is never used. [unusedFunction]

^
util/kconfig/gconf.c:600:0: style: The function 'on_show_data1_activate' is never used. [unusedFunction]

^
util/kconfig/gconf.c:571:0: style: The function 'on_show_name1_activate' is never used. [unusedFunction]

^
util/kconfig/gconf.c:582:0: style: The function 'on_show_range1_activate' is never used. [unusedFunction]

^
util/kconfig/gconf.c:727:0: style: The function 'on_single_clicked' is never used. [unusedFunction]

^
util/kconfig/gconf.c:736:0: style: The function 'on_split_clicked' is never used. [unusedFunction]

^
util/kconfig/gconf.c:997:0: style: The function 'on_treeview1_button_press_event' is never used. [unusedFunction]

^
util/kconfig/gconf.c:879:0: style: The function 'on_treeview2_button_press_event' is never used. [unusedFunction]

^
util/kconfig/gconf.c:981:0: style: The function 'on_treeview2_cursor_changed' is never used. [unusedFunction]

^
util/kconfig/gconf.c:936:0: style: The function 'on_treeview2_key_press_event' is never used. [unusedFunction]

^
util/kconfig/gconf.c:459:0: style: The function 'on_window1_destroy' is never used. [unusedFunction]

^
util/kconfig/gconf.c:466:0: style: The function 'on_window1_size_request' is never used. [unusedFunction]

^
common/onewire.c:127:0: style: The function 'onewire_read' is never used. [unusedFunction]

^
common/onewire.c:101:0: style: The function 'onewire_reset' is never used. [unusedFunction]

^
common/onewire.c:138:0: style: The function 'onewire_write' is never used. [unusedFunction]

^
board/rainier/board.c:52:0: style: The function 'overtemp_interrupt' is never used. [unusedFunction]

^
driver/wpc/p9221.c:231:0: style: The function 'p9221_interrupt' is never used. [unusedFunction]

^
common/panic_output.c:119:0: style: The function 'panic_assert_fail' is never used. [unusedFunction]

^
extra/usb_updater/desc_parser.c:337:0: style: The function 'parser_done' is never used. [unusedFunction]

^
board/samus_pd/board.c:177:0: style: The function 'pch_evt' is never used. [unusedFunction]

^
board/hx20/cypress5525.c:1196:0: style: The function 'pd0_chip_interrupt' is never used. [unusedFunction]

^
board/hx20/cypress5525.c:1215:0: style: The function 'pd1_chip_interrupt' is never used. [unusedFunction]

^
common/usb_common.c:854:0: style: The function 'pd_build_alert_msg' is never used. [unusedFunction]

^
common/usb_pd_dual_role.c:336:0: style: The function 'pd_charge_from_device' is never used. [unusedFunction]

^
baseboard/dragonegg/usb_pd_policy.c:25:0: style: The function 'pd_check_vconn_swap' is never used. [unusedFunction]

^
common/host_command_pd.c:210:0: style: The function 'pd_command_task' is never used. [unusedFunction]

^
common/usb_pd_protocol.c:2333:0: style: The function 'pd_dev_store_rw_hash' is never used. [unusedFunction]

^
board/hx20/cypress5525.c:122:0: style: The function 'pd_extpower_is_present_interrupt' is never used. [unusedFunction]

^
common/host_command_pd.c:40:0: style: The function 'pd_get_active_charge_port' is never used. [unusedFunction]

^
chip/host/usb_pd_phy.c:356:0: style: The function 'pd_hw_release' is never used. [unusedFunction]

^
common/usbc_intr_task.c:41:0: style: The function 'pd_interrupt_handler_task' is never used. [unusedFunction]

^
common/usb_common.c:237:0: style: The function 'pd_is_debug_acc' is never used. [unusedFunction]

^
baseboard/ite_evb/usb_pd_policy.c:46:0: style: The function 'pd_is_max_request_allowed' is never used. [unusedFunction]

^
common/usb_pd_dual_role.c:349:0: style: The function 'pd_is_try_source_capable' is never used. [unusedFunction]

^
board/coffeecake/usb_pd_policy.c:64:0: style: The function 'pd_is_valid_input_voltage' is never used. [unusedFunction]

^
common/pd_log.c:37:0: style: The function 'pd_log_recv_vdm' is never used. [unusedFunction]

^
board/elm/board.c:59:0: style: The function 'pd_mcu_interrupt' is never used. [unusedFunction]

^
board/hx20/cypress5525.c:1406:0: style: The function 'pd_port_configuration_change' is never used. [unusedFunction]

^
common/usb_pd_alt_mode_dfp.c:138:0: style: The function 'pd_prepare_sysjump' is never used. [unusedFunction]

^
common/mock/usb_pd_mock.c:88:0: style: The function 'pd_request_vconn_swap_off' is never used. [unusedFunction]

^
common/mock/usb_pd_mock.c:91:0: style: The function 'pd_request_vconn_swap_on' is never used. [unusedFunction]

^
test/usb_pd.c:299:0: style: The function 'pd_snk_give_back' is never used. [unusedFunction]

^
board/servo_v4/usb_pd_policy.c:371:0: style: The function 'pd_tcpc_cc_nc' is never used. [unusedFunction]

^
board/servo_v4/usb_pd_policy.c:398:0: style: The function 'pd_tcpc_cc_ra' is never used. [unusedFunction]

^
chip/host/usb_pd_phy.c:103:0: style: The function 'pd_test_rx_msg_append_sop_prime_prime' is never used. [unusedFunction]

^
chip/host/usb_pd_phy.c:180:0: style: The function 'pd_test_tx_msg_verify_sop_prime_prime' is never used. [unusedFunction]

^
common/usb_pd_tcpc.c:1223:0: style: The function 'pd_vbus_evt_p0' is never used. [unusedFunction]

^
test/usb_pd.c:119:0: style: The function 'pd_vdm' is never used. [unusedFunction]

^
common/usbc/usb_prl_sm.c:753:0: style: The function 'pdmsg_xmit_type_is_rev30' is never used. [unusedFunction]

^
common/usbc/usb_pe_drp_sm.c:5914:0: style: The function 'pe_dr_snk_get_sink_cap_entry' is never used. [unusedFunction]

^
common/usbc/usb_pe_drp_sm.c:5923:0: style: The function 'pe_dr_snk_get_sink_cap_run' is never used. [unusedFunction]

^
test/usb_pd_console.c:37:0: style: The function 'pe_send_vdm' is never used. [unusedFunction]

^
common/usbc/usb_pe_drp_sm.c:1210:0: style: The function 'pe_vconn_swap_complete' is never used. [unusedFunction]

^
board/hx20/peci_customization.c:20:0: style: The function 'peci_Rd_Pkg_Config' is never used. [unusedFunction]

^
chip/it83xx/peci.c:196:0: style: The function 'peci_interrupt' is never used. [unusedFunction]

^
board/drawcia/board.c:140:0: style: The function 'pen_detect_interrupt' is never used. [unusedFunction]

^
baseboard/kukui/base_detect_kukui.c:172:0: style: The function 'pogo_adc_interrupt' is never used. [unusedFunction]

^
board/dooly/board.c:191:0: style: The function 'port_ocp_interrupt' is never used. [unusedFunction]

^
board/atlas/board.c:374:0: style: The function 'power_board_handle_host_sleep_event' is never used. [unusedFunction]

^
board/hx20/power_button_x86.c:502:0: style: The function 'power_button_task' is never used. [unusedFunction]

^
test/powerdemo.c:172:0: style: The function 'power_demo_task' is never used. [unusedFunction]

^
chip/stm32/power_led.c:104:0: style: The function 'power_led_task' is never used. [unusedFunction]

^
board/servo_v4p1/ina231s.c:46:0: style: The function 'pp_chg_current' is never used. [unusedFunction]

^
board/servo_v4p1/ina231s.c:51:0: style: The function 'pp_chg_power' is never used. [unusedFunction]

^
board/servo_v4p1/ina231s.c:41:0: style: The function 'pp_chg_voltage' is never used. [unusedFunction]

^
board/servo_v4p1/ina231s.c:31:0: style: The function 'pp_dut_current' is never used. [unusedFunction]

^
board/servo_v4p1/ina231s.c:36:0: style: The function 'pp_dut_power' is never used. [unusedFunction]

^
board/servo_v4p1/ina231s.c:26:0: style: The function 'pp_dut_voltage' is never used. [unusedFunction]

^
common/usbc_ppc.c:75:0: style: The function 'ppc_add_oc_event' is never used. [unusedFunction]

^
common/usbc_ppc.c:333:0: style: The function 'ppc_set_frs_enable' is never used. [unusedFunction]

^
chip/nrf51/ppi.c:45:0: style: The function 'ppi_release_channel' is never used. [unusedFunction]

^
chip/nrf51/ppi.c:50:0: style: The function 'ppi_release_group' is never used. [unusedFunction]

^
chip/nrf51/ppi.c:55:0: style: The function 'ppi_request_group' is never used. [unusedFunction]

^
chip/nrf51/ppi.c:16:0: style: The function 'ppi_request_pre_programmed_channel' is never used. [unusedFunction]

^
test/rollback_entropy.c:68:0: style: The function 'print_rollback' is never used. [unusedFunction]

^
common/mock/usb_prl_mock.c:42:0: style: The function 'prl_end_ams' is never used. [unusedFunction]

^
board/morphius/board.c:585:0: style: The function 'ps2_pwr_en_interrupt' is never used. [unusedFunction]

^
driver/usb_mux/ps8740.c:109:0: style: The function 'ps8740_tune_usb_eq' is never used. [unusedFunction]

^
driver/usb_mux/ps8743.c:118:0: style: The function 'ps8743_tune_usb_eq' is never used. [unusedFunction]

^
driver/retimer/ps8802.c:67:0: style: The function 'ps8802_i2c_write16' is never used. [unusedFunction]

^
driver/retimer/ps8818.c:19:0: style: The function 'ps8818_i2c_read' is never used. [unusedFunction]

^
driver/retimer/ps8818.c:36:0: style: The function 'ps8818_i2c_write' is never used. [unusedFunction]

^
chip/mchp/pwm.c:186:0: style: The function 'pwm_keep_awake' is never used. [unusedFunction]

^
common/queue_policies.c:12:0: style: The function 'queue_add_direct' is never used. [unusedFunction]

^
common/queue_policies.c:21:0: style: The function 'queue_remove_direct' is never used. [unusedFunction]

^
driver/charger/isl923x.c:88:0: style: The function 'raw_update16' is never used. [unusedFunction]

^
cts/i2c/dut.c:57:0: style: The function 'read16_test' is never used. [unusedFunction]

^
cts/i2c/dut.c:72:0: style: The function 'read32_test' is never used. [unusedFunction]

^
cts/i2c/dut.c:42:0: style: The function 'read8_test' is never used. [unusedFunction]

^
cts/gpio/dut.c:35:0: style: The function 'read_high_test' is never used. [unusedFunction]

^
cts/gpio/dut.c:48:0: style: The function 'read_low_test' is never used. [unusedFunction]

^
board/servo_v4p1/pi3usb9201.c:27:0: style: The function 'read_pi3usb9201' is never used. [unusedFunction]

^
common/usb_common.c:67:0: style: The function 'remote_flashing' is never used. [unusedFunction]

^
core/cortex-m/panic.c:290:0: style: The function 'report_panic' is never used. [unusedFunction]

^
chip/mchp/i2c.c:360:0: style: The function 'restart_slave' is never used. [unusedFunction]

^
common/util.c:439:0: style: The function 'reverse' is never used. [unusedFunction]

^
extra/rma_reset/rma_reset.c:373:0: style: The function 'rma_try_authcode' is never used. [unusedFunction]

^
common/mock/rollback_mock.c:31:0: style: The function 'rollback_get_secret' is never used. [unusedFunction]

^
driver/charger/rt946x.c:1606:0: style: The function 'rt946x_enable_charger_boost' is never used. [unusedFunction]

^
common/rwsig.c:40:0: style: The function 'rwsig_jump_now' is never used. [unusedFunction]

^
chip/stm32/usb_dwc_stream.c:21:0: style: The function 'rx_stream_handler' is never used. [unusedFunction]

^
board/mchpevb1/board.c:816:0: style: The function 'sb_temp' is never used. [unusedFunction]

^
baseboard/zork/baseboard.c:249:0: style: The function 'sbu_fault_interrupt' is never used. [unusedFunction]

^
board/servo_v4p1/ioexpanders.c:171:0: style: The function 'sbu_uart_sel' is never used. [unusedFunction]

^
chip/stm32/clock-f.c:161:0: style: The function 'sec_to_rtc' is never used. [unusedFunction]

^
common/usbc/usb_pe_drp_sm.c:821:0: style: The function 'send_ext_data_msg' is never used. [unusedFunction]

^
board/eve/board.c:813:0: style: The function 'sensor_board_proc_double_tap' is never used. [unusedFunction]

^
chip/stm32/usb.c:128:0: style: The function 'set_descriptor_patch' is never used. [unusedFunction]

^
cts/gpio/dut.c:19:0: style: The function 'set_high_test' is never used. [unusedFunction]

^
cts/gpio/dut.c:27:0: style: The function 'set_low_test' is never used. [unusedFunction]

^
chip/npcx/shi.c:833:0: style: The function 'shi_cs_event' is never used. [unusedFunction]

^
driver/als_si114x.c:168:0: style: The function 'si114x_interrupt' is never used. [unusedFunction]

^
board/hatch_fp/board.c:57:0: style: The function 'slp_event' is never used. [unusedFunction]

^
power/cometlake-discrete.c:407:0: style: The function 'slp_s3_interrupt' is never used. [unusedFunction]

^
board/twinkie/sniffer.c:293:0: style: The function 'sniffer_task' is never used. [unusedFunction]

^
board/servo_v4p1/board.c:184:0: style: The function 'snk_task' is never used. [unusedFunction]

^
board/hx20/cypress5525.c:1236:0: style: The function 'soc_plt_reset_interrupt' is never used. [unusedFunction]

^
board/hx20/board.c:705:0: style: The function 'soc_signal_interrupt' is never used. [unusedFunction]

^
chip/it83xx/spi.c:226:0: style: The function 'spi_event' is never used. [unusedFunction]

^
common/spi_nor.c:504:0: style: The function 'spi_nor_init' is never used. [unusedFunction]

^
common/spi_nor.c:620:0: style: The function 'spi_nor_read_jedec_id' is never used. [unusedFunction]

^
common/spi_nor.c:107:0: style: The function 'spi_nor_write_ear' is never used. [unusedFunction]

^
chip/it83xx/spi.c:236:0: style: The function 'spi_slv_int_handler' is never used. [unusedFunction]

^
board/servo_v4p1/ina231s.c:61:0: style: The function 'sr_chg_current' is never used. [unusedFunction]

^
board/servo_v4p1/ina231s.c:66:0: style: The function 'sr_chg_power' is never used. [unusedFunction]

^
board/servo_v4p1/ina231s.c:56:0: style: The function 'sr_chg_voltage' is never used. [unusedFunction]

^
chip/npcx/spiflashfw/npcx_monitor.c:264:0: style: The function 'sspi_flash_upload' is never used. [unusedFunction]

^
driver/touchpad_st.c:1752:0: style: The function 'st_tp_usb_set_interface' is never used. [unusedFunction]

^
driver/touchpad_st.c:1665:0: style: The function 'st_tp_usb_tx_callback' is never used. [unusedFunction]

^
core/nds32/task.c:337:0: style: The function 'start_irq_handler' is never used. [unusedFunction]

^
chip/stm32/ucpd-stm32gx.c:182:0: style: The function 'stm32gx_ucpd_get_role_control' is never used. [unusedFunction]

^
board/waddledoo/board.c:75:0: style: The function 'sub_hdmi_hpd_interrupt' is never used. [unusedFunction]

^
board/madoo/board.c:69:0: style: The function 'sub_usb_c1_interrupt' is never used. [unusedFunction]

^
cts/meta/dut.c:13:0: style: The function 'success_test' is never used. [unusedFunction]

^
core/minute-ia/task.c:213:0: style: The function 'switch_handler' is never used. [unusedFunction]

^
common/switch.c:103:0: style: The function 'switch_interrupt' is never used. [unusedFunction]

^
driver/tcpm/it83xx.c:767:0: style: The function 'switch_plug_out_type' is never used. [unusedFunction]

^
board/lazor/board.c:108:0: style: The function 'switchcap_interrupt' is never used. [unusedFunction]

^
driver/charger/sy21612.c:161:0: style: The function 'sy21612_int' is never used. [unusedFunction]

^
driver/charger/sy21612.c:107:0: style: The function 'sy21612_is_power_good' is never used. [unusedFunction]

^
driver/charger/sy21612.c:117:0: style: The function 'sy21612_read_clear_int' is never used. [unusedFunction]

^
driver/charger/sy21612.c:77:0: style: The function 'sy21612_set_switching_freq' is never used. [unusedFunction]

^
driver/charger/sy21612.c:91:0: style: The function 'sy21612_set_vbus_adj' is never used. [unusedFunction]

^
driver/charger/sy21612.c:169:0: style: The function 'sy21612_task' is never used. [unusedFunction]

^
driver/sync.c:69:0: style: The function 'sync_interrupt' is never used. [unusedFunction]

^
cts/gpio/dut.c:14:0: style: The function 'sync_test' is never used. [unusedFunction]

^
core/nds32/task.c:258:0: style: The function 'syscall_handler' is never used. [unusedFunction]

^
chip/host/system.c:198:0: style: The function 'system_get_chip_name' is never used. [unusedFunction]

^
chip/host/system.c:203:0: style: The function 'system_get_chip_revision' is never used. [unusedFunction]

^
chip/host/system.c:193:0: style: The function 'system_get_chip_vendor' is never used. [unusedFunction]

^
chip/it83xx/system.c:404:0: style: The function 'system_get_fw_reset_vector' is never used. [unusedFunction]

^
chip/ish/system.c:169:0: style: The function 'system_get_lfw_address' is never used. [unusedFunction]

^
chip/npcx/system.c:705:0: style: The function 'system_get_rtc_alarm' is never used. [unusedFunction]

^
chip/ish/system.c:174:0: style: The function 'system_set_image_copy' is never used. [unusedFunction]

^
board/coral/board.c:123:0: style: The function 'tablet_mode_interrupt' is never used. [unusedFunction]

^
cts/task/dut.c:21:0: style: The function 'task_abc' is never used. [unusedFunction]

^
core/cortex-m/task.c:1028:0: style: The function 'task_clear_fp_used' is never used. [unusedFunction]

^
core/cortex-m0/task.c:306:0: style: The function 'task_end_irq_handler' is never used. [unusedFunction]

^
core/cortex-m/task.c:389:0: style: The function 'task_resched_if_needed' is never used. [unusedFunction]

^
core/cortex-m/task.c:361:0: style: The function 'task_start_irq_handler' is never used. [unusedFunction]

^
test/flash.c:497:0: style: The function 'task_test' is never used. [unusedFunction]

^
cts/task/dut.c:44:0: style: The function 'task_tick' is never used. [unusedFunction]

^
test/timer_dos.c:35:0: style: The function 'task_timer' is never used. [unusedFunction]

^
common/usbc/tbt_alt_mode.c:116:0: style: The function 'tbt_teardown' is never used. [unusedFunction]

^
common/mock/usb_tc_sm_mock.c:78:0: style: The function 'tc_check_vconn_swap' is never used. [unusedFunction]

^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:916:0: style: The function 'tc_disc_ident_complete' is never used. [unusedFunction]

^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:911:0: style: The function 'tc_disc_ident_in_progress' is never used. [unusedFunction]

^
common/usbc/usb_tc_drp_acc_trysrc_sm.c:630:0: style: The function 'tc_enable_try_src' is never used. [unusedFunction]

^
common/usbc/usb_tc_ctvpd_sm.c:157:0: style: The function 'tc_get_polarity' is never used. [unusedFunction]

^
test/fake_usbc.c:90:0: style: The function 'tc_hard_reset_complete' is never used. [unusedFunction]

^
test/usb_pd_console.c:78:0: style: The function 'tc_print_dev_info' is never used. [unusedFunction]

^
test/fake_usbc.c:126:0: style: The function 'tc_set_timeout' is never used. [unusedFunction]

^
board/servo_v4p1/tca6424a.c:53:0: style: The function 'tca6424a_read_bit' is never used. [unusedFunction]

^
board/servo_v4p1/board.c:61:0: style: The function 'tca_evt' is never used. [unusedFunction]

^
board/servo_v4p1/board.c:147:0: style: The function 'tcpc_evt' is never used. [unusedFunction]

^
driver/tcpm/fusb302.c:1127:0: style: The function 'tcpc_get_vbus_voltage' is never used. [unusedFunction]

^
common/usb_pd_tcpc.c:1371:0: style: The function 'tcpc_i2c_process' is never used. [unusedFunction]

^
driver/tcpm/tcpci.c:575:0: style: The function 'tcpci_tcpm_get_snk_ctrl' is never used. [unusedFunction]

^
driver/tcpm/tcpci.c:596:0: style: The function 'tcpci_tcpm_get_src_ctrl' is never used. [unusedFunction]

^
driver/tcpm/fusb302.c:1010:0: style: The function 'tcpm_set_bist_test_data' is never used. [unusedFunction]

^
cts/interrupt/dut.c:127:0: style: The function 'test_interrupt_disable' is never used. [unusedFunction]

^
cts/interrupt/dut.c:118:0: style: The function 'test_interrupt_enable' is never used. [unusedFunction]

^
cts/interrupt/dut.c:158:0: style: The function 'test_nested_interrupt_high_low' is never used. [unusedFunction]

^
cts/interrupt/dut.c:137:0: style: The function 'test_nested_interrupt_low_high' is never used. [unusedFunction]

^
cts/task/dut.c:128:0: style: The function 'test_stack_overflow' is never used. [unusedFunction]

^
test/kb_scan.c:480:0: style: The function 'test_task' is never used. [unusedFunction]

^
cts/interrupt/dut.c:100:0: style: The function 'test_task_disable_irq' is never used. [unusedFunction]

^
cts/task/dut.c:86:0: style: The function 'test_task_priority' is never used. [unusedFunction]

^
cts/task/dut.c:55:0: style: The function 'test_task_switch' is never used. [unusedFunction]

^
cts/interrupt/dut.c:80:0: style: The function 'test_task_wait_event' is never used. [unusedFunction]

^
board/mchpevb1/board.c:419:0: style: The function 'therm_get_val' is never used. [unusedFunction]

^
common/throttle_ap.c:115:0: style: The function 'throttle_ap_prochot_input_interrupt' is never used. [unusedFunction]

^
test/timer_calib.c:19:0: style: The function 'timer_calib_task' is never used. [unusedFunction]

^
cts/timer/dut.c:13:0: style: The function 'timer_calibration_test' is never used. [unusedFunction]

^
driver/temp_sensor/tmp112.c:55:0: style: The function 'tmp112_get_val' is never used. [unusedFunction]

^
driver/temp_sensor/tmp411.c:67:0: style: The function 'tmp411_get_val' is never used. [unusedFunction]

^
driver/temp_sensor/tmp411.c:133:0: style: The function 'tmp411_set_therm_limit' is never used. [unusedFunction]

^
driver/temp_sensor/tmp432.c:144:0: style: The function 'tmp432_set_therm_limit' is never used. [unusedFunction]

^
driver/temp_sensor/tmp468.c:65:0: style: The function 'tmp468_get_val' is never used. [unusedFunction]

^
driver/temp_sensor/tmp468.c:97:0: style: The function 'tmp468_set_power' is never used. [unusedFunction]

^
driver/touchpad_elan.c:369:0: style: The function 'touchpad_get_info' is never used. [unusedFunction]

^
baseboard/fwk/ps2mouse.c:210:0: style: The function 'touchpad_i2c_interrupt' is never used. [unusedFunction]

^
baseboard/fwk/ps2mouse.c:223:0: style: The function 'touchpad_interrupt' is never used. [unusedFunction]

^
driver/touchpad_elan.c:732:0: style: The function 'touchpad_task' is never used. [unusedFunction]

^
driver/touchpad_elan.c:493:0: style: The function 'touchpad_update_write' is never used. [unusedFunction]

^
board/eve/board.c:96:0: style: The function 'trackpad_interrupt' is never used. [unusedFunction]

^
chip/stm32/usb_dwc_stream.c:44:0: style: The function 'tx_stream_handler' is never used. [unusedFunction]

^
board/servo_v4p1/ioexpanders.c:201:0: style: The function 'uart_18_sel' is never used. [unusedFunction]

^
chip/it83xx/uart.c:198:0: style: The function 'uart_deepsleep_interrupt' is never used. [unusedFunction]

^
chip/mchp/uart.c:105:0: style: The function 'uart_disable_interrupt' is never used. [unusedFunction]

^
chip/mchp/uart.c:110:0: style: The function 'uart_enable_interrupt' is never used. [unusedFunction]

^
chip/host/uart.c:123:0: style: The function 'uart_inject_char' is never used. [unusedFunction]

^
common/uart_buffering.c:328:0: style: The function 'uart_printf' is never used. [unusedFunction]

^
common/uart_buffering.c:291:0: style: The function 'uart_put' is never used. [unusedFunction]

^
chip/mt_scp/uart.c:123:0: style: The function 'uart_task' is never used. [unusedFunction]

^
chip/host/uart.c:86:0: style: The function 'uart_tx_stopped' is never used. [unusedFunction]

^
chip/max32660/uart_chip.c:154:0: style: The function 'uartn_is_rx_interrupt' is never used. [unusedFunction]

^
chip/max32660/uart_chip.c:159:0: style: The function 'uartn_is_tx_interrupt' is never used. [unusedFunction]

^
chip/npcx/uartn.c:110:0: style: The function 'uartn_rx_int_en' is never used. [unusedFunction]

^
core/minute-ia/interrupts.c:409:0: style: The function 'unhandled_vector' is never used. [unusedFunction]

^
common/bluetooth_le.c:120:0: style: The function 'unpack_adv' is never used. [unusedFunction]

^
chip/stm32/usart.c:168:0: style: The function 'usart_interrupt' is never used. [unusedFunction]

^
chip/stm32/usart_rx_dma.c:112:0: style: The function 'usart_rx_dma_info' is never used. [unusedFunction]

^
chip/stm32/usart_rx_dma.c:19:0: style: The function 'usart_rx_dma_init' is never used. [unusedFunction]

^
chip/stm32/usart_rx_dma.c:98:0: style: The function 'usart_rx_dma_interrupt' is never used. [unusedFunction]

^
chip/stm32/usart.c:112:0: style: The function 'usart_set_baud_f' is never used. [unusedFunction]

^
chip/stm32/usart_tx_dma.c:22:0: style: The function 'usart_tx_dma_init' is never used. [unusedFunction]

^
chip/stm32/usart_tx_dma.c:74:0: style: The function 'usart_tx_dma_interrupt' is never used. [unusedFunction]

^
chip/stm32/usart_tx_dma.c:14:0: style: The function 'usart_tx_dma_written' is never used. [unusedFunction]

^
chip/stm32/usart_tx_interrupt.c:84:0: style: The function 'usart_tx_start' is never used. [unusedFunction]

^
board/cheza/board.c:91:0: style: The function 'usb0_evt' is never used. [unusedFunction]

^
board/cheza/board.c:96:0: style: The function 'usb1_evt' is never used. [unusedFunction]

^
board/cheza/board.c:139:0: style: The function 'usb1_oc_evt' is never used. [unusedFunction]

^
board/servo_v4p1/pathsel.c:39:0: style: The function 'usb3_a0_to_host' is never used. [unusedFunction]

^
board/servo_v4p1/pathsel.c:44:0: style: The function 'usb3_a1_to_host' is never used. [unusedFunction]

^
board/boten/board.c:49:0: style: The function 'usb_c0_interrupt' is never used. [unusedFunction]

^
board/drawcia/board.c:112:0: style: The function 'usb_c1_interrupt' is never used. [unusedFunction]

^
board/nocturne/board.c:74:0: style: The function 'usb_c_interrupt' is never used. [unusedFunction]

^
common/usb_console_stream.c:136:0: style: The function 'usb_console_crc' is never used. [unusedFunction]

^
common/usb_console_stream.c:131:0: style: The function 'usb_console_crc_init' is never used. [unusedFunction]

^
chip/stm32/usb_console.c:270:0: style: The function 'usb_console_enable' is never used. [unusedFunction]

^
chip/stm32/usb_dwc.c:318:0: style: The function 'usb_epN_rx' is never used. [unusedFunction]

^
chip/stm32/usb_dwc.c:264:0: style: The function 'usb_epN_tx' is never used. [unusedFunction]

^
board/elm/board.c:67:0: style: The function 'usb_evt' is never used. [unusedFunction]

^
chip/stm32/usb_gpio.c:63:0: style: The function 'usb_gpio_event' is never used. [unusedFunction]

^
chip/stm32/usb_gpio.c:32:0: style: The function 'usb_gpio_rx' is never used. [unusedFunction]

^
chip/stm32/usb_gpio.c:12:0: style: The function 'usb_gpio_tx' is never used. [unusedFunction]

^
board/c2d2/board.c:206:0: style: The function 'usb_i2c_board_is_enabled' is never used. [unusedFunction]

^
chip/stm32/usb_isochronous.c:121:0: style: The function 'usb_isochronous_event' is never used. [unusedFunction]

^
chip/stm32/usb_isochronous.c:144:0: style: The function 'usb_isochronous_iface_handler' is never used. [unusedFunction]

^
chip/stm32/usb_isochronous.c:128:0: style: The function 'usb_isochronous_tx' is never used. [unusedFunction]

^
driver/usb_mux/usb_mux.c:258:0: style: The function 'usb_mux_flip' is never used. [unusedFunction]

^
chip/stm32/usb_power.c:705:0: style: The function 'usb_power_deferred_cap' is never used. [unusedFunction]

^
chip/stm32/usb_power.c:23:0: style: The function 'usb_power_deferred_rx' is never used. [unusedFunction]

^
chip/stm32/usb_power.c:32:0: style: The function 'usb_power_deferred_tx' is never used. [unusedFunction]

^
chip/stm32/usb_power.c:53:0: style: The function 'usb_power_event' is never used. [unusedFunction]

^
chip/stm32/usb_spi.c:351:0: style: The function 'usb_spi_deferred' is never used. [unusedFunction]

^
chip/stm32/usb_spi.c:554:0: style: The function 'usb_spi_event' is never used. [unusedFunction]

^
chip/stm32/usb_spi.c:585:0: style: The function 'usb_spi_interface' is never used. [unusedFunction]

^
chip/stm32/usb_spi.c:518:0: style: The function 'usb_spi_rx' is never used. [unusedFunction]

^
chip/stm32/usb_spi.c:541:0: style: The function 'usb_spi_tx' is never used. [unusedFunction]

^
chip/stm32/usb-stream.c:89:0: style: The function 'usb_stream_deferred' is never used. [unusedFunction]

^
chip/stm32/usb-stream.c:120:0: style: The function 'usb_stream_event' is never used. [unusedFunction]

^
chip/stm32/usb-stream.c:105:0: style: The function 'usb_stream_rx' is never used. [unusedFunction]

^
chip/stm32/usb-stream.c:98:0: style: The function 'usb_stream_tx' is never used. [unusedFunction]

^
chip/stm32/usb-stream.c:144:0: style: The function 'usb_usart_interface' is never used. [unusedFunction]

^
board/servo_v4p1/ioexpanders.c:304:0: style: The function 'usbh_pwrdn_l' is never used. [unusedFunction]

^
board/nucleo-f411re/board.c:23:0: style: The function 'user_button_evt' is never used. [unusedFunction]

^
board/servo_v4p1/pathsel.c:55:0: style: The function 'uservo_to_host' is never used. [unusedFunction]

^
util/kconfig/preprocess.c:280:0: style: The function 'variable_add' is never used. [unusedFunction]

^
util/kconfig/preprocess.c:333:0: style: The function 'variable_all_del' is never used. [unusedFunction]

^
common/vboot/efs2.c:241:0: style: The function 'vboot_main' is never used. [unusedFunction]

^
board/coffeecake/board.c:107:0: style: The function 'vbus_event' is never used. [unusedFunction]

^
board/oak/board.c:554:0: style: The function 'vbus_task' is never used. [unusedFunction]

^
board/kukui_scp/vdec.c:65:0: style: The function 'vdec_service_task' is never used. [unusedFunction]

^
board/kukui_scp/venc.c:63:0: style: The function 'venc_service_task' is never used. [unusedFunction]

^
common/version.c:66:0: style: The function 'ver_get_num_commits' is never used. [unusedFunction]

^
common/virtual_battery.c:37:0: style: The function 'virtual_battery_handler' is never used. [unusedFunction]

^
test/vpd_api.c:439:0: style: The function 'vpd_config_cc_vpdmcu' is never used. [unusedFunction]

^
board/chocodile_vpdmcu/vpd_api.c:441:0: style: The function 'vpd_green_led' is never used. [unusedFunction]

^
board/chocodile_vpdmcu/vpd_api.c:395:0: style: The function 'vpd_read_cc_vpdmcu' is never used. [unusedFunction]

^
board/chocodile_vpdmcu/vpd_api.c:431:0: style: The function 'vpd_read_rdconnect_ref' is never used. [unusedFunction]

^
board/chocodile_vpdmcu/vpd_api.c:436:0: style: The function 'vpd_red_led' is never used. [unusedFunction]

^
board/rainier/board.c:58:0: style: The function 'warm_reset_request_interrupt' is never used. [unusedFunction]

^
chip/mec1322/watchdog.c:76:0: style: The function 'watchdog_check' is never used. [unusedFunction]

^
chip/it83xx/watchdog.c:39:0: style: The function 'watchdog_warning_irq' is never used. [unusedFunction]

^
driver/wpc/p9221.c:780:0: style: The function 'wireless_power_charger_task' is never used. [unusedFunction]

^
board/nocturne_fp/ro_workarounds.c:58:0: style: The function 'wp_event' is never used. [unusedFunction]

^
cts/i2c/dut.c:26:0: style: The function 'write16_test' is never used. [unusedFunction]

^
cts/i2c/dut.c:34:0: style: The function 'write32_test' is never used. [unusedFunction]

^
cts/i2c/dut.c:18:0: style: The function 'write8_test' is never used. [unusedFunction]

^
board/servo_v4p1/pi3usb9201.c:21:0: style: The function 'write_pi3usb9201' is never used. [unusedFunction]

^
board/asurada/board.c:303:0: style: The function 'x_ec_interrupt' is never used. [unusedFunction]

^
zephyr/shim/src/console.c:68:0: style: The function 'zshim_run_ec_console_command' is never used. [unusedFunction]

^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingInclude]

